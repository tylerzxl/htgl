{"version":3,"sources":["webpack:///./node_modules/@mdf/cube/src/bizmodel/mtlapi.js","webpack:///./node_modules/@mdf/cube/src/bizmodel/mobile/yylist.js"],"names":["_getParams","params","data","cParameter","JSON","parse","_showPrompt","result","platform","cb","utils","alert","console","log","mtlScan","billNo","viewmodel","beforeAct","afterAct","newParams","needResult","parseInt","scanType","Array","isArray","scanQRCode","success","res","resultStr","invoker","publish","action","fail","err","message","mtlShare","upesn","showShareMenu","mtlPlatform","mtlNetworkType","getNetworkType","networkType","mtlGetMac","getMac","macAddress","mtlDail","dail","mtlChooseImage","count","sourceType","chooseImage","localIds","mtlGetLocation","getLocation","mtlOpenLocation","openLocation","mtlGenerateQRCode","generateQRCode","mtlRequest","headers","e","request","mtlStartRecord","startRecord","mtlStopRecord","stopRecord","mtlPlayVoice","playVoice","mtlPauseVoice","pauseVoice","mtlStopVoice","stopVoice","mtlChangeScreenOrientation","changeScreenOrientation","mtlRestoreScreenOrientation","restoreScreenOrientation","mtlSetStorage","setStorage","mtlGetStorage","getStorage","mtlRemoveStorage","removeStorage","mtlClearStorage","clearStorage","mtlUploadFile","uploadFile","mtlDownloadFile","downloadFile","yylist","_render","dirty","setDirty","loadDirtyData","loadData","execute","validate","_getTreeSelectNode","selectNode","node","treeModel","getTreeModel","getSelectedNodes","length","_doService","getCache","postData","oldData","collectData","newData","VOUCHER_STATE_EDIT","updateNode","viewModel","rowIndex","index","gridModel","getGridModel","currentRow","getRow","billnum","stringify","singleDo","open","cAction","configParams","allActions","find","item","trim","toLocaleLowerCase","Object","assign","extendConfig","allConfirm","cShowCaption","confirm","close","_loadGrid","allGridmodel","getGridModels","i","clear","queryItems","forEach","field","replace","v","toUpperCase","reportId","setColumns","getState","getParams","query","isSum","setState","showSearch","bFromNav","promiseExecute","x","cCommand","url","cSvcUrl","rest","_appendUrl","proxyParams","method","cHttpMethod","options","mask","setDataSource","parent","getParent","setCache","recordCount","pageIndex","pageSize","columns","getColumnsData","this","fieldNames","setSortColumn","_validateMustInput","_filterViewModel","propertyNames","_get_data","flag","propertyName","property","get","models","BaseModel","value","getAllData","getData","isEmpty","value1","value2","columnArray","entities","filter","bMain","cType","fields","cItemName","push","switchGroupSchema","paramss","groupSchemaId","undefined","groupSchemaName","dimensionId","isIncludeMeta","_bindGridDblClick","dblClickItemName","getColumns","attr","bJointQuery","on","args","rowData","cellName","id","cellInfo","mode","readOnly","doubleEdit","carryParams","cardViewModel","cardKey","findIndex","dt","billtype","billno","loader","runCommandLine","failCount","_loadTree","_bindTreeSelect","setReadOnly","billType","condition","path","ids","toString","hasChildren","_renderTreeArchiveData","VOUCHER_STATE_ADD","biz","do","_initPage","filterId","_","indexOf","dataList","attachmentId","_bindGridAttachment","treename","_bindTreeDblClick","VOUCHER_STATE_BROWSE","isDistinct","parameter","split","operator","_bindCompareTreeSelect","dataSource","select","_treeDetailSelect","_getSelectRowIds","para","distinct","selectDatas","getSelectedRows","map","row","Set","check4List","abandon","lastMode","getOriginalData","afterActData","resetOrginalData","communication","type","_hasList","toLowerCase","add","isTest_ImportProgressBall","Math","floor","random","setInterval","asyncParams","asyncData","percentage","totalCount","asyncKey","busName","curTime","fileName","fileSize","payload","clearInterval","interMode","clearCache","parentId","externalData","_addVoucher","maxLevel","level","selectedNode","suc","parentField","parent_name","name","_addCard","error","save","invalidMsg","join","publishLoadData","_status","DataStates","Update","Insert","parentData","parentNode","getNodesByKeys","arrayKeys","key","getDirtyRowIndexes","saveRefresh","addNode","attachment","selectRow","attachmentCondition","size","model","batchDelete","batchDo","primaryKeyField","cmdParameter","primarykey","getNecessaryDataForRows","paramsData","primaryKeys","pubts","code","text","caption","_batchDo","enabledCallback","actionText","messages","theme","sucessCount","dblClick","copy","carry","edit","refresh","obj","extend","queryTree","search","editTree","cTarget","detailId","moveUp","selectedNodes","isFirst","keyField","moveDown","isLast","pull","pullBillNo","billnumber","source","pullx","singlePush","sumSwitchModel","pushKey","batchPush","queryString","targetCode","isMainSelect","childIds","pathname","toStr","queryAsyncProcess","asyncInterval","btnCallBack","getNowFormatDate","_timer","asyncImportQuery","output","baseUrl","window","_baseUrl","substr","queryUrl","inputParams","format","has","bill","page","getPageSize","getPageIndex","HTTP_OUTPUT_BILL","handleAsyncImportOver","errStr","clearTimeout","bDelTask","DynamicProxy","create","getImportProcess","parseFloat","importVoucher","disabledCallback","beforeActData","isAsync","getNewGuid","acceptedFileType","interval","eleInput","document","createElement","accept","style","display","onchange","loadingControl","start","formData","FormData","enctype","file","target","files","append","mapCondition","xhr","XMLHttpRequest","serviceCode","AppContext","_url","send","onreadystatechange","end","bError","errorInfo","readyState","status","ajaxResult","responseText","body","removeChild","appendChild","click","exportVoucherTemplate","exportStaticVoucherTemplate","openUrl","exportReport","getRowsCount","subscribeMessage","batchOutputVoucher","getColumnState","set","print","json","token","preview","template","getValue","newTab","proxy","route","location","href","decodeURIComponent","addEventListener","event","tenantId","postMessage","origin","batchPrintVoucher","printID","VOUCHER_PRINT_KEY","tplid","printPreview","currentParams","_morePrintPreview","urlParams","cacheData","uniform","newUrlParams","param","_err","rs","sendType","newTempUrlParams","printDesign","printNow","savebo","saveBo","doDelete","deleteRows","localPrint","getTemplate","templateCode","isdefault","templatecode","localPrintReport","sumSwitch","lastSearchCondition","batchModify","jointquery","editType","parentViewModel","billNum","billId","title","checkReturn","modal","workflow","isWfControlled","verifystate","businessKey","width","height","appsource","appCode","flowComp","showFlowBox","onClose","callbackData","doCommunication","stateRule","newadd","cCardKey","pushPage","newback","goBack","init","viewCallback","vm","view","Boolean","parentModel","ReferModel","cBillName","sumSwitchKey","USESTATERULE","autoLoad","initData","userId","user","indexDB","openDB","then","IDB_getData","dbTableName","dbName","setColumnState","catch","pageInfo","indexedDB_id","IDB_saveData","columnKey","IDB_deleteOneData","terminalType","queryData","isExtend","simpleVOs","op","recordList","updateRow","setPageIndex","doPropertyChange","rowKey","isExpand","returnPromise","promise","getDirtyData","portal","getRudux","asyncImportArr","prompt","msg","resolve","reject","act","yylistExtend","yylistExtendConfig","voucherAction","scan","share","getnetworktype","getmac","chooseimage","getlocation","openlocation","generateqrcode","startrecord","stoprecord","playvoice","pausevoice","stopvoice","changescreenorientation","restorescreenorientation","setstorage","getstorage","removestorage","clearstorage","uploadfile","downloadfile","doservice","singlepush","dblclick","delete","batchdelete","batchaudit","batchunaudit","batchsubmit","batchunsubmit","batchdo","batchoutput","batchimport","tempexport","statictempexport","reportexport","messagesubscribe","batchprint","check","columnsetting","edittree","querytree","moveup","movedown","commandLine","switchgroupschema","localprint","batchpush","sumswitch","batchmodify","printpreview","printdesign","printnow","asyncprocess","openpage","goback","billsetting","staterule","namespace","common"],"mappings":"gnCAEA,SAASA,EAAYC,GACnB,IAAIC,EAAO,GAQX,OAPID,IAEAC,EADED,EAAOE,WACFC,KAAKC,MAAMJ,EAAOE,YAElBF,GAGJC,EAGT,SAASI,EAAaC,GACC,UAAjB,IAAIC,SACNC,GAAGC,MAAMC,MAAM,SAAW,IAAIH,SAAW,QAAUD,GAEnDK,QAAQC,IAAI,SAAW,IAAIL,SAAW,QAAUD,GAI7C,SAASO,EAASC,EAAQC,EAAWf,EAAQgB,EAAWC,GAC7D,IAAMhB,EAAO,GACb,GAAID,aAAM,EAANA,EAAQE,WAAY,CACtB,IAAMgB,EAAYf,KAAKC,MAAMJ,EAAOE,YACpCD,EAAKkB,WAAaD,EAAUC,WAAaC,SAASF,EAAUC,YAAc,EAC/C,QAAvBD,EAAUG,SACZpB,EAAKoB,SAAW,CAAC,SAAU,WAEtBC,MAAMC,QAAQtB,EAAKoB,YACtBpB,EAAKoB,SAAW,CAACH,EAAUG,WAIjC,IAAIG,WAAW,EAAD,KACTvB,GAAI,CACPwB,QAAS,SAAUC,GACjB,IAAMpB,EAASoB,EAAIC,UACnBnB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,OAAQxB,OAAQA,IACpDD,EAAYC,IAEdyB,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,aAMnB,SAASC,EAAUpB,EAAQC,EAAWf,EAAQgB,EAAWC,GAC9D,IAAMhB,EAAOF,EAAWC,GACxB,IAAImC,MAAMC,cAAc,EAAD,KAClBnC,GAAI,CACPwB,QAAS,SAAUC,GAEjBlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,QAASxB,OAAQoB,IACrDrB,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,aAMnB,SAASI,EAAavB,EAAQC,EAAWf,EAAQgB,EAAWC,GACjE,IAAMX,EAAS,IAAIC,SACnBC,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,WAAYxB,OAAQA,IACxDD,EAAY,IAAIE,UAGX,SAAS+B,EAAgBxB,EAAQC,EAAWf,EAAQgB,EAAWC,GACpE,IAAIsB,eAAe,CACjBd,QAAS,SAAUC,GACjB,IAAMc,EAAcd,EAAIc,YACxBhC,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,iBAAkBU,YAAW,IACjEnC,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,YAKnB,SAASQ,EAAW3B,EAAQC,EAAWf,EAAQgB,EAAWC,GAC/D,IAAIyB,OAAO,CACTjB,QAAS,SAAUC,GACjB,IAAMiB,EAAajB,EAAIiB,WACvBnC,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,SAAUxB,OAAQqC,IACtDtC,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,YAMnB,SAASW,EAAS9B,EAAQC,EAAWf,EAAQgB,EAAWC,GAC7D,IAAMhB,EAAOF,EAAWC,GACxB,IAAI6C,KAAK,EAAD,KACH5C,GAAI,CACPwB,QAAS,SAAUC,GACjBlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,OAAQxB,OAAQoB,IACpDrB,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,aAMnB,SAASa,EAAgBhC,EAAQC,EAAWf,EAAQgB,EAAWC,GACpE,IAAMhB,EAAO,GACb,GAAID,aAAM,EAANA,EAAQE,WAAY,CACtB,IAAMgB,EAAYf,KAAKC,MAAMJ,EAAOE,YACpCD,EAAK8C,MAAQ7B,EAAU6B,MACM,QAAzB7B,EAAU8B,WACZ/C,EAAK+C,WAAa,CAAC,QAAS,UAEvB1B,MAAMC,QAAQtB,EAAK+C,cACtB/C,EAAK+C,WAAa,CAAC9B,EAAU8B,aAInC,IAAIC,YAAY,EAAD,KACVhD,GAAI,CACPwB,QAAS,SAAUC,GAEjB,IAAMwB,EAAWxB,EAAIwB,SACrB1C,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,cAAexB,OAAQ4C,IAC3D7C,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,aAMnB,SAASkB,EAAgBrC,EAAQC,EAAWf,EAAQgB,EAAWC,GACpE,IAAMhB,EAAOF,EAAWC,GACxB,IAAIoD,YAAY,EAAD,KAEVnD,GAAI,CACPwB,QAAS,SAAUC,GAGjBlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,cAAexB,OAAQoB,IAC3DrB,EAAYqB,IAEdK,KAAI,SAAEC,GAEJ3B,EADgB2B,EAAIC,aAMnB,SAASoB,EAAiBvC,EAAQC,EAAWf,EAAQgB,EAAWC,GACrE,IAAMhB,EAAOF,EAAWC,GACxB,IAAIsD,aAAa,EAAD,KAMXrD,GAAI,CACPwB,QAAS,SAAUC,GACjBlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,eAAgBxB,OAAQoB,IAC5DrB,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,aAMnB,SAASsB,EAAmBzC,EAAQC,EAAWf,EAAQgB,EAAWC,GACvE,IAAMhB,EAAOF,EAAWC,GACxB,IAAIwD,eAAe,EAAD,KAGbvD,GAAI,CACPwB,QAAS,SAAUC,GAGjBlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,iBAAkBxB,OAAQoB,IAC9DrB,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,aAMnB,SAASwB,EAAY3C,EAAQC,EAAWf,EAAQgB,EAAWC,GAChE,IAAMhB,EAAOF,EAAWC,GACxB,GAAIC,EAAKyD,SAAmC,iBAAjBzD,EAAKyD,QAC9B,IACEzD,EAAKyD,QAAUvD,KAAKC,MAAMH,EAAKyD,SAC/B,MAAOC,GAEP,YADAjD,MAAM,gBAIV,GAAIT,EAAKD,QAAiC,iBAAhBC,EAAKD,OAC7B,IACEC,EAAKD,OAASG,KAAKC,MAAMH,EAAKD,QAC9B,MAAO2D,GAEP,YADAjD,MAAM,eAIV,IAAIkD,QAAQ,EAAD,KAON3D,GAAI,CACPwB,QAAS,SAAUC,GACjB,IAAMzB,EAAOyB,EAAIzB,KACjBO,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,UAAWxB,OAAQL,IACvDI,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,aAMnB,SAAS4B,EAAgB/C,EAAQC,EAAWf,EAAQgB,EAAWC,GACpE,IAAI6C,YAAY,CACdrC,QAAS,SAAUC,GACjBlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,cAAexB,OAAQoB,IAC3DrB,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,YAMnB,SAAS8B,EAAejD,EAAQC,EAAWf,EAAQgB,EAAWC,GACnE,IAAI+C,WAAW,CACbvC,QAAS,SAAUC,GAEjBlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,aAAcxB,OAAQoB,IAC1DrB,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,YAMnB,SAASgC,EAAcnD,EAAQC,EAAWf,EAAQgB,EAAWC,GAClE,IAAMhB,EAAOF,EAAWC,GACxB,IAAIkE,UAAU,EAAD,KAERjE,GAAI,CACPwB,QAAS,SAAUC,GACjBlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,YAAaxB,OAAQoB,IACzDrB,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,aAMnB,SAASkC,EAAerD,EAAQC,EAAWf,EAAQgB,EAAWC,GACnE,IAAMhB,EAAOF,EAAWC,GACxB,IAAIoE,WAAW,EAAD,KAETnE,GAAI,CACPwB,QAAS,SAAUC,GACjBlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,aAAcxB,OAAQoB,IAC1DrB,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,aAMnB,SAASoC,EAAcvD,EAAQC,EAAWf,EAAQgB,EAAWC,GAClE,IAAMhB,EAAOF,EAAWC,GACxB,IAAIsE,UAAU,EAAD,KAERrE,GAAI,CACPwB,QAAS,SAAUC,GACjBlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,YAAaxB,OAAQoB,IACzDrB,EAAYqB,IAEdK,KAAM,SAAUC,GAEd3B,EADgB2B,EAAIC,aAQnB,SAASsC,EAA4BzD,EAAQC,EAAWf,EAAQgB,EAAWC,GAChF,IAAMhB,EAAOF,EAAWC,GACxB,IAAIwE,wBAAwB,EAAD,KAEtBvE,GAAI,CACPwB,QAAS,SAAAC,GAEPlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,0BAA2BxB,OAAQoB,IACvErB,EAAYqB,IAEdK,KAAM,SAAAC,GAEJ3B,EADgB2B,EAAIC,aASnB,SAASwC,EAA6B3D,EAAQC,EAAWf,EAAQgB,EAAWC,GACjF,IAAIyD,yBAAyB,CAC3BjD,QAAS,SAAAC,GAEPlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,2BAA4BxB,OAAQoB,IACxErB,EAAYqB,IAEdK,KAAM,SAAAC,GAEJ3B,EADgB2B,EAAIC,YASnB,SAAS0C,EAAe7D,EAAQC,EAAWf,EAAQgB,EAAWC,GACnE,IAAMhB,EAAOF,EAAWC,GACxB,IAAI4E,WAAW,EAAD,KAIT3E,GAAI,CACPwB,QAAS,SAAAC,GAEPlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,aAAcxB,OAAQoB,IAC1DrB,EAAYqB,IAEdK,KAAM,SAAAC,GAEJ3B,EADgB2B,EAAIC,aASnB,SAAS4C,EAAe/D,EAAQC,EAAWf,EAAQgB,EAAWC,GACnE,IAAMhB,EAAOF,EAAWC,GACxB,IAAI8E,WAAW,EAAD,KAGT7E,GAAI,CACPwB,QAAS,SAAAC,GAEPlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,aAAcxB,OAAQoB,IAC1DrB,EAAYqB,IAEdK,KAAM,SAAAC,GAEJ3B,EADgB2B,EAAIC,aASnB,SAAS8C,EAAkBjE,EAAQC,EAAWf,EAAQgB,EAAWC,GACtE,IAAMhB,EAAOF,EAAWC,GACxB,IAAIgF,cAAc,EAAD,KAGZ/E,GAAI,CACPwB,QAAS,SAAAC,GAEPlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,gBAAiBxB,OAAQoB,IAC7DrB,EAAYqB,IAEdK,KAAM,SAAAC,GAEJ3B,EADgB2B,EAAIC,aASnB,SAASgD,EAAiBnE,EAAQC,EAAWf,EAAQgB,EAAWC,GACrE,IAAMhB,EAAOF,EAAWC,GACxB,IAAIkF,aAAa,EAAD,KAEXjF,GAAI,CACPwB,QAAS,SAAAC,GAEPlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,eAAgBxB,OAAQoB,IAC5DrB,EAAYqB,IAEdK,KAAM,SAAAC,GAEJ3B,EADgB2B,EAAIC,aAQnB,SAASkD,EAAerE,EAAQC,EAAWf,EAAQgB,EAAWC,GACnE,IAAMhB,EAAOF,EAAWC,GACxB,IAAIoF,WAAW,EAAD,KAKTnF,GAAI,CACPwB,QAAS,SAAAC,GAEPlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,aAAcxB,OAAQoB,IAC1DrB,EAAYqB,IAEdK,KAAM,SAAAC,GAEJ3B,EADgB2B,EAAIC,aAQnB,SAASoD,EAAiBvE,EAAQC,EAAWf,EAAQgB,EAAWC,GACrE,IAAMhB,EAAOF,EAAWC,GACxB,IAAIsF,aAAa,EAAD,KAQXrF,GAAI,CACPwB,QAAS,SAAAC,GAEPlB,GAAGoB,QAAQC,QAAQ,MAAO,CAAEC,OAAQ,eAAgBxB,OAAQoB,IAC5DrB,EAAYqB,IAEdK,KAAM,SAAAC,GAEJ3B,EADgB2B,EAAIC,e,ydC1cpBsD,EAAS,WAAC,WACRC,EAAU,SAACzE,EAAWd,EAAMwF,GAChC,IAAyB1E,GACzB,IAAgBA,GACZ0E,GACF1E,EAAU2E,UAAS,GACnB3E,EAAU4E,cAAc1F,KAExBc,EAAU6E,SAAS3F,GACfA,IACFc,EAAU8E,QAAQ,gBAAiB5F,GACnCc,EAAU+E,UAAS,MAInBC,EAAqB,SAAChF,GAC1B,IAAIiF,EACFC,EACIC,EAAYnF,EAAUoF,eAO5B,OANID,IACFF,EAAaE,EAAUE,oBAErBJ,GAAcA,EAAWK,QAAUL,EAAW,KAChDC,EAAOD,EAAW,IAEbC,GA6BHK,EAAa,SAACxF,EAAQC,EAAWf,EAAQgB,EAAWC,GACnDF,EAAUwF,SAAS,YAIXR,EAAmBhF,GAKhC,IAAiBD,EAAQC,EAAWf,EAAQgB,EAAWC,GAAU,SAAUF,EAAWyF,EAAUxG,GAgB9F,IAAeA,GAfE,SAAUgC,EAAKN,GAC9B,IAAKM,EAAK,CACRxB,GAAGC,MAAMC,MAAM,OAAQ,WACvB,IAAM+F,EAAU1F,EAAU2F,aAAY,GAChCC,EAAU,IAAiBF,EAAS/E,GAC1C,IAAeX,EAAW,IAAI6F,oBAC9BpB,EAAQzE,EAAW4F,GACnB5F,EAAUoF,eAAeU,WAAWF,GAMtC1F,EAJqB,CACnBe,IAAKA,EACLN,IAAKA,GAEgB,OAEQ8E,MAnBjChG,GAAGC,MAAMC,MAAM,UAAW,WAlCb,SAACI,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACtD,IAAM8F,EAAW/G,GAAUA,EAAOA,QAAUA,EAAOA,OAAOgH,MAC1D,GAAgB,MAAZD,EAAJ,CACA,IAAME,EAAYH,EAAUI,eAC5B,GAAKD,EAAL,CACA,IAAME,EAAaF,EAAUG,OAAOL,GACpC,GAAKI,EAAL,CACA,IAAMX,EAAW,CACfa,QAASvG,EACTb,KAAME,KAAKmH,UAAUH,IAMvBnG,EAJsB,CACpBhB,OAAQA,EACRC,KAAMuG,IAEiB,WASvB,IAAexG,GARE,SAAUgC,EAAKN,GACzBM,IACHxB,GAAGC,MAAMC,MAAM,OAAQ,WACvBoG,EAAUjB,QAAQ,SAGpB5E,EADqB,CAAEe,IAAG,EAAEN,IAAG,GACR,OAEQ8E,SAKjCe,CAASzG,EAAQC,EAAWf,EAAQgB,EAAWC,IA4B7CuG,EAAO,SAAC1G,EAAQgG,EAAW9G,EAAQgB,EAAWC,GAElD,KADAjB,EAASA,GAAU,IACPyH,QAAS,CACnB,IAAMC,EAAeZ,EAAUa,YAAcb,EAAUa,WAAWC,MAAK,SAAAC,GACrE,MAAmD,SAA5CA,EAAKJ,QAAQK,OAAOC,uBAE7BC,OAAOC,OAAOjI,EAAQ0H,GAEpBlH,GAAG0H,aAAaC,YAAcnI,EAAOoI,aACvC5H,GAAGC,MAAM4H,QAAQ,OAAOrI,EAAOoI,aAAY,OAAO,WAChD9B,EAAWxF,EAAQgG,EAAW9G,EAAQgB,EAAWC,MAGnDqF,EAAWxF,EAAQgG,EAAW9G,EAAQgB,EAAWC,IAI/CqH,EAAQ,SAACxH,EAAQgG,EAAW9G,EAAQgB,EAAWC,GAEnD,KADAjB,EAASA,GAAU,IACPyH,QAAS,CACnB,IAAMC,EAAeZ,EAAUa,YAAcb,EAAUa,WAAWC,MAAK,SAAAC,GACrE,MAAmD,UAA5CA,EAAKJ,QAAQK,OAAOC,uBAE7BC,OAAOC,OAAOjI,EAAQ0H,GAEpBlH,GAAG0H,aAAaC,WAClB3H,GAAGC,MAAM4H,QAAQ,aAAa,WAC5B/B,EAAWxF,EAAQgG,EAAW9G,EAAQgB,EAAWC,MAGnDqF,EAAWxF,EAAQgG,EAAW9G,EAAQgB,EAAWC,IA2F/CsH,EAAY,SAACxH,EAAWf,EAAQiB,GAGpC,IADA,IAAMuH,EAAezH,EAAU0H,gBACtBC,EAAI,EAAGA,EAAIF,EAAanC,OAAQqC,IACvCF,EAAaE,GAAGC,QAElB,IAAMC,EAAa7H,EAAUwF,SAAS,eAAiB,GACvD,GAAIqC,EAAWvC,OAAQ,CACrB,IAAI,GAAO,EAQX,GAPAuC,EAAWC,SAAQ,SAAAhB,GACjB,IAAMiB,EAAQjB,EAAKkB,QAAQ,QAAQ,SAAUC,GAC3C,OAAOA,EAAEC,iBAEPlI,EAAUwF,SAAS,OAAOuC,KAC9B,GAAO,MAEL,EAKF,YAHI7H,GACFA,KAMW,WADA,IAAmBF,EAAW,aAQ7CA,EAAU8E,QAAQ,kBAAkB,GAE9B,IAAAqD,EAAA,oBAAAA,SACFjC,EAAYlG,EAAUmG,eACxBgC,IAAalJ,EAAOkJ,UACtBjC,EAAUkC,WAAWlC,EAAUmC,SAAS,YAC1CpB,OAAOC,OAAOjI,EAAQe,EAAUsI,YAAYC,cACrCtJ,EAAOuJ,MACd,IAAMA,EAAQxI,EAAUwF,SAAS,SAGjC,GAFa,MAATgD,IACFvJ,EAAOuJ,MAAQA,GACbtC,EAAW,CAKb,GAJAA,EAAUuC,SAAS,aAAcxJ,EAAOyJ,mBACjCzJ,EAAOyJ,WAGE,GADC1I,EAAUwF,SAAS,qBACXvG,EAAO0J,SAC9B,OAEFzC,EAAU0C,eAAe,aAAc3J,GAAQ,WAC7C,IAAM0H,EAAe3G,EAAU4G,YAAc5G,EAAU4G,WAAWC,MAAK,SAAAgC,GACrE,OAAOA,EAAEC,UAAsD,YAA1CD,EAAEC,SAAS/B,OAAOC,uBAErC+B,EAAMpC,GAAgBA,EAAaqC,SAAW,YAClDD,EAAMtJ,GAAGwJ,KAAKC,WAAWH,EAAK/I,EAAUsI,YAAYC,OACpD,IAAMY,EAAcxC,GAAgBA,EAAaqC,QAAU,CACzDD,IAAG,EACHK,OAAQzC,EAAa0C,aAAe,OACpCC,QAAS,CAAEC,MAAM,IACf,CACFR,IAAG,EACHK,OAAQ,OACRE,QAAS,CAAEC,MAAM,IAEnBrD,EAAUsD,cAAcL,EAAalK,GAAQ,SAAUM,GACrD,IAAMkK,EAASvD,EAAUwD,YACrBD,GACFA,EAAOE,SAAS,WAAY,CAAEC,YAAarK,EAAOqK,YAAaC,UAAWtK,EAAOsK,UAAWC,SAAUvK,EAAOuK,WAE/G,IAAMC,EAAUC,EAAezK,GAC1BwK,GACLE,KAAK7B,WAAW2B,EAAQA,QAASA,EAAQG,eAG3ChE,EAAUiE,gBACVjE,EAAUyD,SAAS,WAAYzJ,GAC/BF,EAAUwF,SAAS,kBAAoBU,EAAUpB,QAAQ,WAAY,SAQrEsF,EAAqB,SAACpK,GAI1B,IAHA,IAAMqK,EAAmBrK,EAAUwF,SAAS,mBACtC8E,EAAgBD,EAAiBE,UAAU,iBAC7CC,GAAO,EACF7C,EAAI,EAAGA,EAAI2C,EAAchF,OAAQqC,IAAK,CAC7C,IAAM8C,EAAeH,EAAc3C,GAC7B+C,EAAWL,EAAiBM,IAAIF,GACtC,GAAMC,aAAoBjL,GAAGmL,OAAOC,YAAoD,IAAtCH,EAASH,UAAU,iBAAgE,IAApCG,EAASH,UAAU,cAChHG,EAASH,UAAU,aAAc,CACnC,IAAMO,EAAQJ,EAASK,WAAaL,EAASK,aAAeL,EAASM,UACrE,GAAqB,iBAAVF,GACT,GAAIrL,GAAGC,MAAMuL,QAAQH,EAAMI,SAAWzL,GAAGC,MAAMuL,QAAQH,EAAMK,QAAS,CACpEX,GAAO,EACP,YAGF,GAAI/K,GAAGC,MAAMuL,QAAQH,GAAQ,CAC3BN,GAAO,EACP,QAKR,OAAOA,GAGHR,EAAiB,SAAUzK,GAC/B,GAAKA,GAAWA,EAAOS,UAAvB,CAKA,IAJA,IAAM+J,EAAU,GAAUG,EAAa,GACjCkB,EAAc7L,EAAOS,UAAUqL,SAASC,QAAO,SAAUxE,GAC7D,OAAOA,EAAKyE,OAAwB,SAAfzE,EAAK0E,SACzB,GAAGC,OACG9D,EAAI,EAAGA,EAAIyD,EAAY9F,OAAQqC,IAAK,CAC3C,IAAMb,EAAOsE,EAAYzD,GACzBoC,EAAQjD,EAAK4E,WAAa5E,EAC1BoD,EAAWyB,KAAK7E,EAAK4E,WAEvB,MAAO,CAAE3B,QAAO,EAAEG,WAAU,KAGxB0B,EAAoB,SAAC7L,EAAQgG,EAAW8F,EAAS5L,EAAWC,GAChE,IAAM4L,EAAgBD,EAAUA,EAAQC,mBAAgBC,EAClDC,EAAkBH,EAAUA,EAAQG,qBAAkBD,EACtDE,EAAcJ,EAAUA,EAAQI,aAAe,UAAOF,EAC5DhG,EAAUjB,QAAQ,sBAAuB,CAAEwB,QAASvG,EAAQ+L,cAAa,EAAEE,gBAAe,EAAEC,YAAW,IACvGlG,EAAU4D,SAAS,cAAc,GACjC5D,EAAU4D,SAAS,gBAAiBmC,GACpC/F,EAAUI,eAAesC,SAAS,qBAAsBqD,GACxD,IAAM7M,EAASgI,OAAOC,OAAO,CAC3BZ,QAASvG,EACT+L,cAAa,EACbI,eAAe,GACdnG,EAAUP,SAAS,wBACtByB,OAAOC,OAAOjI,EAAQ8G,EAAUuC,YAAYC,OAC5Cf,EAAUzB,EAAW9G,EAAQiB,IAiCzBiM,EAAoB,SAACnM,EAAWD,GACpC,IAAMmG,EAAYlG,EAAUmG,eAC5B,GAAKD,EAAL,CACA,IAAIkG,EAAmB,KACjBrC,EAAU7D,EAAUmG,aAC1B,IAAK,IAAMC,KAAQvC,EACjB,GAAIA,EAAQuC,GAAMC,YAAa,CAC7BH,EAAmBE,EACnB,MAGJpG,EAAUsG,GAAG,kBAAkB,SAAUC,GACvC,IAAMC,EAAUxG,EAAUG,OAAOoG,EAAKzG,UAClCyG,EAAKE,WAAaP,GACpBlG,EAAUpB,QAAQ,WAAY4H,EAASD,GACvCvG,EAAUyD,SAAS,WAAY,CAAE3D,SAAUyG,EAAKzG,SAAU4G,GAAIF,EAAQE,MAEtE1G,EAAUpB,QAAQ,aAAcmC,OAAOC,OAAOuF,EAAM,CAAEC,QAAO,QAGjExG,EAAUsG,GAAG,YAAY,SAAUC,EAAMI,GACvC,IAAMpD,EAASQ,KAAKP,YAChBzK,EAAS,CACX6N,KAAM,IAAIjH,mBACVkH,UAAW/M,EAAUsI,YAAY0E,WACjCJ,GAAIH,EAAKG,GACTF,QAASD,EACTI,SAAQ,EACRI,YAAa,GACbC,cAAezD,EAAOjE,SAAS,kBAGjC,GADAvG,EAASgI,OAAOC,OAAO,GAAIjI,EAAQe,EAAUwF,SAAS,yBACjDU,EAAUpB,QAAQ,iBAAkB7F,GAAS,OAAO,EACzD,IAAMkO,EAAU,IAAmBnN,EAAW,WAC9C,GAAKmN,EAAL,CAGE,IACMlH,EADOC,EAAUyE,IAAI,cACRyC,WAAU,SAAAtG,GAAQ,OAAAA,EAAK8F,IAAMH,EAAKG,MACrDnD,EAAOE,SAAS,kBAAmB1D,GAErC,IAAMoH,EAAK,CACTC,SAAU,YACVC,OAAQJ,EACRlO,OAAQA,GAEVQ,GAAG+N,OAAOC,eAAe,OAAQJ,EAAI5D,OAIvCzJ,EAAUwM,GAAG,oBAAoB,SAAA7L,GAC/B,IAAM8G,EAAezH,EAAU0H,gBAC/B,IAAK/G,EAAIA,IAAI+M,UACX,IAAK,IAAI/F,EAAI,EAAGA,EAAIF,EAAanC,OAAQqC,IACvCF,EAAaE,GAAGC,WAItB1B,EAAUsG,GAAG,sBAAsB,WACjC,IAAMtM,EAAWgG,EAAUV,SAAS,YAChCtF,GACFA,IACF,IAA2BgG,EAAWlG,QAsFpC2N,EAAY,SAAC3N,EAAWf,EAAQiB,GACpC,IAAMyG,EAAe3G,EAAU4G,YAAc5G,EAAU4G,WAAWC,MAAK,SAAAgC,GACrE,OAAOA,EAAEC,UAAsD,iBAA1CD,EAAEC,SAAS/B,OAAOC,uBAEnCmC,EAAcxC,GAAgBA,EAAaqC,QAAU,CACzDD,IAAKpC,EAAaqC,QAClBI,OAAQzC,EAAa0C,aAAe,QAClC,CACFN,IAAK,iBACLK,OAAQ,QAEJjE,EAAYnF,EAAUoF,eACxBD,GACFA,EAAUyD,eAAe,aAAc3J,GAAQ,WAC7CkG,EAAUqE,cAAcL,EAAalK,GACjCiB,GAAUiF,EAAUwE,SAAS,WAAYzJ,OAgC7C0N,EAAkB,SAAC5N,EAAWD,GAClC,IAAMoF,EAAYnF,EAAUoF,eAC5B,GAAKD,EAAL,CAGEA,EAAU0I,aAAY,GAExB,IAAM3H,EAAYlG,EAAUmG,eACpB2H,EAAA,cAAAA,SACR3I,EAAUqH,GAAG,UAAU,SAAUC,GAC/BzM,EAAU4I,eAAe,mBAAoB6D,GAAM,WACjD,GAAIvG,GAA0B,aAAb4H,EAAyB,CACxC,IAAK5H,EAAW,OAEhBlG,EAAU2J,SAAS,YAAY,GAC/B,IAAMoE,EAAY,CAAEzH,QAASvG,GAE7B,GAAI0M,EAAKnH,OAAQ,CACX,WAAE0I,EAAA,EAAAA,KAAMpB,EAAA,EAAAA,GAEF,QAANA,IACFA,EAAK,IAOHoB,EACFD,EAAUC,KAAOA,EACVpB,IACPmB,EAAUE,IAAMrB,EAAGsB,YAGvBjH,OAAOC,OAAO6G,EAAW/N,EAAUwF,SAAS,wBAC5CgC,EAAUxH,EAAW+N,QAEjBtB,EAAKnH,QACP,IAAetF,EAAW,IAAI6F,oBAjET,SAAC9F,EAAQC,EAAWf,GAEjD,GADoBe,EAAUsI,YAAY6F,YACzB,CACf,IAAMjP,EAAO,CACXoH,QAASvG,EACT6M,GAAI3N,EAAOe,EAAUoF,eAAeiD,SAAS,cAMzC1B,EAAe3G,EAAU4G,YAAc5G,EAAU4G,WAAWC,MAAK,SAAAgC,GACrE,OAAOA,EAAEC,UAAsD,cAA1CD,EAAEC,SAAS/B,OAAOC,uBAEnCsC,EAAU3C,GAAgBA,EAAaqC,QAAU,CACrDA,QAASrC,EAAaqC,QACtBK,YAAa1C,EAAa0C,aAAe,OACvC,CACFL,QAAS,cACTK,YAAa,OAEf,IAAeC,GAdE,SAAUrI,EAAK/B,GACzB+B,GACHwD,EAAQzE,EAAWd,KAYWA,QAElCuF,EAAQzE,EAAWf,GA4CbmP,CAAuBrO,EAAQC,EAAWyM,EAAK,IAC/CzM,EAAU2J,SAAS,WAAY,IAAI9D,sBAEnC,IAAe7F,EAAW,IAAIqO,mBAE9BrO,EAAUsO,IAAIC,GAAG,MAAOvO,GACxBA,EAAU2J,SAAS,WAAY,IAAI0E,0BAO3ClJ,EAAUqH,GAAG,sBAAsB,WACjC,GAAKtG,EAAL,CAMA,IAAMhG,EAAWgG,EAAUV,SAAS,YAChCtF,GACFA,QARF,CACE,IAAM,EAAWiF,EAAUK,SAAS,YAChC,GACF,UA6EFgJ,EAAY,SAACxO,EAAWD,GAC5B,IARsBgG,EAAWe,EAC3Be,EAOAiG,EAAW,IAAmB9N,EAAW,YACzCyO,EAAW,IAAmBzO,EAAW,YACzC+N,EAAY,IAAmB/N,EAAW,aAE1C4M,EAAK,IAAmB5M,EAAW,YAIzC,OAAQ8N,GACN,IAAK,SACYY,EAAE/D,IAAI3K,EAAUsI,YAAa,iBACxCyF,GAAcU,GAEhBjH,EAAUxH,EAAW,CAAEsG,QAASvG,EAAQgO,UAAWA,IASrD5B,EAAkBnM,GAClB,MAEF,IAAK,SACL,IAAK,cAEHwH,EAAUxH,EAAW,CACnBsG,QAASvG,EACTgO,UAAWA,IAKb5B,EAAkBnM,GAGlB,MACF,IAAK,WACH,IAAMmF,EAAYnF,EAAUoF,eAQ5B,GAPID,GAAaA,EAAUkD,SAAS,yBAjDPvB,EAkDD,QAhDE,KAD5Be,GADgB9B,EAkDD/F,GAjDQwF,SAAS,eAAiB,IACxCmJ,QAAQ7H,IACrBe,EAAW8D,KAAK7E,GAClBf,EAAU4D,SAAS,aAAc9B,IA3VP,SAAC7H,EAAWD,GAChBC,EAAU2K,IAAI,kBAIjB3K,EAAU0H,gBAClBI,SAAQ,SAAA5B,GACjBA,EAAUsG,GAAG,uBAAuB,SAAUoC,GAU5C,OATAA,EAAS9G,SAAQ,SAAAhB,GACVA,EAAK+H,eACJ/H,EAAK8F,GACP9F,EAAK+H,aAAe/H,EAAK8F,GAEzB9F,EAAK+H,aAAe,UAInBD,QA6XPE,CAAoB9O,GAChBmF,GAAaA,EAAUkD,SAAS,kBAGhBrI,EAAUmG,gBACVsI,GAChBd,EAAU3N,EAAW,CACnBsG,QAASvG,EACTgP,SAAU,IAAmB/O,EAAW,cAS9C4N,EAAgB5N,EAAWD,GAtIP,SAACC,EAAWD,GACpC,IAAMoF,EAAYnF,EAAUoF,eACvBD,IAELA,EAAUqH,GAAG,kBAAkB,SAAUC,GACvC,IAAMC,EAAUD,EAAKC,QACrBvH,EAAUL,QAAQ,WAAY4H,MAGhCvH,EAAUqH,GAAG,YAAY,SAAUC,GACjC,IAAMhD,EAASQ,KAAKP,YACdzK,EAAS,CACb6N,KAAM,IAAIjH,mBACVkH,UAAU,EACVH,GAAIH,EAAKG,GACTF,QAASD,EACTS,cAAezD,EAAOjE,SAAS,kBAEjC,IAAKL,EAAUL,QAAQ,iBAAkB7F,GAAS,OAAO,EACzD,IAAMoO,EAAK,CACTC,SAAU,YACVC,OAAQ,IAAmB9D,EAAQ,WACnCxK,OAAQA,GAEVQ,GAAG+N,OAAOC,eAAe,OAAQJ,EAAI5D,OA+GnCuF,CAAkBhP,GAClBmM,EAAkBnM,GAClB,MAEF,IAAK,cAEH2N,EAAU3N,EAAW,CACnBsG,QAASvG,EACTgP,SAAU,IAAmB/O,EAAW,cAE1C4N,EAAgB5N,EAAWD,GAE3BC,EAAUsO,IAAIC,GAAG,MAAOvO,GACxBA,EAAU2J,SAAS,WAAY,IAAI0E,mBACnC,MACF,IAAK,UACH,IAAerO,EAAW,IAAIiP,sBAC9BtB,EAAU3N,EAAW,CACnBsG,QAASvG,EACTgP,SAAU,IAAmB/O,EAAW,YACxCkP,YAAY,IAhIW,SAAClP,EAAWD,GACzC,IAAMoF,EAAYnF,EAAUoF,eACvBD,GACLA,EAAUqH,GAAG,UAAU,SAAUC,GAE/B,GADkBzM,EAAUmG,gBACXsG,EAAKnH,OAAQ,CAC5B,IAAI6J,EAAY,IAAmBnP,EAAW,cAC9C,GAAImP,EAAW,CACb,IAAM,EAAOA,EAAUC,MAAM,KACzB,GAAQ,EAAK9J,OAAS,IACxB6J,EAAY,EAAK,IAGrB,IAAM1J,EAAW,CACfa,QAASvG,EACTiO,KAAMvB,EAAK,GAAG0C,GACdE,SAAU,MAEZ7H,EAAUxH,EAAWyF,GAEvB,IAAMvG,EAAOuN,EAAK,GAClB,IAAezM,EAAW,IAAI6F,oBAC9BpB,EAAQzE,EAAWd,MA4GjBoQ,CAAuBtP,EAAWD,GAClCoM,EAAkBnM,GAClByE,EAAQzE,GAIR4M,GA9GoB,SAAC5M,EAAWD,EAAQ6M,GAC5C,IAAMzH,EAAYnF,EAAUoF,eACxBD,GACFA,EAAUqH,GAAG,sBAAsB,SAAU+C,GAC3CpK,EAAUqK,OAAO5C,MA2GnB6C,CAAkBzP,EAAWD,EAAQ6M,IAInC8C,EAAmB,SAACxJ,EAAWyJ,EAAMC,GACzC,QADyC,IAAAA,OAAA,GACpC1J,EAAL,CACA,IAAM2J,EAAcF,GAAQA,EAAK1Q,QAA+B,MAArB0Q,EAAK1Q,OAAOgH,MACnD,CAACC,EAAUG,OAAOsJ,EAAK1Q,OAAOgH,QAC9BC,EAAU4J,kBACR7B,EAAM,GAQZ,OAPI4B,GAAeA,EAAYvK,OAAS,GACtCuK,EAAYE,KAAI,SAAUC,GACpBA,EAAIpD,IACNqB,EAAItC,KAAKqE,EAAIpD,OAIZgD,EAAW,EAAI,IAAIK,IAAIhC,IAAQA,IAGlCiC,EAAa,SAACnQ,EAAQC,EAAWf,EAAQgB,EAAWC,GACxD,IAAMgF,EAAOF,EAAmBhF,GAChC,GAAIkF,EAAM,CACR,IAAMC,EAAYnF,EAAUoF,eAC5BnG,EAAOkG,EAAUkD,SAAS,gBAAkBnD,EAAKC,EAAUkD,SAAS,aAKtEpI,EAHsB,CACpBhB,OAAQA,IAEe,WACvB,IAAac,EAAQC,EAAWf,EAAQgB,EAAWC,OAIjDiQ,EAAU,SAACpQ,EAAQC,EAAWf,EAAQgB,EAAWC,GACrD,IAAMkQ,EAAWpQ,EAAUwF,SAAS,YACpC,GAAK4K,EAAL,CAgBAnQ,EAHsB,CACpBhB,OAAQA,IAEe,WACvBQ,GAAGC,MAAM4H,QAAQ,UAAU,YAbJ,SAACtH,GAExB,IAAeA,EAAWoQ,GAC1B3L,EAAQzE,EAAWA,EAAUqQ,mBAC7B,IAAMC,EAAe,CACnB3P,IAAKX,EAAUqQ,mBAEjBnQ,EAASoQ,EAAc,KAOrBC,CAAiBvQ,cAjBnBA,EAAUwQ,cAAc,CAAEC,KAAM,YAqB9BC,EAAW,SAAC5C,GAChB,OAAQA,EAASa,QAAQ,QAAU,GAA+B,WAA1Bb,EAAS6C,eAE7CC,EAAM,SAAC7Q,EAAQC,EAAWf,EAAQgB,EAAWC,GACjD,IAAqC,IAAjCT,GAAGoR,0BACL,IAAI,EAAM,EACJ,EAAM,eAAiBC,KAAKC,MAAsB,KAAhBD,KAAKE,UACvC,EAAQC,aAAY,WACxB,GAAY,EACZ,IAAMC,EAAc,CAClBC,UAAW/R,KAAKmH,UAAU,CAAEiE,KAAM,EAAG4G,WAAY,EAAKpP,MAAO,EAAKqP,WAAY,MAC9EC,SAAU,EACVC,QAAS,MAAQ,EACjBC,QAAS,qBACTC,SAAU,eACVC,SAAU,OACVN,WAAY,GAIdpR,EAAUwQ,cAAc,CACtBC,KAAM,cACNkB,QAAST,IAEP,GAAO,KACTU,cAAc,KAEf,SACE,CAEL,KADA3S,EAASA,GAAU,IACPyH,QAAS,CACnB,IAAMC,EAAe3G,EAAU4G,YAAc5G,EAAU4G,WAAWC,MAAK,SAAAC,GACrE,MAAmD,QAA5CA,EAAKJ,QAAQK,OAAOC,uBAE7BC,OAAOC,OAAOjI,EAAQ0H,GAExB,IAAMmH,EAAW9N,EAAUsI,aAAetI,EAAUsI,YAAYwF,SAChE9N,EAAU2J,SAAS,mBAAoB,GACnCmE,EACE4C,EAAS5C,GAruBC,SAAC/N,EAAQC,EAAWf,EAAQgB,EAAWC,GACzD,GAA0B,UAAtBT,GAAGwJ,KAAK4I,UAAuB,CACjC,IAAM3L,EAAYlG,EAAUmG,eACxBD,GACFA,EAAU4L,WAAW,YAGzB,IACIvE,EADApO,EAAa,GAGjB,IADAF,GAHAA,EAASA,GAAU,KAGA,IACRE,WAAc,IAAMA,EAAaC,KAAKC,MAAMJ,EAAOE,YAAe,MAAOyD,IAMpF,GAJE2K,EADEpO,EAAWmH,SAA+B,SAApBnH,EAAWsR,KAC1BtR,EAAWmH,QAEX,IAAmBtG,EAAW,WAEzC,CAIA,IAAI+R,EACE7M,EAAOF,EAAmBhF,GAC5BkF,IACF6M,EAAW7M,EAAKlF,EAAUoF,eAAeiD,SAAS,cAEpD,IAAI5C,EAAW,CACbxG,OAAQA,EACR6N,KAAM,IAAIuB,kBACVtN,OAAQ,MACRkM,YAAa,GACb8E,SAAUA,EACVtI,OAAQvE,GAIVjF,EADsB,CAAEhB,OADxBwG,EAAWwB,OAAOC,OAAO,GAAIzB,EAAUzF,EAAUwF,SAAS,0BAEjC,SAAUiH,GAC7BA,IACFhH,EAASwH,YAAY+E,aAAevF,GACtChN,GAAG+N,OAAOC,eAAe,OAAQ,CAC/BH,SAAU,YACVC,OAAQA,EACRtO,OAAQwG,GACPzF,GACHE,YA1BAT,GAAGC,MAAMC,MAAM,iBAAkB,WAqtB7BsS,CAAYlS,EAAQC,EAAWf,EAAQgB,EAAWC,GA9wBzC,SAACH,EAAQC,EAAWf,EAAQgB,EAAWC,GACtD,IAAMgS,EAAWlS,EAAUoF,gBAAkBpF,EAAUoF,eAAeiD,SAAS,YACzE8J,GAAqB,IAAbD,EAAqB,MAASA,GAAY,EAClDE,EAAepN,EAAmBhF,GACxC,GAAIoS,GAAgBA,EAAaD,MAAQA,EACvC1S,GAAGC,MAAMC,MAAM,QAAOwS,EAAQ,GAAC,IAAK,aADtC,CAIA,IAAM1M,EAAW,CACfa,QAASvG,GAMXE,EAJsB,CACpBhB,OAAQA,EACRC,KAAMuG,IAEiB,WACvB,IAAiBA,EAAUxG,GAAQ,SAAUgC,EAAKoR,GAChD,GAAIA,EAAK,CAEP,IAAerS,EAAW,IAAIqO,mBAC9B,IAAMlJ,EAAYnF,EAAUoF,eACtBkN,EAAcnN,EAAUkD,SAAS,eACf,MAApBgK,EAAIC,IACFF,IACFC,EAAIC,GAAeF,EAAajN,EAAUkD,SAAS,aACnDgK,EAAIE,YAAcH,EAAaI,MAGnC/N,EAAQzE,EAAWqS,GAAK,GAM1BnS,EAJqB,CACnBe,IAAKA,EACLN,IAAK0R,GAEgB,YA8uBrBI,CAAS1S,EAAQC,EAAWf,EAAQgB,EAAWC,GAGjDN,QAAQ8S,MAAM,iBAKdC,EAAO,SAAC5S,EAAQC,EAAWf,EAAQgB,EAAWC,GAClD,IAAM0S,EAAa5S,EAAU+E,WAC7B,GAAI6N,EAGF,OAFAnT,GAAGC,MAAMC,MAAM,aAAeiT,EAAWC,KAAK,KAAM,cACpDpT,GAAGoB,QAAQiS,iBAAgB,GAG7B,IAAM5T,EAAOc,EAAU2F,cACvB,GAAKzG,EAAL,CACA,IAAM4N,EAAO,IAAe9M,GAC5B,GAAI8M,GAAQ,IAAIuB,kBACdnP,EAAK6T,QAAUtT,GAAGmL,OAAOoI,WAAWC,WAC/B,CACL/T,EAAK6T,QAAUtT,GAAGmL,OAAOoI,WAAWE,OACpC,IAAM/N,EAAYnF,EAAUoF,eACtB+N,EAAajU,EAAKiG,EAAUkD,SAAS,gBAC3C,GAAI8K,GACF,GAAIhO,EAAW,CACb,IAAMiO,EAAajO,EAAUkO,eAAeF,GACxCC,GAAcA,EAAW9N,SAC3BpG,EAAKiT,MAAQiB,EAAW,GAAGjB,MAAQ,SAGvCjT,EAAKiT,MAAQ,EAUjB,IAAM1M,EAAW,CACfa,QAASvG,EACTb,KAAME,KAAKmH,UAAUrH,IAMvBe,EAJsB,CACpBhB,OAAQA,EACRC,KAAMuG,IAEiB,WAqDvBxG,EAAOqK,QAAU,CAAEC,MAAM,GACzB,IAAetK,GArDE,SAAUgC,EAAKN,G,UAC9B,IAAKM,EAAK,CAER,IACI,EADEyE,EAAU1F,EAAU2F,aAAY,GAEhC2N,EAAY,GAClB,IAAK,IAAMC,KAAO5S,EACZJ,MAAMC,QAAQG,EAAI4S,MAA+C,QAAtC,EAAsC,QAAtC,EAAkB,QAAlB,EAAAvT,EAAU2K,IAAI4I,UAAI,eAAEC,0BAAkB,6CAAMlO,QAAS,IAClFgO,EAAU3H,KAAK4H,GACf,EAAY,IAIhBD,EAAUxL,SAAQ,SAACyL,GACjB,EAAUA,GAAOvT,EAAU2K,IAAI4I,GAAKC,wBAEtC,IAAM,EAAU,IAAiB9N,EAAS/E,EAAK,GAC/C,IAAeX,EAAW,IAAI6F,oBAC9BpB,EAAQzE,EAAW,GACnBA,EAAU8E,QAAQ,mBAClB,IAAM,EAAY9E,EAAUoF,eACxBpF,EAAUsI,YAAYmL,YACxB9F,EAAU3N,EAAW,CACnBsG,QAASvG,EACTgP,SAAU,IAAmB/O,EAAW,cACvC,WACD,IAAMuT,EAAM,EAAQ,EAAUlL,SAAS,aACnCkL,GACF,EAAU/D,OAAO+D,EAAIrF,eAIrBpB,IAAS,IAAIuB,kBACf,EAAUvI,WAAW,GAQrB,EAAU4N,QAAQ,GAAS,GAG/BjU,GAAGC,MAAMC,MAAM,OAAQ,WAMzBO,EAJqB,CACnBe,IAAKA,EACLN,IAAKA,GAEgB,OAGQ8E,QAI/BkO,EAAa,SAAC5T,EAAQC,EAAWf,EAAQgB,EAAWC,GACxD,IAAMgG,EAAYlG,EAAUmG,eACtB0J,EAAc5Q,GAAUA,EAAOA,QAAiC,MAAvBA,EAAOA,OAAOgH,MACzD,CAACC,EAAUG,OAAOpH,EAAOA,OAAOgH,QAChCC,EAAU4J,kBACd,GAA0B,GAAtBD,EAAYvK,OAIhB,GAAIuK,EAAYvK,OAAS,EACvB7F,GAAGC,MAAMC,MAAM,aAAc,eAD/B,CAKA,IAAMiU,EAAY/D,EAAY,GACxBgE,EAAsB7T,EAAUwF,SAAS,uBACzCkH,EAAUzF,OAAOC,OAAO,CAC5B0F,GAAIgH,EAAU/E,cACbgF,GAKH5T,EAJsB,CACpBhB,OAAQA,EACRC,KAAMwN,IAEiB,WACvB1M,EAAUwQ,cAAc,CACtBC,KAAM,QACNkB,QAAS,CACP4B,IAAK,aACLrU,KAAM,CACJ4U,KAAM,KACN5U,KAAMwN,EACNqH,MAAO/T,MAIbE,YA7BAT,GAAGC,MAAMC,MAAM,OAAQ,YAgCrBqU,EAAc,SAACjU,EAAQgG,EAAW9G,EAAQgB,EAAWC,GAEvD+T,EAAQlU,EAAQgG,EAAW9G,EAAQgB,EAAWC,IAM5C+T,EAAU,SAAClU,EAAQC,EAAWf,EAAQgB,EAAWC,EAAUoH,GAO/D,IAAI4M,EACJ,GANyB,cAArBjV,EAAOyM,WAAkD,iBAArBzM,EAAOyM,WAC9BK,MAAXzE,IACFA,IAAY7H,GAAG0H,aAAaC,YAI5BnI,EAAOkV,aACT,IACED,EAAkB9U,KAAKC,MAAMJ,EAAOkV,cAAcC,WAClD,MAAOxR,GACPhD,QAAQ8S,MAAM,mCAAqC9P,EAAE1B,SAGpDgT,IACHA,EAAkB,MACpB,IAEIrE,EAFE3J,EAAYlG,EAAUmG,eACtBhB,EAAYnF,EAAUoF,eAExBjG,EAAa,GAEjB,IADAF,EAASA,GAAU,IACRE,WAAc,IAAMA,EAAaC,KAAKC,MAAMJ,EAAOE,YAAe,MAAOyD,IAWpF,GAVIzD,EAAWmH,SAA+B,SAApBnH,EAAWsR,MACnCZ,EAAc1K,EAAUE,mBACxBtF,EAASZ,EAAWmH,SACXJ,EACT2J,EAAc5Q,GAAUA,EAAOA,QAAiC,MAAvBA,EAAOA,OAAOgH,MACnD,CAACC,EAAUG,OAAOpH,EAAOA,OAAOgH,QAChCC,EAAU4J,kBACL3K,IACT0K,EAAc1K,EAAUE,oBAErBwK,GAAqC,GAAtBA,EAAYvK,OAAhC,CAIA,IAAIpG,EAEFA,EADEC,EAAWmH,SAA+B,SAApBnH,EAAWsR,KAC5BtL,EAAUkP,wBAAwBxE,GAChC3J,EACFA,EAAUmO,wBAAwBxE,GAElC1K,EAAUkP,wBAAwBxE,GAE3C,IAAMyE,EAAa,GAAUC,EAAc,GAC3C1E,EAAY/H,SAAQ,SAAUkI,EAAK/J,GAC7B+J,EAAIpD,IAAMoD,EAAIwE,OAChBvN,OAAOC,OAAOhI,EAAK+G,GAAQ,CACzBwO,KAAMzE,EAAIyE,KACV7H,GAAIoD,EAAIpD,GACR4H,MAAOxE,EAAIwE,SAGoC,IAA/CD,EAAY5F,QAAQqB,EAAIkE,MAC1BI,EAAW3I,KAAKzM,EAAK+G,IACrBsO,EAAY5I,KAAKqE,EAAIkE,OAEtB,GACH,IAAMzO,EAAW,CACfa,QAASvG,EACTb,KAAME,KAAKmH,UAAU+N,IAMvBrU,EAJsB,CACpBhB,OAAQA,EACRC,KAAMuG,IAEiB,WACvB,GAAI6B,EAAS,CACX,IAAMoN,EAAO1U,EAAUsI,YAAYqM,QACnClV,GAAGC,MAAM4H,QAAQ,OAAOrI,EAAOoI,aAAY,IAAIqN,EAAI,KAAK,WACtDE,EAAS5U,EAAWf,EAAQiB,EAAUoU,EAAY7O,EAAUyO,MAC3D,WACGjV,GAAUA,EAAO4V,iBACnB5V,EAAO4V,0BAGXD,EAAS5U,EAAWf,EAAQiB,EAAUoU,EAAY7O,EAAUyO,WA3C9DzU,GAAGC,MAAMC,MAAM,MAAO,YAgDpBiV,EAAW,SAAC5U,EAAWf,EAAQiB,EAAU2P,EAAapK,EAAUyO,GAkDpE,IAAejV,GAjDE,SAAUgC,EAAKN,GAC9B,IAAKM,EAAK,CACR,IAAM6T,EAAa7V,EAAOoI,aACC,IAAvBwI,EAAYvK,OACV3E,EAAI+M,UACNjO,GAAGC,MAAMC,MAASmV,EAAU,MAAMnU,EAAIoU,SAAS,GAAM,SAErDtV,GAAGC,MAAMC,MAASmV,EAAU,KAAM,WAIN,QAA1BrV,GAAG0H,aAAa6N,OAAoBhV,EAAUwF,SAAS,gBAOzDxF,EAAUwQ,cAAc,CACtBC,KAAM,QACNkB,QAAS,CACP4B,IAAK,WACLrU,KAAM,CACJuR,KAAM,EACN9P,IAAG,MAZLA,EAAI+M,UAAY,EAClBjO,GAAGC,MAAMC,MAAM,IAAImV,EAAanU,EAAIqB,MAAK,UAAUrB,EAAIsU,YAAW,OAAOtU,EAAI+M,UAAS,IAAK,SAE3FjO,GAAGC,MAAMC,MAAM,IAAImV,EAAanU,EAAIqB,MAAK,UAAUrB,EAAIsU,YAAW,IAAK,WA0B7EjV,EAAU8E,QAAQ,OAAQ7F,GAM5BiB,EAJqB,CACnBe,IAAKA,EACLN,IAAKA,GAEgB,OAEQ8E,IAG7ByP,EAAW,SAACnV,EAAQC,EAAW2P,EAAM1P,EAAWC,GACpD,IACI0M,EAAIF,EAEJa,EAHErH,EAAYlG,EAAUmG,eAExBhH,EAAa,GAGjB,IADAwQ,EAAOA,GAAQ,IACNxQ,WAAc,IAAMA,EAAaC,KAAKC,MAAMsQ,EAAKxQ,YAAe,MAAOyD,IAChF,GAAIzD,EAAWmH,SAA+B,SAApBnH,EAAWsR,KAAiB,CACpDlD,EAASpO,EAAWmH,QACpB,IAAMpB,EAAOF,EAAmBhF,GAChC4M,EAAK1H,EAAK0H,GACVF,EAAUxH,OACL,GAAIgB,EAAW,CACpB,IAAMF,EAAW2J,GAAQA,EAAK1Q,QAAU0Q,EAAK1Q,OAAOgH,MAC9C4J,EAA0B,MAAZ7J,EAAmB,CAACE,EAAUG,OAAOsJ,EAAK1Q,OAAOgH,QAAUC,EAAU4J,kBACzF,IAAKD,GAAsC,IAAvBA,EAAYvK,OAE9B,YADA7F,GAAGC,MAAMC,MAAM,UAAW,WAG5BiN,EAAKiD,EAAY,GAAGjD,GACpBF,EAAUmD,EAAY,GACtB3J,EAAUyD,SAAS,WAAY,CAAE3D,SAAQ,EAAE4G,GAAE,IAC7CW,EAAS,IAAmBvN,EAAW,eAClC,CAEL,KADMkF,EAAOF,EAAmBhF,IAG9B,YADAP,GAAGC,MAAMC,MAAM,UAAW,WAG5BiN,EAAK1H,EAAK0H,GACVF,EAAUxH,EACVqI,EAAS,IAAmBvN,EAAW,WAGzC,IAAIf,EAAS,CACXA,OAAQ0Q,EACR7C,KAAM,IAAIjH,mBACVsP,KAAMxF,EAAKwF,KACXvI,GAAE,EACFF,QAAO,EACPO,YAAa,IAGf,GAAI/G,EAAiC,CACnC,IACMD,EADOC,EAAUyE,IAAI,cACRyC,WAAU,SAAAtG,GAAQ,OAAAA,EAAK8F,IAAMA,KAChD5M,EAAU2J,SAAS,kBAAmB1D,GACtChH,EAASgI,OAAOC,OAAO,GAAIjI,EAAQe,EAAUwF,SAAS,wBAExDvF,EAAU,CACRhB,OAAQ0Q,EACRyF,MAAOnW,IACN,WACD,IAAMoO,EAAK,CACTC,SAAU,YACVC,OAAQA,EACRtO,OAAQA,GAEVQ,GAAG+N,OAAOC,eAAe,OAAQJ,EAAIrN,GACrCE,QAGEmV,EAAO,SAACtV,EAAQC,EAAW2P,EAAM1P,EAAWC,GAChD,IAAM4N,EAAW9N,EAAUsI,aAAetI,EAAUsI,YAAYwF,SAC5DA,IACE4C,EAAS5C,GACXoH,EAASnV,EAAQC,EAAW2P,EAAM1P,EAAWC,GAE7C,IAAYH,EAAQC,EAAW2P,EAAM1P,EAAWC,KAKhDoV,EAAU,SAACvV,EAAQC,EAAW2P,EAAM1P,EAAWC,GACnD,IAAMjB,EAASe,EAAUwF,SAAS,uBAC5BL,EAAYnF,EAAUoF,eAE5B,GADkBpF,EAAUmG,eAC5B,CAUA,IAAMoP,EAAMtO,OAAOC,OAAO,CACxBZ,QAASvG,GACR4P,GACGnH,EAAQxI,EAAUwF,SAAS,SACpB,MAATgD,IACF+M,EAAI/M,MAAQA,GACdvB,OAAOC,OAAOqO,EAAKvV,EAAUsI,YAAYC,OACzC,IAAMuD,EAAgB9L,EAAUwF,SAAS,iBAGzC,GAFIsG,IACFyJ,EAAIzJ,cAAgBA,GAClB3G,EAAW,CACb,IAAMD,EAAOF,EAAmBhF,GAChC,GAAIkF,EAAM,CACA,IAAA8I,EAAA,EAAAA,KAAMpB,EAAA,EAAAA,GACVoB,GAAQpB,GACV2I,EAAIvH,KAAOA,EACXuH,EAAItH,IAAMrB,EAAGsB,YAENF,EACPuH,EAAIvH,KAAOA,EACJpB,IACP2I,EAAItH,IAAMrB,EAAGsB,aAGnB,IAAMhP,EAAOO,GAAGC,MAAM8V,QAAO,EAAMD,EAAKtW,GAKpCgB,EACFA,EALoB,CACpBhB,OAAQA,EACRC,KAAMA,IAGmB,WACvBsI,EAAUxH,EAAWd,EAAMgB,MAG7BsH,EAAUxH,EAAWd,EAAMgB,OA5C7B,CACE,KAA6B,OAAzBT,GAAG0H,aAAa6N,OAEb5K,EAAmBpK,IAAef,GACrC,OAGJwW,EAAU1V,EAAQC,EAAWf,KAyC3ByW,EAAS,SAAC3V,EAAQC,EAAWf,EAAQgB,EAAWC,GACpDF,EAAU2J,SAAS,cAAc,GACjC3J,EAAU2J,SAAS,sBAAuB1K,GAK1CgB,EAJsB,CACpBhB,OAAQA,EACRC,KAAMD,IAEiB,WACvBqW,EAAQvV,EAAQC,EAAWf,EAAQ,KAAMiB,OAIvCuV,EAAY,SAAC1V,EAAQC,EAAWf,EAAQgB,EAAWC,GACvD,IAAIhB,EAAO,CACToH,QAASvG,EACTgP,SAAU,IAAmB/O,EAAW,aAEtCf,GAAUA,aAAkBgI,SAC9B/H,EAAO+H,OAAOC,OAAOhI,EAAMD,IAMzBgB,EACFA,EALoB,CACpBhB,OAAQA,EACRC,KAAMA,IAGmB,WACvByO,EAAU3N,EAAWd,EAAMgB,MAG7ByN,EAAU3N,EAAWd,EAAMgB,IAIzByV,EAAW,SAAC5V,EAAQC,EAAWf,EAAQgB,EAAWC,GACtD,IAAMiF,EAAYnF,EAAUoF,eAC5B,GAAKD,GAAclG,EACnB,GAAKA,EAAO2W,QAAZ,CAIA,IAAM1Q,EAAOF,EAAmBhF,GAChC,GAAIkF,EAAM,CACR,IAAMyK,EAAO,GACbA,EAAKkG,SAAW3Q,EAAKC,EAAUkD,SAAS,aACxC,IAAM,EAAW5I,GAAGC,MAAM8V,QAAO,EAAM7F,EAAM,CAC3C7C,KAAM,IAAIjH,qBAMZ5F,EAJsB,CACpBhB,OAAQA,EACRC,KAAM,IAEiB,WACvB,IAAMmO,EAAK,CACTC,SAAU,SACVC,OAAQtO,EAAO2W,QACf3W,OAAQ,GAEVQ,GAAG+N,OAAOC,eAAe,OAAQJ,EAAIrN,GACrCE,aArBFN,QAAQC,IAAI,6CA0BViW,EAAS,SAAC/V,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACpD,IAAMiF,EAAYY,EAAUX,eAC5B,GAAKD,EAAL,CACA,IAAM4Q,EAAgB5Q,EAAUE,mBAChC,GAAK0Q,EAAczQ,OAAnB,CAIA,IAAML,EAAa8Q,EAAc,GACjC,GAAI5Q,EAAU6Q,QAAQ/Q,GACpBxF,GAAGC,MAAMC,MAAM,cAAe,eADhC,CAIA,IAAMsW,EAAW9Q,EAAUkD,SAAS,YAC9BnJ,EAAO,CACXoH,QAASvG,EACTgB,OAAQ9B,EAAOyH,QACfkG,GAAI3H,EAAWgR,IAMjBhW,EAJsB,CACpBhB,OAAM,EACNC,KAAI,IAEmB,WAYvB,IAAeD,GAXE,SAAUgC,EAAKN,GACzBM,IACHxB,GAAGC,MAAMC,MAASV,EAAOoI,aAAY,KAAM,WAC3CtB,EAAUjB,QAAQ,SAMpB5E,EAJqB,CACnBe,IAAG,EACHN,IAAG,GAEkB,OAEQzB,YA9BjCO,GAAGC,MAAMC,MAAM,UAAW,aAkCxBuW,EAAW,SAACnW,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACtD,IAAMiF,EAAYY,EAAUX,eAC5B,GAAKD,EAAL,CACA,IAAM4Q,EAAgB5Q,EAAUE,mBAChC,GAAK0Q,EAAczQ,OAAnB,CAIA,IAAML,EAAa8Q,EAAc,GACjC,GAAI5Q,EAAUgR,OAAOlR,GACnBxF,GAAGC,MAAMC,MAAM,eAAgB,eADjC,CAIA,IAAMsW,EAAW9Q,EAAUkD,SAAS,YAC9BnJ,EAAO,CACXoH,QAASvG,EACTgB,OAAQ9B,EAAOyH,QACfkG,GAAI3H,EAAWgR,IAMjBhW,EAJsB,CACpBhB,OAAM,EACNC,KAAI,IAEmB,WAYvB,IAAeD,GAXE,SAAUgC,EAAKN,GACzBM,IACHxB,GAAGC,MAAMC,MAASV,EAAOoI,aAAY,KAAM,WAC3CtB,EAAUjB,QAAQ,SAMpB5E,EAJqB,CACnBe,IAAG,EACHN,IAAG,GAEkB,OAEQzB,YA9BjCO,GAAGC,MAAMC,MAAM,UAAW,aAkCxByW,EAAO,SAAUrW,EAAQgG,EAAW9G,EAAQgB,EAAWC,GAC3D,IAAImW,EAAY9N,EAChB,IAEE8N,GADA9N,EAAQnJ,KAAKC,MAAMJ,EAAOkV,eACPmC,kBACZ/N,EAAM+N,WACb,MAAO1T,GACPhD,QAAQ8S,MAAM,gCAAkC9P,EAAE1B,SAEpD,GAAKmV,EAAL,CACA,IAAM5Q,EAAW,CACf8Q,OAAQ,OACRhO,MAAK,GAEP9I,GAAG+N,OAAOC,eAAe,OAAQ,CAC/BH,SAAU,SACVC,OAAQ8I,EACRpX,OAAQwG,GACPM,KAGCyQ,EAAQ,SAAUzW,EAAQgG,EAAW9G,EAAQgB,EAAWC,GAC5D,IAAY6F,EAAW9G,IAenBwX,EAAa,SAAC1W,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACxD,GAAKjB,EAAL,CACA,IAAM+G,EAAW/G,EAAOA,QAAUA,EAAOA,OAAOgH,MAChD,GAAgB,MAAZD,EAAJ,CACA,IAAME,EAAYH,EAAUI,eAC5B,GAAKD,EAAL,CACA,IAAME,EAAaF,EAAUG,OAAOL,GACpC,GAAKI,EAAL,CACA,IAKImN,EALErU,EAAOgH,EAAUmO,wBAAwB,CAACjO,IAChDa,OAAOC,OAAOhI,EAAK,GAAI,CACrB0N,GAAIxG,EAAWwG,GACf4H,MAAOpO,EAAWoO,QAGpB,IAAMkC,EAAiB3Q,EAAU4E,IAAI,aACjC+L,IACFnD,EAAMmD,EAAerO,SAAS,iBAChCpJ,EAAO0X,QAAUpD,EACjB,IAAYxN,EAAW9G,EAAQC,EAAMe,EAAWC,QAE5C0W,EAAY,SAAC7W,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACvD,IAAMgG,EAAYH,EAAUI,eAGtB0J,EAAc3J,EAAU4J,kBAC9B,GAAKD,EAAYvK,OAAjB,CAIA,IASIiO,EATErU,EAAOgH,EAAUmO,wBAAwBxE,GAC/CA,EAAY/H,SAAQ,SAACkI,EAAK/J,GACpB+J,EAAIpD,IAAMoD,EAAIwE,OAChBvN,OAAOC,OAAOhI,EAAK+G,GAAQ,CACzB2G,GAAIoD,EAAIpD,GACR4H,MAAOxE,EAAIwE,WAKjB,IAAMkC,EAAiB3Q,EAAU4E,IAAI,aACjC+L,IACFnD,EAAMmD,EAAerO,SAAS,iBAChCpJ,EAAO0X,QAAUpD,EACjB,IAAYxN,EAAW9G,EAAQC,EAAMe,EAAWC,QAjB9CT,GAAGC,MAAMC,MAAM,UAAW,YAmBxBwV,EAAO,SAACpV,EAAQgG,EAAW9G,EAAQgB,EAAWC,GAClD,GAAKjB,EAAL,CACA,IAAM+G,EAAW/G,EAAOA,QAAUA,EAAOA,OAAOgH,MAChD,GAAgB,MAAZD,EAAJ,CACA,IAAME,EAAYH,EAAUI,eAC5B,GAAKD,EAAL,CACA,IAAME,EAAaF,EAAUG,OAAOL,GAC/BI,GACL,IAAYL,EAAW9G,EAAQmH,EAAWwG,GAAI3M,EAAWC,OAIrDyL,EAAO,SAAC5L,EAAQC,EAAWf,EAAQgB,EAAWC,GAClD,IAAM2W,EAAc,IAAIpX,GAAGC,MAAMmX,YAAY5X,EAAO+J,SAC9C8N,EAAaD,EAAYlM,IAAI,QAC7BzE,EAAYlG,EAAUmG,eACtB8H,EAAMyB,EAAiBxJ,GAC7B,GAAK+H,GAAqB,GAAdA,EAAI3I,QAIhB,GAAIwR,EAAY,CACd,IAAM,EAAY,CAChBrC,KAAMqC,EACNC,aAAc,EACdC,SAAU/I,GAEN,EAAM,CACVjF,QAAS6N,EAAYI,SAAWJ,EAAYK,QAC5C7N,YAAapK,EAAOoK,aAMtBpJ,EAJsB,CACpBhB,OAAQA,EACRC,KAAM,IAEiB,WAWvB,IAAe,GAVE,SAAU+B,EAAKN,GAQ9BT,EAJqB,CACnBe,IAAKA,EACLN,IAAKA,GAEgB,OAEK,YA5BhClB,GAAGC,MAAMC,MAAM,UAAW,YAiCxBwX,EAAoB,SAACpX,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACvD,IAAAoR,EAAA,EAAAA,SAAU,IAAA8F,qBAAA,IAAgB,EAAhB,IAAmBC,EAAA,EAAAA,YAI/BnG,EAAc,CAAEI,SAAQ,EAAEI,SAJkB,EAAAA,SAIRD,SAJkB,EAAAA,SAIRD,QAFpC/R,GAAGC,MAAM4X,mBAEoC/F,QAD7CxL,EAAUuC,cAAgBvC,EAAUuC,YAAYkK,MAAQzM,EAAUuC,YAAYqM,SACxBvD,WAAY,EAAGD,UAAW,MAChGpL,EAAUyK,cAAc,CACtBC,KAAM,cACNkB,QAAST,IAEX,IAAMqG,EAAStG,aAAY,WACzBuG,EAAiBzR,EAAWmL,EAAamG,KACxB,IAAhBD,GACHrR,EAAU4D,SAAS2H,EAAUiG,GAC7B9X,GAAGC,MAAMC,MAAM,uBAGX8X,EAAS,SAAC1X,EAAQC,EAAWf,EAAQgB,EAAWC,GACpD,IAAMgG,EAAYlG,EAAUmG,eACxBuR,EAAU,GACVC,OAAOC,WACTF,EAA2C,MAAjCC,OAAOC,SAASC,OAAO,EAAG,GAAaF,OAAOC,SAAW,IAAMD,OAAOC,UAElF,IAAME,EAAWJ,EAAU,SAAWzY,EAAO+J,QACvC6N,EAAc,IAAIpX,GAAGC,MAAMmX,YAAYiB,GAEvCC,EAAc,CAClBC,OAFanB,EAAYoB,IAAI,QAAUpB,EAAYlM,IAAI,QAAU,MAGjE8F,KAAM,SACNyH,KAAM,CACJC,KAAM,CACJrO,SAAU5D,EAAUkS,cACpBvO,UAAW3D,EAAUmS,gBAEvB/R,QAASvG,IAIPgJ,EAAM,IAAIuP,iBAKhBrY,EAJsB,CACpBhB,OAAQA,EACRC,KAAM6Y,IAEiB,WACvB,IAA0BhP,EAAKgP,GAC/B7X,QAGEqY,EAAwB,SAACxS,EAAWmL,EAAasH,GACrD,IAAMjB,EAASxR,EAAUP,SAAS0L,EAAYI,UAC9CvL,EAAU+L,WAAWZ,EAAYI,UACjCiG,GAAUkB,aAAalB,GACnBiB,IACF/Y,GAAGC,MAAMC,MAAM6Y,GACftH,EAAYwH,UAAW,EACvBxH,EAAYsH,OAASA,EACrBzS,EAAUyK,cAAc,CACtBC,KAAM,cACNkB,QAAST,MAITsG,EAAmB,SAACzR,EAAWmL,EAAamG,GAChD,IAAM/F,EAAWJ,EAAYI,SAEf7R,GAAGwJ,KAAK0P,aAAaC,OAAO,CACxCC,iBAAkB,CAChB9P,IAHQ,6BAIRK,OAAQ,MACRE,QAAS,CAAEC,MAAM,MAIfsP,iBAAiB,CAAEvH,SAAUA,IAAY,SAAUrQ,EAAK1B,GAC5D,IAAIiZ,EAAS,GACb,GAAIvX,EAGF,OAFAuX,EAASvX,EAAIC,aACbqX,EAAsBxS,EAAWmL,EAAasH,GAGhD,GAAIjZ,EAAQ,CACV,IAAIoB,OAAG,EACP,IACEA,EAAMvB,KAAKC,MAAME,GAEnB,MAAOqD,GAGL,YADA2V,EAAsBxS,EAAWmL,EADjCsH,EAAS,iBAAmBjZ,GAI9B,IAAM6R,EAAa0H,WAAWnY,EAAIyQ,YAAc,KAChC,KAAZzQ,EAAI6J,MACNgO,EAAS,WACL7X,EAAIzB,OACNsZ,EAASA,EAAS,SAAW7X,EAAIzB,MACnCqZ,EAAsBxS,EAAWmL,EAAasH,IAE3B,GAAZ7X,EAAI6J,MAAa4G,GAAc,MACtCmH,EAAsBxS,EAAWmL,GACjCnL,EAAUjB,QAAQ,WAClBiB,EAAUjB,QAAQ,mBAAoBmC,OAAOC,OAAO,CAAEvG,IAAKA,EAAIzB,MAAQgS,KAEzEA,EAAYC,UAAY5R,EACxB2R,EAAYE,WAAaA,EACzBrL,EAAUyK,cAAc,CACtBC,KAAM,cACNkB,QAAST,SAMX6H,EAAgB,SAAChZ,EAAQgG,EAAW9G,EAAQgB,EAAWC,GAC3D,IAAMmX,EAAc,CAClB2B,iBAAkB/Z,EAAO+Z,iBACzBnE,gBAAiB5V,EAAO4V,iBAE1B5V,EAAO+Z,kBAAmB,EAC1B/Z,EAAO4V,iBAAkB,EACzB,IAAMoE,EAAgB,CAAEha,OAAM,EAAEC,KAAM,IAClCga,GAAU,EACV9B,EAAgB,EACd9F,EAAW,eAAiB7R,GAAGC,MAAMyZ,aAAanR,QAAQ,KAAM,IAClEoR,EAAmB,GACvB,GAAIna,EAAOE,WAAY,CACrB,IAAMA,EAAaC,KAAKC,MAAMJ,EAAOE,YACjCA,IACF+Z,EAAU/Z,EAAW+Z,QACrB9B,EAAgBjY,EAAWka,UAAYjC,EACvCgC,EAAmBja,EAAWia,kBAAoB,IAItDnZ,EAAUgZ,GAAe,WACvB,IAAMK,EAAWC,SAASC,cAAc,SACxCF,EAAS7I,KAAO,OACZ2I,IACFE,EAASG,OAASL,GAEpBE,EAASI,MAAMC,QAAU,OACzBL,EAASM,SAAW,SAAUhX,GAC5BnD,GAAGC,MAAMma,eAAeC,MAAM,UAC9BzC,EAAY2B,kBAAoB3B,EAAY2B,mBAC5C,IAAMe,EAAW,IAAIC,SACrBD,EAASE,QAAU,sBACnB,IAAMC,EAAOtX,EAAEuX,OAAOC,MAAM,GACtB3I,EAAWyI,GAAQA,EAAK1H,KACxBd,EAAWwI,GAAQA,EAAKpG,KAE9BiG,EAASM,OAAO,OAAQH,GACpBjB,EAAc/Z,KAAKob,cACrBP,EAASM,OAAO,eAAgBjb,KAAKmH,UAAU0S,EAAc/Z,KAAKob,eACpE,IAAMC,EAAM,IAAIC,eACZzR,EAAS9J,EAAO+J,QAAO,YAAY,IAAmBjD,EAAW,WACrE,IACmD,kBAA7C,IAAmBA,EAAW,aAChCgD,EAAS9J,EAAO+J,QAAO,YAAYiQ,EAAc/Z,KAAKob,aAAahU,SAErE,MAAOoM,GACP9S,QAAQ8S,MAAMA,GAGhB,IAAM+H,EAAc1U,EAAUsC,SAAS,gBAAkB5I,GAAGwJ,KAAKyR,WAAWnS,MAAMkS,YAC9EA,IAEF1R,EAAMA,EAAM,gBAAkB0R,GAE5BvB,IACFnQ,EAAMA,EAAM,aAAeuI,GAE7B,IAAMqJ,EAAOhD,OAAOC,SAAW,GAAGD,OAAOC,SAAW7O,EAAQA,EAC5DwR,EAAI9T,KAAK,OAAQkU,GAAM,GACvBJ,EAAIK,KAAKb,GACLb,GACF7B,EAAYxC,iBAAmBwC,EAAYxC,kBAC3C0F,EAAIM,mBAAqB,WACvBpb,GAAGC,MAAMma,eAAeiB,MACxB,IAAIC,GAAS,EACTC,EAAY,GAChB,GAAuB,IAAnBT,EAAIU,WAAR,CACA,GAAmB,MAAfV,EAAIW,OAAgB,CACtB,IAAIC,OAAU,EACd,IACEA,EAAa/b,KAAKC,MAAMkb,EAAIa,cAE9B,MAAOxY,GACLmY,GAAS,EACTC,EAAY,iBAAmBT,EAAIa,aAEjCD,GAAkC,MAApBA,EAAW1G,OAE3BsG,GAAS,EACTC,EAAY,YAAYG,EAAWja,QAAO,UAGvB,GAAdqZ,EAAIW,QACXH,GAAS,EACTC,EAAY,YAGZD,GAAS,EACTC,EAAY,+BAAiCT,EAAIU,WAAa,iBAAmBV,EAAIW,OAAS,wBAA0BX,EAAIa,cAE9H,GAAIL,EAIFtb,GAAGC,MAAMC,MAAMqb,QAMf7D,EAAkBpX,EAAQgG,EAHN,CAClBuL,SAAQ,EAAE8F,cAAa,EAAEC,YAAW,EAAE3F,SAAQ,EAAED,SAAQ,OAO9D8I,EAAIM,mBAAqB,WAEvB,GADApb,GAAGC,MAAMma,eAAeiB,MACD,IAAnBP,EAAIU,WAER,GADA5D,EAAYxC,iBAAmBwC,EAAYxC,kBACxB,MAAf0F,EAAIW,OAAgB,CACtB,IAAIC,OAAU,EACd,IACEA,EAAa/b,KAAKC,MAAMkb,EAAIa,cAE9B,MAAOxY,GAEL,YADAnD,GAAGC,MAAMC,MAAM,iBAAmB4a,EAAIa,cAGxC,GAAID,GAAkC,MAApBA,EAAW1G,KAAc,CACzC,IAAM9T,EAAMwa,EAAWjc,KACnByB,EAAIsU,aACNlP,EAAUjB,QAAQ,WACpBiB,EAAUyK,cAAc,CACtBC,KAAM,QACNkB,QAAS,CACP4B,IAAK,WACLrU,KAAM,CACJuR,KAAM,EACN9P,IAAG,WAKTlB,GAAGC,MAAMC,MAAM,YAAYwb,EAAWja,QAAO,IAAK,cAIpDtB,QAAQC,IAAI,+BAAiC0a,EAAIU,WAAa,iBAAmBV,EAAIW,OAAS,wBAA0BX,EAAIa,eAIlI7B,SAAS8B,KAAKC,YAAYhC,IAE5BC,SAAS8B,KAAKE,YAAYjC,GAC1BA,EAASkC,YAIPC,EAAwB,SAAC1b,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACnE,IAAIwX,EAAU,GACVC,OAAOC,WACTF,EAA2C,MAAjCC,OAAOC,SAASC,OAAO,EAAG,GAAaF,OAAOC,SAAW,IAAMD,OAAOC,UAElF,IAAME,EAAWJ,EAAU,SAAWzY,EAAO+J,QACvC6N,EAAc,IAAIpX,GAAGC,MAAMmX,YAAYiB,GACvC/O,EAAM8N,EAAYI,SAAWJ,EAAYK,QACzCzR,EAAW,CACfa,QAAS,IAAmBP,EAAW,YAEnCkT,EAAgB,CACpBha,OAAQA,EACRC,KAAMuG,GAERxF,EAAUgZ,GAAe,WACvB,IAAMxH,EAAW1L,EAAUuC,YAAYqM,QACnClD,IACFhM,EAASgM,SAAcA,EAAQ,MAEjC,IAA0B1I,EAAKkQ,EAAc/Z,MAC7CgB,QAIEwb,EAA8B,SAAC3b,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACzE,IAAMyb,EAAU1c,GAAUA,EAAO+J,QAC5B2S,EAKL1b,EADsB,CAAEhB,OAAM,IACL,WACvB0Y,OAAOlR,KAAKkV,GACZzb,OANAT,GAAGC,MAAMC,MAAM,YAAa,UAU1Bic,EAAe,SAAC7b,EAAQgG,EAAW9G,EAAQgB,EAAWC,GAa1D,IAAMsI,EAAQzC,EAAUP,SAAS,SAC3BU,EAAYH,EAAUI,eAC5B,GAAID,IACgBA,EAAU2V,eAG1B,YADApc,GAAGC,MAAMC,MAAM,sBAAuB,SAI1C,IAAI+X,EAAU,GACVC,OAAOC,WACTF,EAA2C,MAAjCC,OAAOC,SAASC,OAAO,EAAG,GAAaF,OAAOC,SAAW,IAAMD,OAAOC,UAElF,IAAME,EAAWJ,EAAU,SAAWzY,EAAO+J,QACvC6N,EAAc,IAAIpX,GAAGC,MAAMmX,YAAYiB,GACvC/O,EAAM8N,EAAYI,SAAWJ,EAAYK,QACzCzR,EAAWwB,OAAOC,OAAO,CAC7BZ,QAASvG,GAAU,IAAmBgG,EAAW,WACjD+F,cAAe/F,EAAUP,SAAS,kBACjCO,EAAUuC,YAAYC,MAAOxC,EAAUP,SAAS,+BAC5CC,EAASiD,WACH,MAATF,IACF/C,EAAS+C,MAAQA,GAKnBvI,EAJsB,CACpBhB,OAAQA,EACRC,KAAMuG,IAEiB,WACvB,IAA0BsD,EAAKtD,GAC/BvF,QAIE4b,EAAmB,SAAC/b,EAAQgG,EAAW9G,EAAQgB,EAAWC,GAC9D6F,EAAUyK,cAAc,CACtBC,KAAM,QACNkB,QAAS,CACP4B,IAAK,mBACLrU,KAAM,CACJ6U,MAAOhO,OAMTgW,GAAqB,SAAChc,EAAQC,EAAWf,EAAQgB,EAAWC,GAChE,IAAIqT,EACEmD,EAAiB1W,EAAU2K,IAAI,aACjC+L,IACFnD,EAAMmD,EAAerO,SAAS,iBAChC,IAAMnC,EAAYlG,EAAUmG,eAmBtBV,EAAW,CAAEa,QAASvG,GACxBwT,IACF9N,EAAS8N,IAAMrN,EAAU8V,eAAezI,EAAK,eAC/C,IAAM/K,EAAQxI,EAAUwF,SAAS,SAGjC,GAFa,MAATgD,IACF/C,EAAS+C,MAAQA,GACftC,EAAW,CACb,IAAM2J,EAAc5Q,GAAUA,EAAOA,QAAiC,MAAvBA,EAAOA,OAAOgH,MACzD,CAACC,EAAUG,OAAOpH,EAAOA,OAAOgH,QAChCC,EAAU4J,kBACd,IAAKD,GAAqC,GAAtBA,EAAYvK,OAE9B,YADA7F,GAAGC,MAAMC,MAAM,MAAO,WAIxB,GAAIkQ,EAAYvK,OAAS,IAEvB,YADA7F,GAAGC,MAAMC,MAAM,wBAAyB,WAG1C,IAAM,EAAO,GACbkQ,EAAY/H,SAAQ,SAAUkI,GACxBuD,EACF,EAAK5H,KAAKqE,EAAIuD,IACLvD,EAAIpD,IAAMoD,EAAIwE,OACvB,EAAK7I,KAAKqE,EAAIpD,MAEf,GACHnH,EAASwI,IAAM,EAAK4E,OAEtB,IAAI6E,EAAU,GACVC,OAAOC,WACTF,EAA2C,MAAjCC,OAAOC,SAASC,OAAO,EAAG,GAAaF,OAAOC,SAAW,IAAMD,OAAOC,UAElF,IAAME,EAAWJ,EAAU,SAAWzY,EAAO+J,QACvC6N,EAAc,IAAIpX,GAAGC,MAAMmX,YAAYiB,GAC7CjB,EAAYoF,IAAI,cAAexc,GAAGwJ,KAAKyR,WAAWnS,MAAMkS,aAAe,IACvE,IAAM1R,EAAM8N,GAAeA,EAAYI,SAAWJ,EAAYK,QAK9DjX,EAJsB,CACpBhB,OAAQA,EACRC,KAAMuG,IAEiB,WACvB,IAAMgM,EAAWzR,EAAUsI,YAAYqM,QACnClD,IACFhM,EAASgM,SAAWA,GAEtB,IAA0B1I,EAAKtD,GAC/BvF,QAIEgc,GAAQ,SAACnc,EAAQC,EAAWf,EAAQgB,EAAWC,GACnD,IAAMgG,EAAYlG,EAAUmG,eAC5B,GAAKD,EAAL,CAGA,IAEMT,EAAW,CACf0W,KAAM,CACJjE,KAAM,CACJC,KAAM,CACJrO,SANS5D,EAAUkS,cAOnBvO,UANU3D,EAAUmS,gBAQtB/R,QAASvG,GAEX0Q,KAAM,SACN2L,OAAO,IAOXnc,EAJsB,CACpBhB,OAAQA,EACRC,KAAMuG,IAEiB,WASvB,IAAeA,EAAUxG,GARR,SAAUgC,EAAK1B,GAC1B0B,EACFrB,QAAQ8S,MAAMzR,IAGhB0W,OAAOlR,KAAKlH,GACZW,aAKAmc,GAAU,SAACtc,EAAQC,EAAWf,EAAQgB,EAAWC,GACrDD,EAAU,CAAEhB,OAAM,IAAI,WACpB,IAAMqd,EAAWtc,EAAU2K,IAAI,aAAa4R,WAC5C,GAAKD,EAAL,CAIA,IAAME,EAAS7E,OAAOlR,KAAK,eACrBgW,EAAQhd,GAAGwJ,KAAK0P,aAAaC,OAAO,CACxCyD,QAAS,CAAEtT,IAAK,qBAAsBK,OAAQ,UAE1C6E,EAAMyB,EAAiB1P,EAAUmG,gBACjC4H,EAAY/N,EAAUwF,SAAS,uBAAyBpG,KAAKmH,UAAUvG,EAAUwF,SAAS,uBAAuBuI,WAAa,KAC9HtB,EAAO,CACXiQ,MAAOzd,EAAO+J,SAAW,QACzBuE,OAAQxN,EACRuc,SAAUA,EACVrO,IAAKA,EACLF,UAAWA,GAEb0O,EAAMJ,QAAQ5P,GAAM,SAAUxL,EAAK1B,GACjC,IAAK0B,EAAK,CACR,IAAM,EAAS,MACT,EAAc,IAAIxB,GAAGC,MAAMmX,YAAYtX,GAC7C,EAAY0c,IAAI,SAAU,GAC1B,EAAYA,IAAI,SAAU,MAC1BO,EAAOG,SAASC,KAAO,EAAY3F,SAAW4F,mBAAmB,EAAY3F,SAC7ES,OAAOmF,iBAAiB,WAAW,SAACC,GACX,YAAnBA,EAAM7d,KAAKqU,KAAqBwJ,EAAM7d,KAAK8R,SAAW,IACxDvE,EAAKuQ,SAAW,EAAYrS,IAAI,YAChC6R,EAAOS,YAAY,CAAE1J,IAAK,SAAUzI,MAAO2B,GAAQsQ,EAAMG,YAE1D,GAMLhd,EAJqB,CACnBe,IAAKA,EACLN,IAAKpB,GAEgB,aAlCvBE,GAAGC,MAAMC,MAAM,UAAW,eAsC1Bwd,GAAoB,SAACpd,EAAQC,EAAWf,EAAQgB,EAAWC,GAC/D,IAAMkd,EAAUpd,EAAU2K,IAAI,IAAI0S,oBAAsBrd,EAAU2K,IAAI,IAAI0S,mBAAmBd,YAAcvc,EAAU2K,IAAI,IAAI0S,mBAAmBd,WAAWrO,WACrJhI,EAAYlG,EAAUmG,eACtB8H,EAAMyB,EAAiBxJ,GAC7B,GAAK+H,GAAqB,GAAdA,EAAI3I,OAAhB,CAIA,IAAMG,EAAW,CACf0W,KAAM,CACJjE,KAAM,CACJ5R,QAAS,IAAmBtG,EAAW,WACvCiO,IAAKA,EACLqP,MAAOF,GAET3M,KAAM,cAOVxQ,EAJsB,CACpBhB,OAAQA,EACRC,KAAMuG,IAEiB,WASvB,IAAeA,EAAUxG,GARR,SAAUgC,EAAK1B,GAC1B0B,EACFrB,QAAQ8S,MAAMzR,IAGhB0W,OAAOlR,KAAKlH,GACZW,gBAxBFT,GAAGC,MAAMC,MAAM,UAAW,YA+BxB4d,GAAe,SAACxd,EAAQC,EAAWf,EAAQgB,EAAWC,GAC1DD,EAAUhB,GAAQ,WAChB,IAAMiH,EAAYlG,EAAUmG,eAItB,qBAAEqX,EAAA,EAAAA,cAAezU,EAAA,EAAAA,IACvB,IAAKyU,EACH,OAAO,GAEYtX,GAAaA,EAAU4J,mBAAsB,IAClDxK,OAAS,IACvB7F,GAAGC,MAAM4H,QAAQ,mCAAmC,WAClD,IAAgBrI,EAAQe,MACvB,WACDyd,GAAkBD,EAAezU,MAGnC0U,GAAkBD,EAAezU,GAInC7I,QAGEud,GAAoB,SAACD,EAAezU,GACxC,IAAM2U,EAAY,IAAqBF,GACvC,GAAIE,EAAUpY,OAAS,IAAM,CAC3B,IAAMmX,EAAQhd,GAAGwJ,KAAK0P,aAAaC,OAAO,CACxC+E,UAAW,CAAE5U,IAAK,cAAeK,OAAQ,OAAQE,QAAS,CAAEsU,SAAS,MAEjEC,EAAeze,KAAKmH,UAAUiX,EAAcve,QAClDwd,EAAMkB,UAAU,CAAEG,MAAOD,IAAgB,SAAUE,EAAMC,GACvD,GAAIA,EAAI,CACNR,EAAcS,SAAW,EACzBT,EAAcve,OAAS+e,EAAGzK,IAC1B,IAAM2K,EAAmB,IAAqBV,GAC9C7F,OAAOlR,KAAKsC,EAAMmV,EAAkB,mBAIxCvG,OAAOlR,KAAKsC,EAAM2U,EAAW,WAI3BS,GAAc,SAACpe,EAAQC,EAAWf,EAAQgB,EAAWC,GACzDD,EAAU,CAAEhB,OAAM,IAAI,WAKd,wBAAEue,EAAA,EAAAA,cAAezU,EAAA,EAAAA,IACvB4O,OAAOlR,KAAKsC,EAAM,IAAqByU,GAAgB,cAKrDY,GAAW,SAACre,EAAQC,EAAWf,EAAQgB,EAAWC,GACtDD,EAAUhB,GAAQ,WAChB,IAAgBA,EAAQe,GACxBE,QAGEme,GAAS,SAACte,EAAQC,EAAWf,EAAQgB,EAAWC,GACtCT,GAAGwJ,KAAK0P,aAAaC,OAAO,CACxC0F,OAAQ,CAAEvV,IAAK,eAAgBK,OAAQ,SAEnCkV,OAAO,CAAE/Q,OAAQxN,IAAU,SAAUkB,EAAK1B,GAC1C0B,EACFxB,GAAGC,MAAMC,MAAMsB,EAAIC,QAAS,SAG9BzB,GAAGC,MAAMC,MAAM,WAAY,eAGzB4e,GAAW,SAACxe,EAAQC,EAAWf,EAAQgB,EAAWC,GAYtD,IAAMhB,EAAOD,EAAOyN,QACdzG,EAAQhH,EAAOgH,aACdhH,EAAOyN,eACPzN,EAAOgH,MACd,IAAMR,EAAW,CACfa,QAASvG,EACTb,KAAME,KAAKmH,UAAUrH,IAMvBe,EAJsB,CACpBhB,OAAQA,EACRC,KAAMuG,IAEiB,WACvBhG,GAAGC,MAAM4H,QAAQ,UAAU,WACzB,IAAerI,GAAQ,SAAUgC,EAAKoR,GACpC,IAAKpR,EAAK,CAYR,IAAMiF,EAAYlG,EAAUmG,eACxBD,GACFA,EAAUsY,WAAW,CAACvY,IAExBxG,GAAGC,MAAMC,MAAM,OAAQ,WAMzBO,EAJqB,CACnBe,IAAKA,EACLN,IAAK0R,GAEgB,OACtB5M,UAKHgZ,GAAa,SAAU1e,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACjE,GAAuC,WAAnC6F,EAAUuC,YAAYwF,SAA1B,CAIA,IAAMlB,EAAK7G,EAAU4E,IAAI,OAAS5E,EAAU4E,IAAI,MAAM4R,WAChD9H,EAAO1O,EAAU4E,IAAI,SAAW5E,EAAU4E,IAAI,QAAQ4R,WAC5D,GAAI9c,GAAGC,MAAMuL,QAAQ2B,IAAOnN,GAAGC,MAAMuL,QAAQwJ,GAC3ChV,GAAGC,MAAMC,MAAM,UAAW,aAD5B,CAIA,IAAMwN,EAAU,IAAmBpH,EAAW,WAC9C,GAAItG,GAAGC,MAAMuL,QAAQkC,GACnB1N,GAAGC,MAAMC,MAAM,iBAAkB,aADnC,CAIA,IAAM8c,EAAQhd,GAAGwJ,KAAK0P,aAAaC,OAAO,CACxC8F,YAAa,CAAE3V,IAAK,wBAAyBK,OAAQ,MAAOE,QAAS,CAAEC,MAAM,IAC7E2S,MAAO,CAAEnT,IAAK,4BAA6BK,OAAQ,OAAQE,QAAS,CAAEC,MAAM,MAE9EkT,EAAMiC,YAAY,CAAEnR,OAAQJ,IAAW,SAAUlM,EAAK/B,GACpD,GAAI+B,EACFxB,GAAGC,MAAMC,MAAMsB,EAAIC,QAAS,aAD9B,CAIA,IAAMyd,EAA+B,IAAhBzf,EAAKoG,OAAepG,EAAK,GAAKA,EAAK2H,MAAK,SAAAC,GAC3D,OAAOA,EAAK8X,aAEd,GAAInf,GAAGC,MAAMuL,QAAQ0T,GACnBlf,GAAGC,MAAMC,MAAM,eAAgB,aADjC,CAIA,IAAMV,EAAS,CAAEsO,OAAQJ,EAASwR,aAAcA,EAAaE,cACzDpK,EACFxV,EAAOwV,KAAOA,EAEdxV,EAAOgP,IAAM,CAACrB,GAChB6P,EAAMP,MAAMjd,GAAQ,SAAUgC,EAAK1B,GAC7B0B,EACFxB,GAAGC,MAAMC,MAAMsB,EAAIC,QAAS,SAG9BjB,EAAUV,GAAQ,WAChBE,GAAGC,MAAM+e,WAAWlf,qBAzCxBuf,GAAiB/e,EAAQgG,EAAW9G,EAAQgB,EAAWC,IA+CrD6e,GAAY,SAAUhf,EAAQgG,EAAW9G,EAAQgB,EAAWC,GAChE6F,EAAU4D,SAAS,QAAS5D,EAAU4E,IAAI,aAAa4R,YAAc,MACrEjH,EAAQvV,EAAQgG,EAAW,CAAEmG,eAAe,GAAQjM,EAAWC,IAG3D4e,GAAmB,SAAU/e,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACvE,IAAMuc,EAAQhd,GAAGwJ,KAAK0P,aAAaC,OAAO,CACxC8F,YAAa,CAAE3V,IAAK,wBAAyBK,OAAQ,MAAOE,QAAS,CAAEC,MAAM,IAC7E2S,MAAO,CAAEnT,IAAK,8BAA+BK,OAAQ,OAAQE,QAAS,CAAEC,MAAM,MAEhFkT,EAAMiC,YAAY,CAAEnR,OAAQxN,IAAU,SAAUkB,EAAK/B,GACnD,GAAI+B,EACFxB,GAAGC,MAAMC,MAAMsB,EAAIC,QAAS,aAD9B,CAIA,IAAMyd,EAA+B,IAAhBzf,EAAKoG,OAAepG,EAAK,GAAKA,EAAK2H,MAAK,SAAAC,GAC3D,OAAOA,EAAK8X,aAEd,GAAInf,GAAGC,MAAMuL,QAAQ0T,GACnBlf,GAAGC,MAAMC,MAAM,eAAgB,aADjC,CAIA,IAAMqf,EAAsBjZ,EAAUP,SAAS,uBACzCuI,EAAYiR,EAAsB5f,KAAKmH,UAAUyY,EAAoBjR,WAAa,KAClF9O,EAAS,CAAEsO,OAAQxN,EAAQ4e,aAAcA,EAAaE,aAAc9Q,UAAS,EAAE2O,MAAO,gBAC5FD,EAAMP,MAAMjd,GAAQ,SAAUgC,EAAK1B,GAC7B0B,EACFxB,GAAGC,MAAMC,MAAMsB,EAAIC,QAAS,SAG9BjB,EAAUV,GAAQ,WAChBE,GAAGC,MAAM+e,WAAWlf,eAKtB0f,GAAc,SAAClf,EAAQgG,EAAW9G,EAAQgB,EAAWC,GACzD6F,EAAUyK,cAAc,CACtBC,KAAM,QACNkB,QAAS,CACP4B,IAAK,cACLrU,KAAM,CACJ4O,SAAU,OACV/N,OAAQA,EACRgU,MAAOhO,EACP9G,OAAQA,OAcVigB,GAAa,SAACnf,EAAQC,EAAWf,EAAQgB,EAAWC,GACxD,IAAMiN,EAAU,IAAmBnN,EAAW,WAC9C,GAAKmN,EAAL,CAIA,IAAMjO,EAAO,CACXD,OAAQ,CAAEkgB,SAAU,cACpBC,gBAAiBpf,EACjBqf,QAASlS,EACTmS,OAAQtf,EAAUmG,eAAeE,OAAOpH,EAAOA,OAAOgH,OAAO2G,IAE/D5M,EAAUwQ,cAAc,CACtBmB,QAAS,CACP4N,MAAO,WACP9O,KAAM,WACN1H,IAAK,0BAELyW,aAAa,EACbC,MAAOzf,EACPd,KAAMA,UAjBRO,GAAGC,MAAMC,MAAM,iBAAkB,YAsB/B+f,GAAW,SAAC3f,EAAQC,EAAWf,EAAQgB,EAAWC,GACtD,IAAMgG,EAAYlG,EAAUmG,eACtBH,EAAW/G,GAAUA,EAAOA,QAAUA,EAAOA,OAAOgH,MAC1D,GAAgB,MAAZD,GACCE,EAAL,CACA,IAAME,EAAaF,EAAUG,OAAOL,GACpC,GAAKI,EACL,GAAKA,EAAWuZ,gBAA6C,IAA3BvZ,EAAWwZ,YAA7C,CAIA,IAAMzS,EAAU,IAAmBnN,EAAW,WAC1C6f,EAAiB1S,EAAO,IAAI/G,EAAWwG,GACtCO,IACH0S,EAAiB9f,EAAM,IAAIqG,EAAWwG,IAExC,IAAM1N,EAAO,CACX4gB,MAAO,IACPC,OAAQ,IACRC,UAAW,IAAIC,QACfJ,YAAW,GAMb5f,EAJsB,CACpBhB,OAAQA,EACRC,KAAMA,IAEiB,WACHyY,OAAOuI,SAAShhB,GACxBihB,YAAY,CACtBC,QAAO,SAACC,IAEergB,EAAUwF,SAAS,eAAiB,IAC5CsC,SAAQ,SAAAhB,GACjB,IAAMiB,EAAQjB,EAAKkB,QAAQ,QAAQ,SAAUC,GAC3C,OAAOA,EAAEC,iBAEXlI,EAAU2J,SAAS,OAAO5B,GAAS,MAErCuN,EAAQvV,EAAQC,cA9BtBP,GAAGC,MAAMC,MAAM,SAAU,aAuCvB2gB,GAAkB,SAACvgB,EAAQC,EAAWf,EAAQgB,EAAWC,GAC7D,IAAuBH,EAAQC,EAAWf,EAAQgB,EAAWC,IAEzDqgB,GAAY,SAACxgB,EAAQC,EAAWf,EAAQgB,EAAWC,GACvD,YAASH,EAAQC,EAAWf,EAAQgB,EAAWC,IAG3CsgB,GAAS,SAAUzgB,EAAQC,EAAWf,EAAQgB,EAAWC,GAC7D,IAAMugB,EAAW,IAAmBzgB,EAAW,WAC/CP,GAAGid,MAAMgE,SAAS,mBAAmBD,EAAQ,kBAEzCE,GAAU,SAAU5gB,EAAQC,EAAWf,EAAQgB,EAAWC,GAC9DT,GAAGid,MAAMkE,UAEX,MAAO,CACLC,KAAM,SAAU9gB,EAAQd,EAAQ6hB,GACzBrhB,GAAG0H,eACN1H,GAAG0H,aAAe,IA2MpB,IAAiBpH,EAAQd,GAzMJ,SAACgC,EAAK1B,GAEzB,IAAc0B,EAAK1B,EAAQQ,EAAQd,GAAQ,SAAU8hB,EAAIC,UAChDD,EAAGzY,YAAYC,MAAMC,MAC5B,IAAMA,EAAQvJ,GAAUA,EAAOsJ,OAAS0Y,QAAQhiB,EAAOsJ,MAAMC,OACzDA,GACFuY,EAAGpX,SAAS,QAASnB,GACvB,IAAML,EAAWlJ,GAAUA,EAAOkJ,SAC9BA,IACFlJ,EAAOsJ,MAAMJ,SAAWA,GAC1B,IAAMjJ,EAAO,CACX6hB,GAAE,EACFC,KAAI,GAEND,EAAGnY,eAAe,gBAAiB1J,GAAM,WACvC,IAAMgiB,EAAcH,EAAGpW,IAAI,eAC3B,GAAIuW,aAAuBzhB,GAAGmL,OAAOuW,WAAY,CAC/C,IAAMjP,EAAWgP,EAAY7Y,SAAS,YAChC8J,GAAqB,IAAbD,EAAqB,MAASA,GAAY,EACxDgP,EAAYzY,SAAS,WAAY0J,GAGnC,IAAMjM,EAAY6a,EAAG5a,eACrBD,GAAaA,EAAUsG,GAAG,kBAAkB,WAC1C,IAA2BtG,EAAW6a,EAAIA,EAAGzY,YAAYwE,SAE3DgU,EAAaC,EAAIC,EAAMA,EAAKI,WAC5B5S,EAAUuS,EAAIhhB,GAEd,IAAM2W,EAAiBqK,EAAGpW,IAAI,aAC9B,GAAI+L,GACsBA,EAAerO,SAAS,mBAC3B,CACnB,IAAMgZ,EAAe3K,EAAerO,SAAS,gBACxC5I,GAAGC,MAAMuL,QAAQoW,GAGpBnb,EAAUuC,SAAS,cAAe,MAFlCvC,EAAUuC,SAAS,cAAe4Y,GAMpC,IAAIC,cACNP,EAAGvb,SAAS,oBAAsBub,EAAGvb,SAAS,mBAAmBgH,GAAG,aAAa,WAC/EuU,EAAGzS,IAAIC,GAAG,YAAawS,YAK5B,SAAUA,GACqB,WAA5BA,EAAGzY,YAAYwF,UAAyBiT,EAAGzY,YAAYmG,WAAasS,EAAGzY,YAAYyF,YACrFgT,EAAGzY,YAAYiZ,UAAW,GAC5BR,EAAGS,WACH,IAAMzN,EAAQgN,EAAG5a,eACjB,GAAI4N,EAAO,CACD,IAAAjG,EAAA,cAAAA,SACF2T,GAAUhiB,GAAGwJ,KAAKyR,WAAWgH,MAAQ,IAAI9U,GAE/C,GADkB,CAAC,SAAU,SAAU,cAAe,YACxC+B,QAAQb,IAAa,GAAK/N,GAAU0hB,EAAQ,CACxD,IACI,EADE,EAAkB1hB,EAAM,IAAI0hB,EAElChiB,GAAGkiB,QAAQC,OAAO,YAAa,EAAG,CAAC,aAChCC,MAAK,SAAAtiB,GACAA,EACFE,GAAGkiB,QAAQG,YAAY,CAAEC,YAAa,WAAYC,OAAQ,YAAazO,IAAK,IAAgBsO,MAAK,SAAAtiB,GAE/F,GADA,EAAUA,EACG,CACX,IAAK,IAAMgU,KAAO,EACL,gBAAPA,GAAgC,YAAPA,GAAmBQ,EAAMkO,eAAe1O,EAAK,YAAa,EAAQA,IAE7F,EAAQzJ,UAAYiK,EAAMpJ,IAAI,cAChCoJ,EAAMpJ,IAAI,YAAYb,SAAW,EAAQA,cAI/ClK,QAAQ8S,MAAM,uBAGjBwP,OAAM,SAAAtf,GACLhD,QAAQ8S,MAAM9P,MAGlBmR,EAAMvH,GAAG,kBAAkB,SAAU2V,GACnC,IAAMrO,EAAOqO,EAASrY,SACjB,IAAS,EAAU,CAAEsY,aAAc,IACxC,EAAQtY,SAAWgK,EACnBrU,GAAGkiB,QAAQU,aAAa,EAAS,WAAY,gBAE/CtO,EAAMvH,GAAG,kBAAkB,SAAAC,GACjB,IAAA6V,EAAA,EAAAA,UAAWxC,EAAA,EAAAA,MACd,IAAS,EAAU,CAAEsC,aAAc,IACxC,EAAQE,GAAaxC,EACrBrgB,GAAGkiB,QAAQU,aAAa,EAAS,WAAY,gBAE/CtO,EAAMvH,GAAG,kBAAkB,SAAAC,GACzB,EAAU,CAAEG,GAAI,EAAcmV,YAAa,WAAYC,OAAQ,aAC/DviB,GAAGkiB,QAAQY,kBAAkB,OAInCxB,EAAGvU,GAAG,WAAW,WACf8I,EAAQvV,EAAQghB,MAElBA,EAAGvU,GAAG,QAAQ,SAAUC,GAItB,IAHA,IAAMvG,EAAY6a,EAAG5a,eAEfsB,EAAesZ,EAAGrZ,gBACfC,EAAI,EAAGA,EAAIF,EAAanC,OAAQqC,IACvCF,EAAaE,GAAGC,QAElB,GAAK1B,EAAL,CAaA,GAAIuG,EAAM,CAER,GAAIA,EAAKtN,WACP,IAEE,GAAwB,SADXC,KAAKC,MAAMoN,EAAKtN,YACdsR,KAEb,YADAsQ,EAAGzS,IAAIC,GAAG,YAAawS,GAGzB,MAAOne,KAGb,GAA0B,UAAtBnD,GAAGwJ,KAAK4I,WAAiD,KAAxBpS,GAAGwJ,KAAKuZ,aAAqB,CAChE,IAAM,EAAWtc,EAAUV,SAAS,YACpC,IAAK,EAEH,YADA8P,EAAQvV,EAAQghB,GAGlB7a,EAAU4L,WAAW,YACrB,IAAMnL,EAAeoa,EAAGna,YAAcma,EAAGna,WAAWC,MAAK,SAAAgC,GACvD,OAAOA,EAAEC,UAAsD,YAA1CD,EAAEC,SAAS/B,OAAOC,uBAEnCmC,EAAcxC,GAAgBA,EAAaqC,QAAU,CACzDD,IAAKpC,EAAaqC,QAClBI,OAAQzC,EAAa0C,aAAe,OACpCC,QAAS,CAAEC,MAAM,IACf,CACFR,IAAK,YACLK,OAAQ,OACRE,QAAS,CAAEC,MAAM,IAEbkT,EAAQhd,GAAGwJ,KAAK0P,aAAaC,OAAO,CAAE6J,UAAWtZ,IACjD,EAAS,CACb7C,QAASvG,EACToY,KAAM,CAAErO,SAAU5D,EAAUkS,cAAevO,UAAW,GACtDkE,UAAW,CACT2U,UAAU,EACVC,UAAW,CACT,CAAE5a,MAAO,KAAM6a,GAAI,KAAM1X,OAAQ,EAAS0B,OAIhD6P,EAAMgG,UAAU,GAAQ,SAAU1E,EAAMxe,GAClCA,GAAUA,EAAOsjB,YAActjB,EAAOsjB,WAAWvd,SACnDY,EAAU4c,UAAU,EAAS9c,SAAUzG,EAAOsjB,WAAW,IACzD,IAA2B3c,EAAW6a,YAI1C7a,EAAU6c,aAAa7c,EAAUmS,oBA9DnC,CACE,KAA6B,OAAzB5Y,GAAG0H,aAAa6N,OAEb5K,EAAmB2W,IAAQA,EAAGvb,SAAS,wBAC1C,OAGJiQ,EAAU1V,EAAQghB,EAAIA,EAAGvb,SAAS,uBAAwB,MAAM,WACzDiH,GACLsU,EAAG3b,eAAe4d,iBAAiB,eAAgB,CAAEC,OAAQxW,EAAMyW,UAAU,WAwDnF,IAAMC,EAAgB,IAAI1jB,GAAG2jB,QAC7BrC,EAAGvU,GAAG,UAAU,SAAUmI,GACxB,GAAI,IAAeoM,KAAQ,IAAI9R,uBAAyB8R,EAAGsC,cAAa,GAAQ,CAC9E,IAAMC,EAASvC,EAAGwC,SAAS,UAI3B,OAHID,GAA8C,GAApC5U,EAAEzD,QAAQqY,EAAOE,kBAC7B7O,EAAQ8O,OAAS,CAAEC,IAAK,oBAEnB,EAGT,OAAI/O,GAA8B,iBAAZA,GACpBA,EAAQ8O,OAAS,IACV,IAMThkB,GAAGC,MAAM4H,QAAQ,MAAMqN,EAAO,KAAK,WACjCwO,EAAcQ,aACb,WACDR,EAAcS,YAETT,aAMf5U,GAAI,SAAUsV,EAAK7jB,EAAWf,GAC5B,IAAYgL,KAAM4Z,EAAK7jB,EAAWf,IAEpC8B,OAAQ,WAEN,IAAI+iB,EAAe,GACnB,IACEA,EAAerkB,GAAG0H,aAAa4c,mBAC/B,MAAOrR,GACP9S,QAAQC,IAAI6S,GACZoR,EAAe,GAEjB,IAAME,EAAgB,CACpBxD,OAAQA,GACRG,QAASA,GACTsD,KAAM,IACNC,MAAO,IACP1kB,SAAU,IACV2kB,eAAgB,IAChBC,OAAQ,IACRtiB,KAAM,IACNuiB,YAAa,IACbC,YAAa,IACbC,aAAc,IACdC,eAAgB,IAChB3hB,QAAS,IACT4hB,YAAa,IACbC,WAAY,IACZC,UAAW,IACXC,WAAY,IACZC,UAAW,IACXC,wBAAyB,IACzBC,yBAA0B,IAC1BC,WAAY,IACZC,WAAY,IACZC,cAAe,IACfC,aAAc,IACdC,WAAY,IACZC,aAAc,IACdC,UAAW/f,EACX4P,KAAMA,EACN1O,KAAMA,EACNc,MAAOA,EACPoL,KAAMA,EACN/B,IAAKA,EACLjF,KAAMA,EACN4Z,WAAY9O,EACZpB,KAAMA,EACNmQ,SAAUtQ,EACV/E,QAASA,EACTsV,OAAQlH,GACRmH,YAAa1R,EACb2R,WAAY1R,EACZ2R,aAAc3R,EACd4R,YAAa5R,EACb6R,cAAe7R,EACf8R,QAAS9R,EACTyB,OAAQA,EACRJ,QAASA,EACTmC,OAAQA,EACRuO,YAAajK,GACbkK,YAAalN,EACbmN,WAAYzK,EACZ0K,iBAAkBzK,EAClB0K,aAAcxK,EACdyK,iBAAkBvK,EAClBI,MAAOA,GACPoK,WAAYnJ,GACZoJ,MAAOrW,EACPsW,cAAe,IACfC,SAAU9Q,EACV+Q,UAAWjR,EACXkR,OAAQ7Q,EACR8Q,SAAU1Q,EACV2Q,YAAa,IACbC,kBAAmBlb,EACnByS,OAAQA,GACRhC,QAASA,GACT0K,WAAYtI,GACZuI,UAAWpQ,EACXqQ,UAAWlI,GACX3I,KAAMA,EACNI,MAAOA,EACP0I,WAAYA,GACZgI,YAAajI,GACbkI,aAAc5J,GACd6J,YAAajJ,GACbuB,SAAUA,GACV2H,SAAUjJ,GACVkJ,aAAcnQ,EACdoQ,SAAUjH,GACVkH,OAAQlH,GACR3M,WAAYA,EACZ8T,YAAa,IACbC,UAAWnH,IAEb,OAAOtZ,OAAOC,OAAO8c,EAAeF,KA3sF3B,GAgtFfrkB,GAAGkoB,UAAU,cACbloB,GAAG6O,IAAIsZ,OAAOpjB,OAASA,EAER","file":"public/javascripts/5.bundle.js?_=d566ad53-de75-49ba-965f-44adb4dd2a09","sourcesContent":["import mtl from 'mtl-js-sdk'\n\nfunction _getParams (params) {\n  let data = {};\n  if (params) {\n    if (params.cParameter) {\n      data = JSON.parse(params.cParameter);\n    } else {\n      data = params;\n    }\n  }\n  return data;\n}\n\nfunction _showPrompt (result) {\n  if (mtl.platform !== 'upesn') {\n    cb.utils.alert('当前平台： ' + mtl.platform + ' ，结果：' + result);\n  } else {\n    console.log('当前平台： ' + mtl.platform + ' ，结果：' + result);\n  }\n}\n\nexport function mtlScan (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = {};\n  if (params?.cParameter) {\n    const newParams = JSON.parse(params.cParameter);\n    data.needResult = newParams.needResult ? parseInt(newParams.needResult) : 1;\n    if (newParams.scanType === 'all') {\n      data.scanType = ['qrCode', 'barCode'];\n    } else {\n      if (!Array.isArray(data.scanType)) {\n        data.scanType = [newParams.scanType];\n      }\n    }\n  }\n  mtl.scanQRCode({\n    ...data,\n    success: function (res) {\n      const result = res.resultStr;\n      cb.invoker.publish('mtl', { action: 'scan', result: result });\n      _showPrompt(result);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n};\n\nexport function mtlShare (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.upesn.showShareMenu({\n    ...data,\n    success: function (res) {\n      // 成功回调\n      cb.invoker.publish('mtl', { action: 'share', result: res });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n};\n\nexport function mtlPlatform (billNo, viewmodel, params, beforeAct, afterAct) {\n  const result = mtl.platform;\n  cb.invoker.publish('mtl', { action: 'platform', result: result });\n  _showPrompt(mtl.platform);\n};\n\nexport function mtlNetworkType (billNo, viewmodel, params, beforeAct, afterAct) {\n  mtl.getNetworkType({\n    success: function (res) {\n      const networkType = res.networkType;// 返回网络类型2g，3g，4g，wifi,无网状态下通过fail回调返回错误信息\n      cb.invoker.publish('mtl', { action: 'getNetworkType', networkType });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message;// 错误信息\n      _showPrompt(message);\n    }\n  });\n}\nexport function mtlGetMac (billNo, viewmodel, params, beforeAct, afterAct) {\n  mtl.getMac({\n    success: function (res) {\n      const macAddress = res.macAddress;\n      cb.invoker.publish('mtl', { action: 'getMac', result: macAddress });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message;// 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n\nexport function mtlDail (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.dail({\n    ...data,\n    success: function (res) {\n      cb.invoker.publish('mtl', { action: 'dail', result: res });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message;// 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n\nexport function mtlChooseImage (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = {};\n  if (params?.cParameter) {\n    const newParams = JSON.parse(params.cParameter);\n    data.count = newParams.count;\n    if (newParams.sourceType === 'all') {\n      data.sourceType = ['album', 'camera'];\n    } else {\n      if (!Array.isArray(data.sourceType)) {\n        data.sourceType = [newParams.sourceType];\n      }\n    }\n  }\n  mtl.chooseImage({\n    ...data,\n    success: function (res) {\n      // 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片\n      const localIds = res.localIds; // ['wxLocalResource://imageid123456789987654321', ...]\n      cb.invoker.publish('mtl', { action: 'chooseImage', result: localIds });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n\nexport function mtlGetLocation (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.getLocation({\n    // type: 'wgs84',//默认为wgs84的gps坐标，如果要返回直接给openLocation用的火星坐标，可传入'gcj02'\n    ...data,\n    success: function (res) {\n      // var latitude = res.latitude;// 纬度，浮点数，范围为90~-90\n      // var longitude = res.longitude;// 经度，浮点数，范围为180~-180。\n      cb.invoker.publish('mtl', { action: 'getLocation', result: res });\n      _showPrompt(res);\n    },\n    fail (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n\nexport function mtlOpenLocation (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.openLocation({\n    // latitude: 40.07573,//纬度，浮点数，范围为90~-90\n    // longitude: 116.245412,//经度，浮点数，范围为180~-180。\n    // name: '',//位置名\n    // address: '',//地址详情说明\n    // scale: 1,//地图缩放级别,整形值,范围从1~28。默认为最大\n    ...data,\n    success: function (res) {\n      cb.invoker.publish('mtl', { action: 'openLocation', result: res });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n\nexport function mtlGenerateQRCode (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.generateQRCode({\n    // str: 'hello',//用于生成二维码的字符串\n    // size: 200,//生成图片大小，默认100*100\n    ...data,\n    success: function (res) {\n      // imgSrc为base64字符串\n      // var src = res.imgSrc;\n      cb.invoker.publish('mtl', { action: 'generateQRCode', result: res });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n\nexport function mtlRequest (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  if (data.headers && typeof data.headers === 'string') {\n    try {\n      data.headers = JSON.parse(data.headers);\n    } catch (e) {\n      alert('headers 参数错误')\n      return\n    }\n  }\n  if (data.params && typeof data.params === 'string') {\n    try {\n      data.params = JSON.parse(data.params);\n    } catch (e) {\n      alert('params 参数错误')\n      return\n    }\n  }\n  mtl.request({\n    // url: 'https://some-domain.com/api/user',\n    // method: 'get',\n    // headers: { 'X-Requested-With': 'XMLHttpRequest' },\n    // params: {\n    //   ID: 12345\n    // },\n    ...data,\n    success: function (res) {\n      const data = res.data; // 返回数据\n      cb.invoker.publish('mtl', { action: 'request', result: data });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  })\n}\n\nexport function mtlStartRecord (billNo, viewmodel, params, beforeAct, afterAct) {\n  mtl.startRecord({\n    success: function (res) {\n      cb.invoker.publish('mtl', { action: 'startRecord', result: res });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n\nexport function mtlStopRecord (billNo, viewmodel, params, beforeAct, afterAct) {\n  mtl.stopRecord({\n    success: function (res) {\n      // var localId = res.localId;// 微信音频的本地ID,用空间是BASE64加密处理后的音频数据字符串\n      cb.invoker.publish('mtl', { action: 'stopRecord', result: res });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n\nexport function mtlPlayVoice (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.playVoice({\n    // localId: '', // 需要播放的音频的本地ID，由stopRecord接口获得\n    ...data,\n    success: function (res) {\n      cb.invoker.publish('mtl', { action: 'playVoice', result: res });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n\nexport function mtlPauseVoice (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.pauseVoice({\n    // localId: '', // 需要暂停的音频的本地ID，由stopRecord接口获得\n    ...data,\n    success: function (res) {\n      cb.invoker.publish('mtl', { action: 'pauseVoice', result: res });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n\nexport function mtlStopVoice (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.stopVoice({\n    // localId: '', // 需要停止的音频的本地ID，由stopRecord接口获得\n    ...data,\n    success: function (res) {\n      cb.invoker.publish('mtl', { action: 'stopVoice', result: res });\n      _showPrompt(res);\n    },\n    fail: function (err) {\n      const message = err.message; // 错误信息\n      _showPrompt(message);\n    }\n  });\n}\n/**\n * 修改屏幕方向，横屏或者竖屏\n */\nexport function mtlChangeScreenOrientation (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.changeScreenOrientation({\n    // orientation: true,\n    ...data,\n    success: res => {\n      // 成功回调\n      cb.invoker.publish('mtl', { action: 'changeScreenOrientation', result: res });\n      _showPrompt(res);\n    },\n    fail: err => {\n      const message = err.message;\n      _showPrompt(message);\n    }\n  })\n};\n\n/**\n * 恢复屏幕方向\n */\nexport function mtlRestoreScreenOrientation (billNo, viewmodel, params, beforeAct, afterAct) {\n  mtl.restoreScreenOrientation({\n    success: res => {\n      // 成功回调\n      cb.invoker.publish('mtl', { action: 'restoreScreenOrientation', result: res });\n      _showPrompt(res);\n    },\n    fail: err => {\n      const message = err.message;\n      _showPrompt(message);\n    }\n  })\n};\n\n/**\n * 存储数据\n */\nexport function mtlSetStorage (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.setStorage({\n    // domain: '',\n    // key: '',\n    // data: {},\n    ...data,\n    success: res => {\n      // 成功回调\n      cb.invoker.publish('mtl', { action: 'setStorage', result: res });\n      _showPrompt(res);\n    },\n    fail: err => {\n      const message = err.message;\n      _showPrompt(message);\n    }\n  })\n};\n\n/**\n * 读取数据\n */\nexport function mtlGetStorage (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.getStorage({\n    // domain: '',\n    // key: '',\n    ...data,\n    success: res => {\n      // 成功回调\n      cb.invoker.publish('mtl', { action: 'getStorage', result: res });\n      _showPrompt(res);\n    },\n    fail: err => {\n      const message = err.message;\n      _showPrompt(message);\n    }\n  })\n};\n\n/**\n * 删除数据\n */\nexport function mtlRemoveStorage (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.removeStorage({\n    // domain: '',\n    // key: '',\n    ...data,\n    success: res => {\n      // 成功回调\n      cb.invoker.publish('mtl', { action: 'removeStorage', result: res });\n      _showPrompt(res);\n    },\n    fail: err => {\n      const message = err.message;\n      _showPrompt(message);\n    }\n  })\n};\n\n/**\n * 清除所有数据\n */\nexport function mtlClearStorage (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.clearStorage({\n    // domain: '',\n    ...data,\n    success: res => {\n      // 成功回调\n      cb.invoker.publish('mtl', { action: 'clearStorage', result: res });\n      _showPrompt(res);\n    },\n    fail: err => {\n      const message = err.message;\n      _showPrompt(message);\n    }\n  })\n};\n/**\n * 上传文件\n */\nexport function mtlUploadFile (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.uploadFile({\n    // url: '必填',\n    // filePath: '必填',\n    // header: { 'content-type': 'multipart/form-data' },\n    // formData: '',\n    ...data,\n    success: res => {\n      // 成功回调\n      cb.invoker.publish('mtl', { action: 'uploadFile', result: res });\n      _showPrompt(res);\n    },\n    fail: err => {\n      const message = err.message;\n      _showPrompt(message);\n    }\n  })\n};\n/**\n * 下载文件\n */\nexport function mtlDownloadFile (billNo, viewmodel, params, beforeAct, afterAct) {\n  const data = _getParams(params);\n  mtl.downloadFile({\n    // url: '必填',\n    // fileType: '必填',\n    // header: '',\n    // formBody: '',\n    // jsonBody: '',\n    // autoPreview: '',\n    // fileName: '',\n    ...data,\n    success: res => {\n      // 成功回调\n      cb.invoker.publish('mtl', { action: 'downloadFile', result: res });\n      _showPrompt(res);\n    },\n    fail: err => {\n      const message = err.message;\n      _showPrompt(message);\n    }\n  })\n};\n","/* eslint max-lines: [\"error\", 2800] */\nimport * as common from '../common'\nimport env from '../../helpers/env'\nimport uuid from 'uuid/v1';\nimport { runRules } from '../../staterule/rule';\nimport {\n  mtlScan, mtlShare, mtlPlatform, mtlNetworkType,\n  mtlGetMac, mtlDail, mtlChooseImage, mtlGetLocation, mtlOpenLocation,\n  mtlGenerateQRCode, mtlRequest, mtlStartRecord, mtlStopRecord, mtlPlayVoice,\n  mtlPauseVoice, mtlStopVoice, mtlChangeScreenOrientation, mtlRestoreScreenOrientation, mtlSetStorage, mtlGetStorage, mtlRemoveStorage, mtlClearStorage, mtlUploadFile, mtlDownloadFile\n} from '../mtlapi'\n\nconst themeType = process.env.__THEMETYPE__;\n\nconst yylist = (function () {\n  const _render = (viewmodel, data, dirty) => {\n    common.setRenderReadOnly(viewmodel)\n    common.setState(viewmodel)\n    if (dirty) {\n      viewmodel.setDirty(true)\n      viewmodel.loadDirtyData(data)\n    } else {\n      viewmodel.loadData(data)\n      if (data) {\n        viewmodel.execute('afterLoadData', data);\n        viewmodel.validate(true);\n      }\n    }\n  }\n  const _getTreeSelectNode = (viewmodel) => {\n    let selectNode,\n      node\n    const treeModel = viewmodel.getTreeModel()\n    if (treeModel) {\n      selectNode = treeModel.getSelectedNodes()\n    }\n    if (selectNode && selectNode.length && selectNode[0]) {\n      node = selectNode[0]\n    }\n    return node\n  }\n  const singleDo = (billNo, viewModel, params, beforeAct, afterAct) => {\n    const rowIndex = params && params.params && params.params.index;\n    if (rowIndex == null) return;\n    const gridModel = viewModel.getGridModel();\n    if (!gridModel) return;\n    const currentRow = gridModel.getRow(rowIndex);\n    if (!currentRow) return;\n    const postData = {\n      billnum: billNo,\n      data: JSON.stringify(currentRow)\n    };\n    const beforeActData = {\n      params: params,\n      data: postData\n    };\n    beforeAct(beforeActData, function () {\n      const callback = function (err, res) {\n        if (!err) {\n          cb.utils.alert('操作成功', 'success');\n          viewModel.execute('back');\n        }\n        const afterActData = { err, res };\n        afterAct(afterActData, common.afterAct);\n      };\n      common.doProxy(params, callback, postData);\n    });\n  };\n  const _doService = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    if (!viewmodel.getCache('lastMode')) {\n      singleDo(billNo, viewmodel, params, beforeAct, afterAct);\n      return;\n    }\n    const node = _getTreeSelectNode(viewmodel)\n    if (!node) {\n      cb.utils.alert('请选择有效数据', 'warning');\n      return;\n    }\n    common.doService(billNo, viewmodel, params, beforeAct, afterAct, function (viewmodel, postData, params) {\n      const callback = function (err, res) {\n        if (!err) {\n          cb.utils.alert('操作成功', 'success')\n          const oldData = viewmodel.collectData(true)\n          const newData = common.billMerge(oldData, res)\n          common.setMode(viewmodel, env.VOUCHER_STATE_EDIT)\n          _render(viewmodel, newData)\n          viewmodel.getTreeModel().updateNode(newData);\n        }\n        const afterActData = {\n          err: err,\n          res: res\n        }\n        afterAct(afterActData, common.afterAct)\n      }\n      common.doProxy(params, callback, postData)\n    })\n  }\n  // 启用\n  const open = (billNo, viewModel, params, beforeAct, afterAct) => {\n    params = params || {};\n    if (!params.cAction) {\n      const configParams = viewModel.allActions && viewModel.allActions.find(item => {\n        return item.cAction.trim().toLocaleLowerCase() === 'open';\n      });\n      Object.assign(params, configParams);\n    }\n    if (cb.extendConfig.allConfirm && params.cShowCaption) {\n      cb.utils.confirm(`是否确认${params.cShowCaption}此记录`, function () {\n        _doService(billNo, viewModel, params, beforeAct, afterAct);\n      })\n    } else {\n      _doService(billNo, viewModel, params, beforeAct, afterAct);\n    }\n  };\n  // 停用\n  const close = (billNo, viewModel, params, beforeAct, afterAct) => {\n    params = params || {};\n    if (!params.cAction) {\n      const configParams = viewModel.allActions && viewModel.allActions.find(item => {\n        return item.cAction.trim().toLocaleLowerCase() === 'close';\n      });\n      Object.assign(params, configParams);\n    }\n    if (cb.extendConfig.allConfirm) {\n      cb.utils.confirm('是否确认停用此记录', function () {\n        _doService(billNo, viewModel, params, beforeAct, afterAct);\n      })\n    } else {\n      _doService(billNo, viewModel, params, beforeAct, afterAct);\n    }\n  };\n  // 树卡\n  const _addCard = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const maxLevel = viewmodel.getTreeModel() && viewmodel.getTreeModel().getState('maxLevel');\n    const level = maxLevel === false ? 65536 : (maxLevel || 3);\n    const selectedNode = _getTreeSelectNode(viewmodel)\n    if (selectedNode && selectedNode.level > level) {\n      cb.utils.alert(`分类最多${level + 1}级`, 'error');\n      return;\n    }\n    const postData = {\n      billnum: billNo\n    }\n    const beforeActData = {\n      params: params,\n      data: postData\n    }\n    beforeAct(beforeActData, function () {\n      common.emptyBill(postData, params, function (err, suc) {\n        if (suc) {\n          // viewmodel.clear()\n          common.setMode(viewmodel, env.VOUCHER_STATE_ADD)\n          const treeModel = viewmodel.getTreeModel();\n          const parentField = treeModel.getState('parentField');\n          if (suc[parentField] == null) {\n            if (selectedNode) {\n              suc[parentField] = selectedNode[treeModel.getState('keyField')];\n              suc.parent_name = selectedNode.name;\n            }\n          }\n          _render(viewmodel, suc, true)\n        }\n        const afterActData = {\n          err: err,\n          res: suc\n        }\n        afterAct(afterActData, common.afterAct)\n      })\n    })\n  }\n\n  // 树表添加要跳页\n  const _addVoucher = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    if (cb.rest.interMode === 'touch') {\n      const gridModel = viewmodel.getGridModel();\n      if (gridModel)\n        gridModel.clearCache('backData');\n    }\n    params = params || {};\n    let cParameter = {};\n    let billno;\n    params = params || {};\n    if (params.cParameter) { try { cParameter = JSON.parse(params.cParameter); } catch (e) { } }\n    if (cParameter.billnum && cParameter.type === 'tree') {\n      billno = cParameter.billnum\n    } else {\n      billno = common.getVmParams(viewmodel, 'cardKey')\n    }\n    if (!billno) {\n      cb.utils.alert('元数据未配置cCardKey', 'warning')\n      return\n    }\n    let parentId\n    const node = _getTreeSelectNode(viewmodel)\n    if (node) {\n      parentId = node[viewmodel.getTreeModel().getState('keyField')]\n    }\n    let postData = {\n      params: params,\n      mode: env.VOUCHER_STATE_ADD,\n      action: 'add',\n      carryParams: {},\n      parentId: parentId,\n      parent: node\n    };\n    postData = Object.assign({}, postData, viewmodel.getCache('lastSearchCondition'))\n    const beforeActData = { params: postData };\n    beforeAct(beforeActData, function (args) {\n      if (args)\n        postData.carryParams.externalData = args;\n      cb.loader.runCommandLine('bill', {\n        billtype: 'yyarchive',\n        billno: billno,\n        params: postData\n      }, viewmodel);\n      afterAct();\n    })\n  }\n\n  const _loadGrid = (viewmodel, params, afterAct) => {\n    // 返回同时清空子表数据\n    const allGridmodel = viewmodel.getGridModels();\n    for (let i = 1; i < allGridmodel.length; i++) {\n      allGridmodel[i].clear();\n    }\n    const queryItems = viewmodel.getCache('queryItems') || [];\n    if (queryItems.length) {\n      let flag = false;\n      queryItems.forEach(item => {\n        const field = item.replace(/(\\w)/, function (v) {\n          return v.toUpperCase()\n        }) // 首字母大写\n        if (viewmodel.getCache(`exec${field}`)) return;\n        flag = true;\n      });\n      if (flag) {\n        /* 恢复刷新按钮的状态 */\n        if (afterAct) {\n          afterAct();\n        }\n        return;\n      }\n    }\n    const billType = common.getVmParams(viewmodel, 'billType');\n    if (billType === 'Report') {\n      // const firstQuery = viewmodel.getCache('firstQuery');\n      // if (!firstQuery) {\n      //     viewmodel.setCache('firstQuery', true);\n      //     viewmodel.execute('firstQueryDone', false);\n      //     return;\n      // }\n      viewmodel.execute('firstQueryDone', true);\n    }\n    const { reportId } = viewmodel.getParams().query;\n    const gridModel = viewmodel.getGridModel()\n    if (reportId && !params.reportId)\n      gridModel.setColumns(gridModel.getState('columns'));\n    Object.assign(params, viewmodel.getParams().query);\n    delete params.isSum;\n    const isSum = viewmodel.getCache('isSum');\n    if (isSum != null)\n      params.isSum = isSum;\n    if (gridModel) {\n      gridModel.setState('showSearch', params.showSearch);\n      delete params.showSearch;\n      // 下面四行代码，是为了在显示维度导航时，列表数据不再在点击过滤控件时取，而是在点击维度导航时取列表数据\n      const bDisplay = viewmodel.getCache('bDisplayNavTree');\n      if (bDisplay == true && !params.bFromNav) {\n        return;\n      }\n      gridModel.promiseExecute('beforeLoad', params, function () {\n        const configParams = viewmodel.allActions && viewmodel.allActions.find(x => {\n          return x.cCommand && x.cCommand.trim().toLocaleLowerCase() === 'cmdlist'\n        });\n        let url = configParams && configParams.cSvcUrl || 'bill/list';\n        url = cb.rest._appendUrl(url, viewmodel.getParams().query);\n        const proxyParams = configParams && configParams.cSvcUrl ? {\n          url,\n          method: configParams.cHttpMethod || 'POST',\n          options: { mask: true }\n        } : {\n          url,\n          method: 'POST',\n          options: { mask: true }\n        };\n        gridModel.setDataSource(proxyParams, params, function (result) {\n          const parent = gridModel.getParent();\n          if (parent) {\n            parent.setCache('pageInfo', { recordCount: result.recordCount, pageIndex: result.pageIndex, pageSize: result.pageSize });\n          }\n          const columns = getColumnsData(result);\n          if (!columns) return;\n          this.setColumns(columns.columns, columns.fieldNames);\n        });\n        // 排序功能重置\n        gridModel.setSortColumn();\n        gridModel.setCache('afterAct', afterAct);\n        viewmodel.getCache('cardViewModel') && gridModel.execute('dblClick', {});\n      });\n    }\n  }\n\n  /**\n     * 检测是否查询区必输项\n     */\n  const _validateMustInput = (viewmodel) => {\n    const _filterViewModel = viewmodel.getCache('FilterViewModel');\n    const propertyNames = _filterViewModel._get_data('propertyNames');\n    let flag = true;\n    for (let i = 0; i < propertyNames.length; i++) {\n      const propertyName = propertyNames[i];\n      const property = _filterViewModel.get(propertyName);\n      if (!(property instanceof cb.models.BaseModel) || property._get_data('needCollect') === false || property._get_data('needClear') === false) continue;\n      if (property._get_data('mustInput')) {\n        const value = property.getAllData ? property.getAllData() : property.getData();\n        if (typeof value === 'object') {\n          if (cb.utils.isEmpty(value.value1) && cb.utils.isEmpty(value.value2)) {\n            flag = false\n            break;\n          };\n        } else {\n          if (cb.utils.isEmpty(value)) {\n            flag = false\n            break;\n          }\n        }\n      }\n    }\n    return flag;\n  }\n\n  const getColumnsData = function (result) {\n    if (!result || !result.viewmodel) return;\n    const columns = {}; const fieldNames = [];\n    const columnArray = result.viewmodel.entities.filter(function (item) {\n      return item.bMain && item.cType === 'Bill';\n    })[0].fields;\n    for (let i = 0; i < columnArray.length; i++) {\n      const item = columnArray[i];\n      columns[item.cItemName] = item;\n      fieldNames.push(item.cItemName);\n    }\n    return { columns, fieldNames };\n  };\n\n  const switchGroupSchema = (billNo, viewModel, paramss, beforeAct, afterAct) => {\n    const groupSchemaId = paramss ? paramss.groupSchemaId : undefined;\n    const groupSchemaName = paramss ? paramss.groupSchemaName : undefined;\n    const dimensionId = paramss ? paramss.dimensionId || 9999 : undefined;\n    viewModel.execute('refreshEChartConfig', { billnum: billNo, groupSchemaId, groupSchemaName, dimensionId });\n    viewModel.setCache('execSchema', true);\n    viewModel.setCache('groupSchemaId', groupSchemaId);\n    viewModel.getGridModel().setState('showColumnSetting', !groupSchemaId);\n    const params = Object.assign({\n      billnum: billNo,\n      groupSchemaId,\n      isIncludeMeta: true\n    }, viewModel.getCache('lastSearchCondition'));\n    Object.assign(params, viewModel.getParams().query);\n    _loadGrid(viewModel, params, afterAct);\n  }\n\n  // const _bindUpdateCondition = (viewModel, billNo) => {\n  //   viewModel.on('updateCondition', function (args) {\n  //     _loadGrid(viewModel, {\n  //       billnum: billNo,\n  //       condition: args\n  //     });\n  //   });\n  // }\n  // 绑定附件管理\n  const _bindGridAttachment = (viewmodel, billNo) => {\n    const addAttachment = viewmodel.get('addAttachment');\n    if (!addAttachment) {\n      return;\n    }\n    const gridModels = viewmodel.getGridModels();\n    gridModels.forEach(gridModel => {\n      gridModel.on('beforeSetDataSource', function (dataList) {\n        dataList.forEach(item => {\n          if (!item.attachmentId) {\n            if (item.id) {\n              item.attachmentId = item.id\n            } else {\n              item.attachmentId = uuid();\n            }\n          }\n        });\n        return dataList;\n      });\n    })\n  }\n  const _bindGridDblClick = (viewmodel, billNo) => {\n    const gridModel = viewmodel.getGridModel()\n    if (!gridModel) return\n    let dblClickItemName = null;\n    const columns = gridModel.getColumns();\n    for (const attr in columns) {\n      if (columns[attr].bJointQuery) {\n        dblClickItemName = attr;\n        break;\n      }\n    }\n    gridModel.on('cellJointQuery', function (args) {\n      const rowData = gridModel.getRow(args.rowIndex);\n      if (args.cellName === dblClickItemName) {\n        gridModel.execute('dblClick', rowData, args);\n        gridModel.setCache('backData', { rowIndex: args.rowIndex, id: rowData.id });\n      } else {\n        gridModel.execute('jointQuery', Object.assign(args, { rowData }));\n      }\n    });\n    gridModel.on('dblClick', function (args, cellInfo) {\n      const parent = this.getParent()\n      let params = {\n        mode: env.VOUCHER_STATE_EDIT,\n        readOnly: !viewmodel.getParams().doubleEdit,\n        id: args.id,\n        rowData: args,\n        cellInfo,\n        carryParams: {},\n        cardViewModel: parent.getCache('cardViewModel')\n      }\n      params = Object.assign({}, params, viewmodel.getCache('lastSearchCondition'))\n      if (!gridModel.execute('beforeDblClick', params)) return true\n      const cardKey = common.getVmParams(viewmodel, 'cardKey')\n      if (!cardKey)\n        return\n      if (themeType == 'ncc') {\n        const rows = gridModel.get('dataSource'); // 从原始数据中获取\n        const index = rows.findIndex(item => item.id == args.id);\n        parent.setCache('curVoucherIndex', index);\n      }\n      const dt = {\n        billtype: 'yyarchive',\n        billno: cardKey,\n        params: params\n      }\n      cb.loader.runCommandLine('bill', dt, parent)\n    })\n\n    // TODO  删除主表数据后清除子表数据(一会测试一下）\n    viewmodel.on('afterBatchdelete', res => {\n      const allGridmodel = viewmodel.getGridModels();\n      if (!res.res.failCount) {\n        for (let i = 1; i < allGridmodel.length; i++) {\n          allGridmodel[i].clear();\n        }\n      }\n    });\n    gridModel.on('afterSetDataSource', () => {\n      const afterAct = gridModel.getCache('afterAct');\n      if (afterAct)\n        afterAct();\n      common.setGridActionStates(gridModel, viewmodel);\n    });\n  }\n  // 绑定主子孙表\n  // const _bindGrandSonTable = function (viewmodel, billno) {\n  //   const gridModel = viewmodel.getGridModel()\n  //   if (!gridModel) return\n  //   const gms = viewmodel.getGridModels();\n  //   // 获得所有表，按照excel配置约定配置两个作为主子\n  //   if (gms.length < 2 || !gridModel.getCache('bMain')) {\n  //     return\n  //   }\n  //   // 处理单击主表加载子表数据一屏展示\n  //   gridModel.on('masterTableRowClick', (index) => {\n  //     const id = gridModel.getRow(index).id;\n  //     const proxy = cb.rest.DynamicProxy.create({\n  //       ensure: {\n  //         url: '/bill/detail',\n  //         method: 'GET'\n  //       }\n  //     });\n  //     const cardKey = common.getVmParams(viewmodel, 'cardKey')\n  //     const params = {\n  //       billnum: cardKey,\n  //       id\n  //     }\n  //     proxy.ensure(params, function (err, result) {\n  //       if (err) {\n  //         cb.utils.alert(err.message, 'error');\n  //       } else {\n  //         for (let i = 1; i < gms.length; i++) {\n  //           const subGridModel = gms[i];\n  //           subGridModel._set_data('dataSourceMode', 'local');\n  //           subGridModel.clear();\n  //           // 判断有没有孙表\n  //           if (subGridModel.getCache('cSunBillNo') !== undefined) {\n  //             subGridModel.un('masterTableRowClick');\n  //             subGridModel.on('masterTableRowClick', function (index) {\n  //               const selectedRow = subGridModel.getRow(index);\n  //               const rid = selectedRow.rid;\n  //               if (!rid) {\n  //                 console.error('缺少子表id');\n  //                 return;\n  //               }\n  //               const params = {\n  //                 mode: env.VOUCHER_STATE_EDIT,\n  //                 readOnly: !viewmodel.getParams().doubleEdit,\n  //                 id: rid,\n  //                 rowData: selectedRow,\n  //                 carryParams: {},\n  //               }\n  //               // if (!subGridModel.execute('beforeDblClick', params)) return true\n  //               const dt = {\n  //                 billtype: 'yyarchive',\n  //                 billno: subGridModel.getCache('cSunBillNo'),\n  //                 params\n  //               }\n  //               cb.loader.runCommandLine('bill', dt, viewmodel)\n  //             });\n  //           }\n  //         }\n  //         viewmodel.setData(result);\n  //       }\n  //     });\n  //   });\n  //   const addGrandSonTable = viewmodel.get('addGrandSonTable');\n  //   if (!addGrandSonTable || themeType !== 'ncc') {\n  //     return\n  //   }\n  //   gms.forEach((gridModel, index) => {\n  //     if (index > 0 && !gridModel.getCache('bMain')) {\n  //       gridModel.on('beforeSetDataSource', function (dataList) {\n  //         dataList.forEach(item => {\n  //           if (!item.rid) {\n  //             if (item.id) {\n  //               item.rid = item.id;\n  //             } else {\n  //               item.rid = uuid();\n  //             }\n  //           }\n  //         });\n  //         return dataList;\n  //       });\n  //     }\n  //   })\n  // }\n  const _loadTree = (viewmodel, params, afterAct) => {\n    const configParams = viewmodel.allActions && viewmodel.allActions.find(x => {\n      return x.cCommand && x.cCommand.trim().toLocaleLowerCase() === 'cmdquerytree'\n    });\n    const proxyParams = configParams && configParams.cSvcUrl ? {\n      url: configParams.cSvcUrl,\n      method: configParams.cHttpMethod || 'POST'\n    } : {\n      url: 'bill/querytree',\n      method: 'POST'\n    };\n    const treeModel = viewmodel.getTreeModel()\n    if (treeModel) {\n      treeModel.promiseExecute('beforeLoad', params, function () {\n        treeModel.setDataSource(proxyParams, params)\n        if (afterAct) treeModel.setCache('afterAct', afterAct)\n      })\n    }\n  }\n\n  const _renderTreeArchiveData = (billNo, viewmodel, params) => {\n    const hasChildren = viewmodel.getParams().hasChildren;\n    if (hasChildren) {\n      const data = {\n        billnum: billNo,\n        id: params[viewmodel.getTreeModel().getState('keyField')]\n      }\n      const callback = function (err, data) {\n        if (!err)\n          _render(viewmodel, data);\n      }\n      const configParams = viewmodel.allActions && viewmodel.allActions.find(x => {\n        return x.cCommand && x.cCommand.trim().toLocaleLowerCase() === 'cmddetail';\n      });\n      const options = configParams && configParams.cSvcUrl ? {\n        cSvcUrl: configParams.cSvcUrl,\n        cHttpMethod: configParams.cHttpMethod || 'GET'\n      } : {\n        cSvcUrl: 'bill/detail',\n        cHttpMethod: 'GET'\n      };\n      common.doProxy(options, callback, data)\n    } else {\n      _render(viewmodel, params);\n    }\n  }\n\n  const _bindTreeSelect = (viewmodel, billNo) => {\n    const treeModel = viewmodel.getTreeModel();\n    if (!treeModel) return\n    if (themeType == 'ncc') {\n      // 兼容ncc风格树\n      treeModel.setReadOnly(true);\n    }\n    const gridModel = viewmodel.getGridModel()\n    const { billType } = viewmodel.getParams();\n    treeModel.on('select', function (args) {\n      viewmodel.promiseExecute('beforeTreeSelect', args, function () {\n        if (gridModel || billType === 'TreeList') { // 树表\n          if (!gridModel) return;\n          // if (!args.length) return;\n          viewmodel.setCache('execTree', true);\n          const condition = { billnum: billNo };\n\n          if (args.length) {\n            let { path, id } = args[0];\n            /* 去除根节点id */\n            if (id == 'main')\n              id = ''\n            // fangqg: remove this if because it cause list service error\n            // if (path && id) {\n            //   condition.path = path\n            //   condition.ids = id.toString();\n            // }\n            // else if (path)\n            if (path)\n              condition.path = path;\n            else if (id)\n              condition.ids = id.toString();\n          }\n\n          Object.assign(condition, viewmodel.getCache('lastSearchCondition'));\n          _loadGrid(viewmodel, condition);\n        } else { // 树卡\n          if (args.length) {\n            common.setMode(viewmodel, env.VOUCHER_STATE_EDIT);\n            // _render(viewmodel, args[0]);\n            _renderTreeArchiveData(billNo, viewmodel, args[0]);\n            viewmodel.setCache('lastMode', env.VOUCHER_STATE_EDIT);\n          } else {\n            common.setMode(viewmodel, env.VOUCHER_STATE_ADD);\n            // _render(viewmodel);\n            viewmodel.biz.do('add', viewmodel);\n            viewmodel.setCache('lastMode', env.VOUCHER_STATE_ADD);\n          }\n        }\n        // common.setState(viewmodel)\n      })\n    })\n\n    treeModel.on('afterSetDataSource', () => {\n      if (!gridModel) {\n        const afterAct = treeModel.getCache('afterAct');\n        if (afterAct)\n          afterAct();\n        return;\n      }\n      const afterAct = gridModel.getCache('afterAct');\n      if (afterAct)\n        afterAct();\n    });\n  }\n  const _bindTreeDblClick = (viewmodel, billNo) => {\n    const treeModel = viewmodel.getTreeModel()\n    if (!treeModel) return\n\n    treeModel.on('cellJointQuery', function (args) {\n      const rowData = args.rowData;\n      treeModel.execute('dblClick', rowData);\n      // gridModel.setCache('backData', { rowIndex: args.rowIndex, id: rowData.id });\n    });\n    treeModel.on('dblClick', function (args) {\n      const parent = this.getParent()\n      const params = {\n        mode: env.VOUCHER_STATE_EDIT,\n        readOnly: true,\n        id: args.id,\n        rowData: args,\n        cardViewModel: parent.getCache('cardViewModel')\n      }\n      if (!treeModel.execute('beforeDblClick', params)) return true\n      const dt = {\n        billtype: 'yyarchive',\n        billno: common.getVmParams(parent, 'cardKey'),\n        params: params\n      }\n      cb.loader.runCommandLine('bill', dt, parent)\n    })\n  }\n  const _bindCompareTreeSelect = (viewmodel, billNo) => {\n    const treeModel = viewmodel.getTreeModel()\n    if (!treeModel) return\n    treeModel.on('select', function (args) {\n      const gridModel = viewmodel.getGridModel()\n      if (gridModel && args.length) {\n        let parameter = common.getVmParams(viewmodel, 'foreignKey')\n        if (parameter) {\n          const args = parameter.split('.')\n          if (args && args.length > 1) {\n            parameter = args[1]\n          }\n        }\n        const postData = {\n          billnum: billNo,\n          path: args[0][parameter],\n          operator: 'eq'\n        }\n        _loadGrid(viewmodel, postData)\n      }\n      const data = args[0]\n      common.setMode(viewmodel, env.VOUCHER_STATE_EDIT)\n      _render(viewmodel, data)\n    })\n  }\n\n  const _treeDetailSelect = (viewmodel, billNo, id) => {\n    const treeModel = viewmodel.getTreeModel()\n    if (treeModel) {\n      treeModel.on('afterSetDataSource', function (dataSource) {\n        treeModel.select(id)\n      })\n    }\n  }\n\n  const _setQueryItems = (viewModel, item) => {\n    const queryItems = viewModel.getCache('queryItems') || [];\n    if (queryItems.indexOf(item) === -1)\n      queryItems.push(item);\n    viewModel.setCache('queryItems', queryItems);\n  }\n\n  const _initPage = (viewmodel, billNo) => {\n    const billType = common.getVmParams(viewmodel, 'billType')\n    const filterId = common.getVmParams(viewmodel, 'filterId')\n    const condition = common.getVmParams(viewmodel, 'condition');\n    // const autoLoad = common.getVmParams(viewmodel, 'autoLoad');\n    const id = common.getVmParams(viewmodel, 'detailId')\n    // common.setMode(viewmodel, env.VOUCHER_STATE_BROWSE)\n    // _render(viewmodel)\n\n    switch (billType) {\n      case 'Report': {\n        const viewid = _.get(viewmodel.getParams(), 'query.viewid');\n        if (condition || !filterId) {\n          // viewmodel.setCache('firstQuery', true);\n          _loadGrid(viewmodel, { billnum: billNo, condition: condition });\n        }\n        if (viewid) {\n          // viewmodel.setCache('firstQuery', true);\n          // _loadGrid(viewmodel, { billnum: billNo, condition: condition });\n        }\n        // viewmodel.on('filterSearch', function () {\n        //     viewmodel.setCache('firstQuery', true);\n        // });\n        _bindGridDblClick(viewmodel, billNo);\n        break;\n      }\n      case ('YYList'):\n      case ('ArchiveList'):\n        // if (!filterId && autoLoad !== false) {\n        _loadGrid(viewmodel, {\n          billnum: billNo,\n          condition: condition\n        })\n        // }\n        // if (!filterId)\n        //   _bindUpdateCondition(viewmodel, billNo);\n        _bindGridDblClick(viewmodel, billNo);\n        // _bindGrandSonTable(viewmodel, billNo);\n        // _bindGridAttachment(viewmodel, billNo);\n        break\n      case ('TreeList'): {\n        const treeModel = viewmodel.getTreeModel();\n        if (treeModel && treeModel.getState('defaultSelectedKeys'))\n          _setQueryItems(viewmodel, 'tree');\n        // _loadTree(viewmodel, {\n        //     billnum: billNo,\n        //     treename: common.getVmParams(viewmodel, 'treeName')\n        // })\n        _bindGridAttachment(viewmodel, billNo)\n        if (treeModel && treeModel.getState('banQuery')) {\n        } else {\n          /* add by jinzh1 TreeList 为 有表或无过滤 loadtree */\n          const gridmodel = viewmodel.getGridModel();\n          if (gridmodel || !filterId)\n            _loadTree(viewmodel, {\n              billnum: billNo,\n              treename: common.getVmParams(viewmodel, 'treeName')\n            });\n        }\n        // if(billNo!==\"org_unit_tree_list\"){\n        // _loadTree(viewmodel, {\n        //   billnum: billNo,\n        //   treename: common.getVmParams(viewmodel, 'treeName')\n        // })\n        // }\n        _bindTreeSelect(viewmodel, billNo)\n        _bindTreeDblClick(viewmodel, billNo)\n        _bindGridDblClick(viewmodel, billNo)\n        break\n      }\n      case ('TreeArchive'):\n        // common.setMode(viewmodel, env.VOUCHER_STATE_ADD)\n        _loadTree(viewmodel, {\n          billnum: billNo,\n          treename: common.getVmParams(viewmodel, 'treeName')\n        })\n        _bindTreeSelect(viewmodel, billNo)\n        // _render(viewmodel)\n        viewmodel.biz.do('add', viewmodel);\n        viewmodel.setCache('lastMode', env.VOUCHER_STATE_ADD);\n        break\n      case ('Compare'):\n        common.setMode(viewmodel, env.VOUCHER_STATE_BROWSE)\n        _loadTree(viewmodel, {\n          billnum: billNo,\n          treename: common.getVmParams(viewmodel, 'treeName'),\n          isDistinct: true\n        })\n        _bindCompareTreeSelect(viewmodel, billNo)\n        _bindGridDblClick(viewmodel, billNo)\n        _render(viewmodel)\n        break\n    }\n    // common.setState(viewmodel)\n    if (id) {\n      _treeDetailSelect(viewmodel, billNo, id)\n    }\n  }\n\n  const _getSelectRowIds = (gridModel, para, distinct = true) => { // 默认去重\n    if (!gridModel) return\n    const selectDatas = para && para.params && para.params.index != null\n      ? [gridModel.getRow(para.params.index)]\n      : gridModel.getSelectedRows();\n    const ids = []\n    if (selectDatas && selectDatas.length > 0) {\n      selectDatas.map(function (row) {\n        if (row.id) {\n          ids.push(row.id)\n        }\n      })\n    }\n    return distinct ? [...new Set(ids)] : ids\n  }\n\n  const check4List = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const node = _getTreeSelectNode(viewmodel)\n    if (node) {\n      const treeModel = viewmodel.getTreeModel();\n      params[treeModel.getState('parentField')] = node[treeModel.getState('keyField')];\n    }\n    const beforeActData = {\n      params: params,\n    }\n    beforeAct(beforeActData, function () {\n      common.check(billNo, viewmodel, params, beforeAct, afterAct)\n    })\n  }\n\n  const abandon = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const lastMode = viewmodel.getCache('lastMode');\n    if (!lastMode) {\n      viewmodel.communication({ type: 'return' });\n      return;\n    }\n    const resetOrginalData = (viewmodel) => {\n      // common.setMode(viewmodel, env.VOUCHER_STATE_BROWSE)\n      common.setMode(viewmodel, lastMode);\n      _render(viewmodel, viewmodel.getOriginalData())\n      const afterActData = {\n        res: viewmodel.getOriginalData()\n      }\n      afterAct(afterActData, common.afterAct)\n    }\n    const beforeActData = {\n      params: params\n    }\n    beforeAct(beforeActData, function () {\n      cb.utils.confirm('确定要放弃么', function () {\n        resetOrginalData(viewmodel)\n      });\n    })\n  }\n  const _hasList = (billType) => {\n    return (billType.indexOf('ist') > -1 || billType.toLowerCase() == 'compare') // ArchiveList,TreeList,yylist,compare\n  }\n  const add = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    if (cb.isTest_ImportProgressBall === true) {\n      let tmp = 0;\n      const key = 'asyncImport_' + Math.floor(Math.random() * 10000000000);\n      const timer = setInterval(() => {\n        tmp = tmp + 1;\n        const asyncParams = {\n          asyncData: JSON.stringify({ flag: 1, percentage: tmp, count: tmp, totalCount: 100 }),\n          asyncKey: key,\n          busName: '供应商' + key,\n          curTime: '2019-11-26 10:25:0',\n          fileName: '供应商档案模版.xlsx',\n          fileSize: 327101,\n          percentage: tmp,\n          // itemsTitle:\"供应商\" + key\n        }\n\n        viewmodel.communication({\n          type: 'asyncImport',\n          payload: asyncParams\n        });\n        if (tmp >= 100) {\n          clearInterval(timer);\n        }\n      }, 1000);\n    } else {\n      params = params || {};\n      if (!params.cAction) {\n        const configParams = viewmodel.allActions && viewmodel.allActions.find(item => {\n          return item.cAction.trim().toLocaleLowerCase() === 'add';\n        });\n        Object.assign(params, configParams);\n      }\n      const billType = viewmodel.getParams() && viewmodel.getParams().billType;\n      viewmodel.setCache('curVoucherIndex', -1);\n      if (billType) {\n        if (_hasList(billType)) { // ArchiveList,TreeList,yylist,compare\n          _addVoucher(billNo, viewmodel, params, beforeAct, afterAct)\n        } else {\n          _addCard(billNo, viewmodel, params, beforeAct, afterAct)\n        }\n      } else {\n        console.error('未获得billType')\n      }\n    }\n  }\n\n  const save = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const invalidMsg = viewmodel.validate();\n    if (invalidMsg) {\n      cb.utils.alert('以下数据项校验失败：' + invalidMsg.join(','), 'error');\n      cb.invoker.publishLoadData(false)\n      return;\n    }\n    const data = viewmodel.collectData()\n    if (!data) return\n    const mode = common.getMode(viewmodel)\n    if (mode != env.VOUCHER_STATE_ADD) {\n      data._status = cb.models.DataStates.Update\n    } else {\n      data._status = cb.models.DataStates.Insert\n      const treeModel = viewmodel.getTreeModel();\n      const parentData = data[treeModel.getState('parentField')];\n      if (parentData) {\n        if (treeModel) {\n          const parentNode = treeModel.getNodesByKeys(parentData);\n          if (parentNode && parentNode.length)\n            data.level = parentNode[0].level + 1;\n        }\n      } else {\n        data.level = 1;\n      }\n      // let node = _getTreeSelectNode(viewmodel)\n      // if (node) {\n      //   data.parent = node.id\n      //   let level = !node.level || 1\n      //   data.level = parseInt(level) + 1\n      //   data.path = node.path\n      // }\n    }\n    const postData = {\n      billnum: billNo,\n      data: JSON.stringify(data)\n    }\n    const beforeActData = {\n      params: params,\n      data: postData\n    }\n    beforeAct(beforeActData, function () {\n      const callback = function (err, res) {\n        if (!err) {\n          // let necessaryData = viewmodel.getNecessaryData()\n          const oldData = viewmodel.collectData(true)\n          let condition;\n          const arrayKeys = []\n          for (const key in res) {\n            if (Array.isArray(res[key]) && viewmodel.get(key)?.getDirtyRowIndexes?.()?.length > 0) {\n              arrayKeys.push(key)\n              condition = {};\n            }\n          }\n\n          arrayKeys.forEach((key) => {\n            condition[key] = viewmodel.get(key).getDirtyRowIndexes()\n          })\n          const newData = common.billMerge(oldData, res, condition)\n          common.setMode(viewmodel, env.VOUCHER_STATE_EDIT)\n          _render(viewmodel, newData)\n          viewmodel.execute('updateTreeRefer')\n          const treeModel = viewmodel.getTreeModel();\n          if (viewmodel.getParams().saveRefresh) {\n            _loadTree(viewmodel, {\n              billnum: billNo,\n              treename: common.getVmParams(viewmodel, 'treeName')\n            }, function () {\n              const key = newData[treeModel.getState('keyField')];\n              if (key)\n                treeModel.select(key.toString());\n            });\n          } else {\n            // if (necessaryData[treeModel.getState('keyField')]) {\n            if (mode !== env.VOUCHER_STATE_ADD) {\n              treeModel.updateNode(newData)\n            } else {\n              // let selectKey = treeModel.getSelectedKeys()\n              // let parentKey\n              // if (selectKey && selectKey.length && selectKey[0] != undefined) {\n              //   parentKey = selectKey[0]\n              // }\n              // treeModel.addNode(newData, parentKey)\n              treeModel.addNode(newData, true)\n            }\n          }\n          cb.utils.alert('保存成功', 'success')\n        }\n        const afterActData = {\n          err: err,\n          res: res\n        }\n        afterAct(afterActData, common.afterAct)\n      }\n      params.options = { mask: true };\n      common.doProxy(params, callback, postData)\n    })\n  }\n  // 附件管理\n  const attachment = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const gridModel = viewmodel.getGridModel();\n    const selectDatas = params && params.params && params.params.index != null\n      ? [gridModel.getRow(params.params.index)]\n      : gridModel.getSelectedRows();\n    if (selectDatas.length == 0) {\n      cb.utils.alert('请选择行', 'warning');\n      return\n    }\n    if (selectDatas.length > 1) {\n      cb.utils.alert('附件管理只能单行显示', 'warning');\n      return;\n    }\n\n    const selectRow = selectDatas[0];\n    const attachmentCondition = viewmodel.getCache('attachmentCondition');// 附件管理权限\n    const rowData = Object.assign({\n      id: selectRow.attachmentId\n    }, attachmentCondition);\n    const beforeActData = {\n      params: params,\n      data: rowData\n    }\n    beforeAct(beforeActData, function () {\n      viewmodel.communication({\n        type: 'modal',\n        payload: {\n          key: 'Attachment',\n          data: {\n            size: 'md', // 按钮大小(lg xg md sm)\n            data: rowData,\n            model: viewmodel\n          }\n        }\n      });\n      afterAct()\n    })\n  }\n  const batchDelete = (billNo, viewModel, params, beforeAct, afterAct) => {\n    if (themeType == 'ncc') {\n      batchDo(billNo, viewModel, params, beforeAct, afterAct);\n    } else {\n      batchDo(billNo, viewModel, params, beforeAct, afterAct, true);\n    }\n  }\n\n  const batchDo = (billNo, viewmodel, params, beforeAct, afterAct, confirm) => {\n    // 行删除不实用确认框\n    if (params.cItemName !== 'btnDelete' && params.cItemName !== 'btnDeleteRow') {\n      if (confirm == undefined) {\n        confirm = !!cb.extendConfig.allConfirm;\n      }\n    }\n    let primaryKeyField;\n    if (params.cmdParameter) {\n      try {\n        primaryKeyField = JSON.parse(params.cmdParameter).primarykey;\n      } catch (e) {\n        console.error('batchDo action parameter error: ' + e.message);\n      }\n    }\n    if (!primaryKeyField)\n      primaryKeyField = 'id';\n    const gridModel = viewmodel.getGridModel();\n    const treeModel = viewmodel.getTreeModel();\n    let selectDatas;\n    let cParameter = {};\n    params = params || {};\n    if (params.cParameter) { try { cParameter = JSON.parse(params.cParameter); } catch (e) { } }\n    if (cParameter.billnum && cParameter.type === 'tree') {\n      selectDatas = treeModel.getSelectedNodes();\n      billNo = cParameter.billnum\n    } else if (gridModel) {\n      selectDatas = params && params.params && params.params.index != null\n        ? [gridModel.getRow(params.params.index)]\n        : gridModel.getSelectedRows();\n    } else if (treeModel) {\n      selectDatas = treeModel.getSelectedNodes();\n    }\n    if (!selectDatas || selectDatas.length == 0) {\n      cb.utils.alert('请选择', 'warning')\n      return\n    }\n    let data;\n    if (cParameter.billnum && cParameter.type === 'tree') {\n      data = treeModel.getNecessaryDataForRows(selectDatas);\n    } else if (gridModel) {\n      data = gridModel.getNecessaryDataForRows(selectDatas);\n    } else {\n      data = treeModel.getNecessaryDataForRows(selectDatas);\n    }\n    const paramsData = []; const primaryKeys = [];\n    selectDatas.forEach(function (row, index) {\n      if (row.id && row.pubts) {\n        Object.assign(data[index], {\n          code: row.code,\n          id: row.id,\n          pubts: row.pubts\n        })\n      }\n      if (primaryKeys.indexOf(row[primaryKeyField]) === -1) {\n        paramsData.push(data[index]);\n        primaryKeys.push(row[primaryKeyField]);\n      }\n    }, this)\n    const postData = {\n      billnum: billNo,\n      data: JSON.stringify(paramsData)\n    }\n    const beforeActData = {\n      params: params,\n      data: postData\n    }\n    beforeAct(beforeActData, function () {\n      if (confirm) {\n        const text = viewmodel.getParams().caption;\n        cb.utils.confirm(`是否确认${params.cShowCaption}此${text}？`, function () {\n          _batchDo(viewmodel, params, afterAct, paramsData, postData, primaryKeyField);\n        }, function () {\n          if (params && params.enabledCallback)\n            params.enabledCallback();\n        });\n      } else {\n        _batchDo(viewmodel, params, afterAct, paramsData, postData, primaryKeyField);\n      }\n    })\n  }\n\n  const _batchDo = (viewmodel, params, afterAct, selectDatas, postData, primaryKeyField) => {\n    const callback = function (err, res) {\n      if (!err) {\n        const actionText = params.cShowCaption;\n        if (selectDatas.length === 1) {\n          if (res.failCount) {\n            cb.utils.alert(`${actionText}失败：${res.messages[0]}`, 'error');\n          } else {\n            cb.utils.alert(`${actionText}成功`, 'success');\n          }\n          // } else if (true || \"batchaudit,batchunaudit\".indexOf(params.cAction.toLowerCase()) >= 0) {\n        } else {\n          if (cb.extendConfig.theme === 'ncc' && !viewmodel.getCache('showBatchMsg')) {\n            if (res.failCount > 0) {\n              cb.utils.alert(`共${actionText}${res.count}条, 其中成功${res.sucessCount}条,失败${res.failCount}条`, 'error')\n            } else {\n              cb.utils.alert(`共${actionText}${res.count}条, 其中成功${res.sucessCount}条`, 'success')\n            }\n          } else {\n            viewmodel.communication({\n              type: 'modal',\n              payload: {\n                key: 'BatchMsg',\n                data: {\n                  type: 2,\n                  res,\n                  //   model: viewmodel,\n                  // selectDatas,\n                  // bWhole: (primaryKeyField.toLowerCase() == \"id\") ? true : false,\n                  // dataType: \"yyarchive\"\n                }\n              }\n            });\n          }\n        }\n        // else {\n        //     cb.utils.alert(`共${res.count}条, 成功${res.sucessCount}条,失败${res.failCount}条`)\n        //     if (res.failCount > 0) {\n        //         console.log('fail message↓↓↓↓↓↓↓↓')\n        //         console.dir(res.messages)\n        //     }\n        // }\n        viewmodel.execute('back', params);\n      }\n      const afterActData = {\n        err: err,\n        res: res\n      }\n      afterAct(afterActData, common.afterAct)\n    }\n    common.doProxy(params, callback, postData)\n  }\n\n  const dblClick = (billNo, viewmodel, para, beforeAct, afterAct) => {\n    const gridModel = viewmodel.getGridModel()\n    let id, rowData;\n    let cParameter = {};\n    let billno;\n    para = para || {};\n    if (para.cParameter) { try { cParameter = JSON.parse(para.cParameter); } catch (e) { } }\n    if (cParameter.billnum && cParameter.type === 'tree') {\n      billno = cParameter.billnum\n      const node = _getTreeSelectNode(viewmodel);\n      id = node.id;\n      rowData = node;\n    } else if (gridModel) {\n      const rowIndex = para && para.params && para.params.index;\n      const selectDatas = rowIndex != null ? [gridModel.getRow(para.params.index)] : gridModel.getSelectedRows();\n      if (!selectDatas || selectDatas.length !== 1) {\n        cb.utils.alert('请选择一条数据', 'warning');\n        return;\n      }\n      id = selectDatas[0].id;\n      rowData = selectDatas[0];\n      gridModel.setCache('backData', { rowIndex, id });\n      billno = common.getVmParams(viewmodel, 'cardKey')\n    } else {\n      const node = _getTreeSelectNode(viewmodel);\n      if (!node) {\n        cb.utils.alert('请选择一条数据', 'warning');\n        return;\n      }\n      id = node.id;\n      rowData = node;\n      billno = common.getVmParams(viewmodel, 'cardKey')\n    }\n\n    let params = {\n      params: para,\n      mode: env.VOUCHER_STATE_EDIT,\n      copy: para.copy,\n      id,\n      rowData,\n      carryParams: {}\n    }\n    // 设置缓存 处理卡片页翻页按钮\n    if (gridModel && themeType == 'ncc') {\n      const rows = gridModel.get('dataSource'); // 从原始数据中获取\n      const index = rows.findIndex(item => item.id == id);\n      viewmodel.setCache('curVoucherIndex', index);\n      params = Object.assign({}, params, viewmodel.getCache('lastSearchCondition'))\n    }\n    beforeAct({\n      params: para,\n      carry: params\n    }, function () {\n      const dt = {\n        billtype: 'yyarchive',\n        billno: billno,\n        params: params\n      }\n      cb.loader.runCommandLine('bill', dt, viewmodel)\n      afterAct()\n    })\n  }\n  const edit = (billNo, viewmodel, para, beforeAct, afterAct) => {\n    const billType = viewmodel.getParams() && viewmodel.getParams().billType\n    if (billType) {\n      if (_hasList(billType)) { // ArchiveList,TreeList,yylist,compare\n        dblClick(billNo, viewmodel, para, beforeAct, afterAct)\n      } else {\n        common.edit(billNo, viewmodel, para, beforeAct, afterAct)\n      }\n    }\n  }\n\n  const refresh = (billNo, viewmodel, para, beforeAct, afterAct) => {\n    const params = viewmodel.getCache('lastSearchCondition');\n    const treeModel = viewmodel.getTreeModel()\n    const gridModel = viewmodel.getGridModel();\n    if (!gridModel) {\n      if (cb.extendConfig.theme == 'ncc') {\n        // 判断第一次刷新无条件选择查询的问题，需要主动去查看是否有必输项，并且判断是否空值\n        if (!_validateMustInput(viewmodel) || !params) {\n          return;\n        }\n      }\n      queryTree(billNo, viewmodel, params);\n      return;\n    }\n    const obj = Object.assign({\n      billnum: billNo\n    }, para);\n    const isSum = viewmodel.getCache('isSum')\n    if (isSum != null)\n      obj.isSum = isSum\n    Object.assign(obj, viewmodel.getParams().query);\n    const groupSchemaId = viewmodel.getCache('groupSchemaId');\n    if (groupSchemaId)\n      obj.groupSchemaId = groupSchemaId;\n    if (treeModel) {\n      const node = _getTreeSelectNode(viewmodel)\n      if (node) {\n        const { path, id } = node;\n        if (path && id) {\n          obj.path = path\n          obj.ids = id.toString();\n        }\n        else if (path)\n          obj.path = path;\n        else if (id)\n          obj.ids = id.toString();\n      }\n    }\n    const data = cb.utils.extend(true, obj, params)\n    const beforeActData = {\n      params: params,\n      data: data\n    }\n    if (beforeAct) {\n      beforeAct(beforeActData, function () {\n        _loadGrid(viewmodel, data, afterAct)\n      })\n    } else {\n      _loadGrid(viewmodel, data, afterAct)\n    }\n  }\n\n  const search = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    viewmodel.setCache('execFilter', true);\n    viewmodel.setCache('lastSearchCondition', params);\n    const beforeActData = {\n      params: params,\n      data: params\n    }\n    beforeAct(beforeActData, function () {\n      refresh(billNo, viewmodel, params, null, afterAct)\n    })\n  }\n\n  const queryTree = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    let data = {\n      billnum: billNo,\n      treename: common.getVmParams(viewmodel, 'treeName')\n    }\n    if (params && params instanceof Object) {\n      data = Object.assign(data, params)\n    }\n    const beforeActData = {\n      params: params,\n      data: data\n    }\n    if (beforeAct) {\n      beforeAct(beforeActData, function () {\n        _loadTree(viewmodel, data, afterAct)\n      })\n    } else {\n      _loadTree(viewmodel, data, afterAct)\n    }\n  }\n\n  const editTree = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const treeModel = viewmodel.getTreeModel()\n    if (!treeModel || !params) return\n    if (!params.cTarget) {\n      console.log('未配置tree 的billnumber ,在commend表的target中设置')\n      return\n    }\n    const node = _getTreeSelectNode(viewmodel)\n    if (node) {\n      const para = {}\n      para.detailId = node[treeModel.getState('keyField')];\n      const postData = cb.utils.extend(true, para, {\n        mode: env.VOUCHER_STATE_EDIT\n      })\n      const beforeActData = {\n        params: params,\n        data: postData\n      }\n      beforeAct(beforeActData, function () {\n        const dt = {\n          billtype: 'yylist',\n          billno: params.cTarget,\n          params: postData\n        }\n        cb.loader.runCommandLine('bill', dt, viewmodel)\n        afterAct()\n      })\n    }\n  }\n\n  const moveUp = (billNo, viewModel, params, beforeAct, afterAct) => {\n    const treeModel = viewModel.getTreeModel();\n    if (!treeModel) return;\n    const selectedNodes = treeModel.getSelectedNodes();\n    if (!selectedNodes.length) {\n      cb.utils.alert('请选择一条数据', 'warning');\n      return;\n    }\n    const selectNode = selectedNodes[0];\n    if (treeModel.isFirst(selectNode)) {\n      cb.utils.alert('分类已是同级次的第一个', 'warning');\n      return;\n    }\n    const keyField = treeModel.getState('keyField');\n    const data = {\n      billnum: billNo,\n      action: params.cAction,\n      id: selectNode[keyField]\n    };\n    const beforeActData = {\n      params,\n      data\n    };\n    beforeAct(beforeActData, function () {\n      const callback = function (err, res) {\n        if (!err) {\n          cb.utils.alert(`${params.cShowCaption}成功`, 'success');\n          viewModel.execute('back');\n        }\n        const afterActData = {\n          err,\n          res\n        };\n        afterAct(afterActData, common.afterAct);\n      };\n      common.doProxy(params, callback, data);\n    });\n  }\n\n  const moveDown = (billNo, viewModel, params, beforeAct, afterAct) => {\n    const treeModel = viewModel.getTreeModel();\n    if (!treeModel) return;\n    const selectedNodes = treeModel.getSelectedNodes();\n    if (!selectedNodes.length) {\n      cb.utils.alert('请选择一条数据', 'warning');\n      return;\n    }\n    const selectNode = selectedNodes[0];\n    if (treeModel.isLast(selectNode)) {\n      cb.utils.alert('分类已是同级次的最后一个', 'warning');\n      return;\n    }\n    const keyField = treeModel.getState('keyField');\n    const data = {\n      billnum: billNo,\n      action: params.cAction,\n      id: selectNode[keyField]\n    };\n    const beforeActData = {\n      params,\n      data\n    };\n    beforeAct(beforeActData, function () {\n      const callback = function (err, res) {\n        if (!err) {\n          cb.utils.alert(`${params.cShowCaption}成功`, 'success');\n          viewModel.execute('back');\n        }\n        const afterActData = {\n          err,\n          res\n        };\n        afterAct(afterActData, common.afterAct);\n      };\n      common.doProxy(params, callback, data);\n    });\n  }\n\n  const pull = function (billNo, viewModel, params, beforeAct, afterAct) {\n    let pullBillNo, query;\n    try {\n      query = JSON.parse(params.cmdParameter);\n      pullBillNo = query.billnumber;\n      delete query.billnumber;\n    } catch (e) {\n      console.error('pull action parameter error: ' + e.message);\n    }\n    if (!pullBillNo) return;\n    const postData = {\n      source: 'pull',\n      query,\n    };\n    cb.loader.runCommandLine('bill', {\n      billtype: 'yylist',\n      billno: pullBillNo,\n      params: postData\n    }, viewModel);\n  }\n\n  const pullx = function (billNo, viewModel, params, beforeAct, afterAct) {\n    common.pull(viewModel, params);\n    // return;\n    // let pullBillNo;\n    // try {\n    //     pullBillNo = JSON.parse(params.cmdParameter).billnumber;\n    // } catch (e) {\n    //     console.error('pull action parameter error: ' + e.message);\n    // }\n    // if (!pullBillNo) return;\n    // cb.loader.runCommandLine('bill', {\n    //     billtype: 'yylist',\n    //     billno: pullBillNo,\n    // }, viewModel);\n  }\n\n  const singlePush = (billNo, viewModel, params, beforeAct, afterAct) => {\n    if (!params) return;\n    const rowIndex = params.params && params.params.index;\n    if (rowIndex == null) return;\n    const gridModel = viewModel.getGridModel();\n    if (!gridModel) return;\n    const currentRow = gridModel.getRow(rowIndex);\n    if (!currentRow) return;\n    const data = gridModel.getNecessaryDataForRows([currentRow]);\n    Object.assign(data[0], {\n      id: currentRow.id,\n      pubts: currentRow.pubts\n    });\n    let key;\n    const sumSwitchModel = viewModel.get('sumSwitch');\n    if (sumSwitchModel)\n      key = sumSwitchModel.getState('sumSwitchKey');\n    params.pushKey = key;\n    common.push(viewModel, params, data, beforeAct, afterAct);\n  };\n  const batchPush = (billNo, viewModel, params, beforeAct, afterAct) => {\n    const gridModel = viewModel.getGridModel()\n    // let ids = _getSelectRowIds(gridModel)\n    // if (!ids || ids.length == 0) {\n    const selectDatas = gridModel.getSelectedRows();\n    if (!selectDatas.length) {\n      cb.utils.alert('请选择有效数据', 'warning')\n      return\n    }\n    const data = gridModel.getNecessaryDataForRows(selectDatas);\n    selectDatas.forEach((row, index) => {\n      if (row.id && row.pubts) {\n        Object.assign(data[index], {\n          id: row.id,\n          pubts: row.pubts\n        });\n      }\n    });\n    let key;\n    const sumSwitchModel = viewModel.get('sumSwitch');\n    if (sumSwitchModel)\n      key = sumSwitchModel.getState('sumSwitchKey');\n    params.pushKey = key;\n    common.push(viewModel, params, data, beforeAct, afterAct);\n  }\n  const copy = (billNo, viewModel, params, beforeAct, afterAct) => {\n    if (!params) return;\n    const rowIndex = params.params && params.params.index;\n    if (rowIndex == null) return;\n    const gridModel = viewModel.getGridModel();\n    if (!gridModel) return;\n    const currentRow = gridModel.getRow(rowIndex);\n    if (!currentRow) return;\n    common.copy(viewModel, params, currentRow.id, beforeAct, afterAct);\n  };\n\n  // 推单\n  const push = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const queryString = new cb.utils.queryString(params.cSvcUrl)\n    const targetCode = queryString.get('code')\n    const gridModel = viewmodel.getGridModel()\n    const ids = _getSelectRowIds(gridModel)\n    if (!ids || ids.length == 0) {\n      cb.utils.alert('请选择有效数据', 'warning')\n      return\n    }\n    if (targetCode) {\n      const queryData = {\n        code: targetCode,\n        isMainSelect: 1,\n        childIds: ids\n      }\n      const par = {\n        cSvcUrl: queryString.pathname + queryString.toStr(),\n        cHttpMethod: params.cHttpMethod\n      }\n      const beforeActData = {\n        params: params,\n        data: queryData\n      }\n      beforeAct(beforeActData, function () {\n        const callback = function (err, res) {\n          if (!err) {\n\n          }\n          const afterActData = {\n            err: err,\n            res: res\n          }\n          afterAct(afterActData, common.afterAct)\n        }\n        common.doProxy(par, callback, queryData)\n      })\n    }\n  }\n\n  const queryAsyncProcess = (billNo, viewModel, params, beforeAct, afterAct) => {\n    const { asyncKey, asyncInterval = 1, btnCallBack, fileSize, fileName } = params;\n\n    const curTime = cb.utils.getNowFormatDate();\n    const busName = viewModel.getParams() && (viewModel.getParams().name || viewModel.getParams().caption);\n    const asyncParams = { asyncKey, fileSize, fileName, curTime, busName, percentage: 0, asyncData: '{}' };\n    viewModel.communication({\n      type: 'asyncImport',\n      payload: asyncParams\n    });\n    const _timer = setInterval(() => {\n      asyncImportQuery(viewModel, asyncParams, btnCallBack);\n    }, asyncInterval * 1000);\n    viewModel.setCache(asyncKey, _timer);\n    cb.utils.alert('导入已转入后台处理，可进行其它操作！');\n  }\n\n  const output = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const gridModel = viewmodel.getGridModel()\n    let baseUrl = '';\n    if (window._baseUrl) {\n      baseUrl = window._baseUrl.substr(0, 1) === '/' ? window._baseUrl : '/' + window._baseUrl\n    }\n    const queryUrl = baseUrl + '/files' + params.cSvcUrl;\n    const queryString = new cb.utils.queryString(queryUrl)\n    const format = queryString.has('type') ? queryString.get('type') : 'pdf'\n    const inputParams = {\n      format: format,\n      type: 'yylist',\n      bill: {\n        page: {\n          pageSize: gridModel.getPageSize(),\n          pageIndex: gridModel.getPageIndex()\n        },\n        billnum: billNo\n      }\n    }\n\n    const url = env.HTTP_OUTPUT_BILL\n    const beforeActData = {\n      params: params,\n      data: inputParams\n    }\n    beforeAct(beforeActData, function () {\n      common.createDownloadForm(url, inputParams)\n      afterAct()\n    })\n  }\n  const handleAsyncImportOver = (viewModel, asyncParams, errStr) => {\n    const _timer = viewModel.getCache(asyncParams.asyncKey);\n    viewModel.clearCache(asyncParams.asyncKey);\n    _timer && clearTimeout(_timer);\n    if (errStr) {\n      cb.utils.alert(errStr);\n      asyncParams.bDelTask = true;\n      asyncParams.errStr = errStr;\n      viewModel.communication({\n        type: 'asyncImport',\n        payload: asyncParams\n      });\n    }\n  }\n  const asyncImportQuery = (viewModel, asyncParams, btnCallBack) => {\n    const asyncKey = asyncParams.asyncKey;\n    const url = 'billtemp/getImportProcess?';\n    const proxy = cb.rest.DynamicProxy.create({\n      getImportProcess: {\n        url: url,\n        method: 'GET',\n        options: { mask: false }\n      }\n    })\n\n    proxy.getImportProcess({ asyncKey: asyncKey }, function (err, result) {\n      let errStr = '';\n      if (err) {\n        errStr = err.message;\n        handleAsyncImportOver(viewModel, asyncParams, errStr);\n        return;\n      }\n      if (result) {\n        let res;\n        try {\n          res = JSON.parse(result);\n        }\n        catch (e) {\n          errStr = '模板内容导入失败,返回信息：' + result;\n          handleAsyncImportOver(viewModel, asyncParams, errStr);\n          return;\n        }\n        const percentage = parseFloat(res.percentage || '0');\n        if (res.flag == '0') {\n          errStr = '模板内容导入失败';\n          if (res.data)\n            errStr = errStr + ',返回信息：' + res.data;\n          handleAsyncImportOver(viewModel, asyncParams, errStr);\n        }\n        else if (res.flag == 1 && percentage >= 100) {\n          handleAsyncImportOver(viewModel, asyncParams);\n          viewModel.execute('refresh');\n          viewModel.execute('openNotification', Object.assign({ res: res.data }, asyncParams));\n        }\n        asyncParams.asyncData = result;\n        asyncParams.percentage = percentage;\n        viewModel.communication({\n          type: 'asyncImport',\n          payload: asyncParams\n        });\n      }\n    });\n  }\n\n  const importVoucher = (billNo, viewModel, params, beforeAct, afterAct) => {\n    const btnCallBack = {\n      disabledCallback: params.disabledCallback,\n      enabledCallback: params.enabledCallback\n    }\n    params.disabledCallback = false;\n    params.enabledCallback = false;\n    const beforeActData = { params, data: {} };\n    let isAsync = false;\n    let asyncInterval = 1;\n    const asyncKey = 'asyncImport_' + cb.utils.getNewGuid().replace(/-/g, '');\n    let acceptedFileType = ''\n    if (params.cParameter) {\n      const cParameter = JSON.parse(params.cParameter);\n      if (cParameter) {\n        isAsync = cParameter.isAsync;\n        asyncInterval = cParameter.interval || asyncInterval;\n        acceptedFileType = cParameter.acceptedFileType || ''\n      }\n    }\n    // isAsync = true;\n    beforeAct(beforeActData, function () {\n      const eleInput = document.createElement('input');\n      eleInput.type = 'file';\n      if (acceptedFileType) {\n        eleInput.accept = acceptedFileType // 限定导入文件的类型\n      }\n      eleInput.style.display = 'none';\n      eleInput.onchange = function (e) {\n        cb.utils.loadingControl.start('导入中...');\n        btnCallBack.disabledCallback && btnCallBack.disabledCallback();\n        const formData = new FormData();\n        formData.enctype = 'multipart/form-data';\n        const file = e.target.files[0];\n        const fileName = file && file.name;\n        const fileSize = file && file.size;\n\n        formData.append('file', file);\n        if (beforeActData.data.mapCondition)\n          formData.append('mapCondition', JSON.stringify(beforeActData.data.mapCondition));\n        const xhr = new XMLHttpRequest();\n        let url = `${params.cSvcUrl}?billnum=${common.getVmParams(viewModel, 'cardKey')}`;\n        try {\n          if (common.getVmParams(viewModel, 'cardKey') === 'bd_staff_card') {\n            url = `${params.cSvcUrl}?billnum=${beforeActData.data.mapCondition.billnum}`;\n          }\n        } catch (error) {\n          console.error(error)\n        }\n        // 权限控制逻辑，需要Frame 提供新的传参机制\n        const serviceCode = viewModel.getState('serviceCode') || cb.rest.AppContext.query.serviceCode\n        if (serviceCode) {\n          // formData.append('externalData', JSON.stringify({serviceCode:viewModel.getState('serviceCode')}));\n          url = url + '&serviceCode=' + serviceCode\n        }\n        if (isAsync) {\n          url = url + '&asyncKey=' + asyncKey;\n        }\n        const _url = window._baseUrl ? `${window._baseUrl}${url}` : url;\n        xhr.open('POST', _url, true);\n        xhr.send(formData);\n        if (isAsync) {\n          btnCallBack.enabledCallback && btnCallBack.enabledCallback();\n          xhr.onreadystatechange = function () {\n            cb.utils.loadingControl.end();\n            let bError = false;\n            let errorInfo = '';\n            if (xhr.readyState !== 4) return;\n            if (xhr.status === 200) {\n              let ajaxResult;\n              try {\n                ajaxResult = JSON.parse(xhr.responseText);\n              }\n              catch (e) {\n                bError = true;\n                errorInfo = '模板内容导入失败,返回信息：' + xhr.responseText;\n              }\n              if (ajaxResult && ajaxResult.code === 200) {\n              } else {\n                bError = true;\n                errorInfo = `模板内容导入失败，${ajaxResult.message}。`;\n              }\n            }\n            else if (xhr.status == 0) {\n              bError = true;\n              errorInfo = 'offline';\n            }\n            else {\n              bError = true;\n              errorInfo = '模板内容导入返回信息： xhr.readyState =' + xhr.readyState + '  xhr.status =' + xhr.status + '  xhr.responseText = ' + xhr.responseText;\n            }\n            if (bError) {\n              // let _timer = viewModel.getCache(asyncKey);\n              // viewModel.clearCache(asyncKey);\n              // _timer && clearTimeout(_timer);\n              cb.utils.alert(errorInfo);\n            }\n            else {\n              const queryParams = {\n                asyncKey, asyncInterval, btnCallBack, fileSize, fileName\n              }\n              queryAsyncProcess(billNo, viewModel, queryParams);\n            }\n          };\n        }\n        else {\n          xhr.onreadystatechange = function () {\n            cb.utils.loadingControl.end();\n            if (xhr.readyState !== 4) return;\n            btnCallBack.enabledCallback && btnCallBack.enabledCallback();\n            if (xhr.status === 200) {\n              let ajaxResult;\n              try {\n                ajaxResult = JSON.parse(xhr.responseText);\n              }\n              catch (e) {\n                cb.utils.alert('模板内容导入失败,返回信息：' + xhr.responseText);\n                return;\n              }\n              if (ajaxResult && ajaxResult.code === 200) {\n                const res = ajaxResult.data;\n                if (res.sucessCount)\n                  viewModel.execute('refresh');\n                viewModel.communication({\n                  type: 'modal',\n                  payload: {\n                    key: 'BatchMsg',\n                    data: {\n                      type: 2,\n                      res\n                    }\n                  }\n                });\n              } else {\n                cb.utils.alert(`模板内容导入失败，${ajaxResult.message}。`, 'error');\n              }\n            }\n            else {\n              console.log('模板内容导入返回信息： xhr.readyState =' + xhr.readyState + '  xhr.status =' + xhr.status + '  xhr.responseText = ' + xhr.responseText);\n            }\n          };\n        }\n        document.body.removeChild(eleInput);\n      }\n      document.body.appendChild(eleInput);\n      eleInput.click();\n    });\n  }\n\n  const exportVoucherTemplate = (billNo, viewModel, params, beforeAct, afterAct) => {\n    let baseUrl = '';\n    if (window._baseUrl) {\n      baseUrl = window._baseUrl.substr(0, 1) === '/' ? window._baseUrl : '/' + window._baseUrl\n    }\n    const queryUrl = baseUrl + '/files' + params.cSvcUrl;\n    const queryString = new cb.utils.queryString(queryUrl)\n    const url = queryString.pathname + queryString.toStr();\n    const postData = {\n      billnum: common.getVmParams(viewModel, 'cardKey'),\n    };\n    const beforeActData = {\n      params: params,\n      data: postData\n    };\n    beforeAct(beforeActData, function () {\n      const fileName = viewModel.getParams().caption\n      if (fileName) {\n        postData.fileName = `${fileName}模板`\n      }\n      common.createDownloadForm(url, beforeActData.data);\n      afterAct();\n    });\n  }\n\n  const exportStaticVoucherTemplate = (billNo, viewModel, params, beforeAct, afterAct) => {\n    const openUrl = params && params.cSvcUrl;\n    if (!openUrl) {\n      cb.utils.alert('导出模板的地址为空', 'error');\n      return;\n    }\n    const beforeActData = { params };\n    beforeAct(beforeActData, function () {\n      window.open(openUrl);\n      afterAct();\n    });\n  }\n\n  const exportReport = (billNo, viewModel, params, beforeAct, afterAct) => {\n    // viewModel.communication({\n    //   type: 'modal',\n    //   payload: {\n    //     key: 'openTable2D',\n    //     data: {\n    //       billNo: billNo,\n    //       gridModel: viewModel.getGridModel(),\n    //       params: params\n    //     }\n    //   }\n    // });\n    // return;\n    const isSum = viewModel.getCache('isSum');\n    const gridModel = viewModel.getGridModel();\n    if (gridModel) {\n      const rowsCount = gridModel.getRowsCount();\n      if (!rowsCount) {\n        cb.utils.alert('导出数据不允许为空，请重新选择后重试！', 'error');\n        return;\n      }\n    }\n    let baseUrl = '';\n    if (window._baseUrl) {\n      baseUrl = window._baseUrl.substr(0, 1) === '/' ? window._baseUrl : '/' + window._baseUrl\n    }\n    const queryUrl = baseUrl + '/files' + params.cSvcUrl;\n    const queryString = new cb.utils.queryString(queryUrl)\n    const url = queryString.pathname + queryString.toStr();\n    const postData = Object.assign({\n      billnum: billNo || common.getVmParams(viewModel, 'cardKey'),\n      groupSchemaId: viewModel.getCache('groupSchemaId')\n    }, viewModel.getParams().query, viewModel.getCache('lastSearchCondition'));\n    delete postData.showSearch;\n    if (isSum != null)\n      postData.isSum = isSum\n    const beforeActData = {\n      params: params,\n      data: postData\n    };\n    beforeAct(beforeActData, function () {\n      common.createDownloadForm(url, postData);\n      afterAct();\n    });\n  }\n\n  const subscribeMessage = (billNo, viewModel, params, beforeAct, afterAct) => {\n    viewModel.communication({\n      type: 'modal',\n      payload: {\n        key: 'MessageSubscribe',\n        data: {\n          model: viewModel\n        }\n      }\n    });\n  }\n\n  const batchOutputVoucher = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    let key;\n    const sumSwitchModel = viewmodel.get('sumSwitch');\n    if (sumSwitchModel)\n      key = sumSwitchModel.getState('sumSwitchKey');\n    const gridModel = viewmodel.getGridModel()\n    // if (!gridModel) return\n    // let queryString = new cb.utils.queryString(\"/files\" + params.cSvcUrl)\n    // let format = queryString.has('type') ? queryString.get('type') : 'pdf'\n    // let ids = _getSelectRowIds(gridModel)\n    // if (!ids || ids.length == 0) {\n    //   cb.utils.alert('请选择有效数据', 'warning')\n    //   return\n    // }\n    // let postData = {\n    //   bill: {\n    //     billnum: common.getVmParams(viewmodel, 'cardKey'),\n    //     ids: ids,\n    //     tplid: printID\n    //   },\n    //   format: format,\n    //   type: 'yyarchive'\n    // }\n\n    const postData = { billnum: billNo };\n    if (key)\n      postData.key = gridModel.getColumnState(key, 'cFieldName');\n    const isSum = viewmodel.getCache('isSum');\n    if (isSum != null)\n      postData.isSum = isSum;\n    if (gridModel) {\n      const selectDatas = params && params.params && params.params.index != null\n        ? [gridModel.getRow(params.params.index)]\n        : gridModel.getSelectedRows();\n      if (!selectDatas || selectDatas.length == 0) {\n        cb.utils.alert('请选择', 'warning')\n        return\n      }\n      /* add by jinzh1 列表 批量导出  单次最大2000 */\n      if (selectDatas.length > 2000) {\n        cb.utils.alert('单次最大导出2000条,请重新选择后重试！', 'warning')\n        return\n      }\n      const data = []\n      selectDatas.forEach(function (row) {\n        if (key) {\n          data.push(row[key]);\n        } else if (row.id && row.pubts) {\n          data.push(row.id)\n        }\n      }, this)\n      postData.ids = data.join();\n    }\n    let baseUrl = '';\n    if (window._baseUrl) {\n      baseUrl = window._baseUrl.substr(0, 1) === '/' ? window._baseUrl : '/' + window._baseUrl\n    }\n    const queryUrl = baseUrl + '/files' + params.cSvcUrl;\n    const queryString = new cb.utils.queryString(queryUrl);\n    queryString.set('serviceCode', cb.rest.AppContext.query.serviceCode || '')\n    const url = queryString && queryString.pathname + queryString.toStr()\n    const beforeActData = {\n      params: params,\n      data: postData\n    }\n    beforeAct(beforeActData, function () {\n      const fileName = viewmodel.getParams().caption\n      if (fileName) {\n        postData.fileName = fileName\n      }\n      common.createDownloadForm(url, postData)\n      afterAct()\n    })\n  }\n\n  const print = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const gridModel = viewmodel.getGridModel()\n    if (!gridModel) {\n      return\n    }\n    const pageSize = gridModel.getPageSize()\n    const pageIndex = gridModel.getPageIndex()\n    const postData = {\n      json: {\n        bill: {\n          page: {\n            pageSize: pageSize,\n            pageIndex: pageIndex\n          },\n          billnum: billNo\n        },\n        type: 'yylist',\n        token: true\n      }\n    }\n    const beforeActData = {\n      params: params,\n      data: postData\n    }\n    beforeAct(beforeActData, function () {\n      const callback = function (err, result) {\n        if (err) {\n          console.error(err)\n          return\n        }\n        window.open(result)\n        afterAct()\n      }\n      common.doPrint(postData, params, callback)\n    })\n  }\n  const preview = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    beforeAct({ params }, function () {\n      const template = viewmodel.get('templates').getValue();\n      if (!template) {\n        cb.utils.alert('请选择打印模板', 'warning');\n        return;\n      }\n      const newTab = window.open('about:blank');\n      const proxy = cb.rest.DynamicProxy.create({\n        preview: { url: 'print/printPreview', method: 'POST' }\n      })\n      const ids = _getSelectRowIds(viewmodel.getGridModel())\n      const condition = viewmodel.getCache('lastSearchCondition') ? JSON.stringify(viewmodel.getCache('lastSearchCondition').condition) : null;\n      const args = {\n        route: params.cSvcUrl || '/bill',\n        billno: billNo,\n        template: template,\n        ids: ids,\n        condition: condition\n      };\n      proxy.preview(args, function (err, result) {\n        if (!err) {\n          const random = uuid();\n          const queryString = new cb.utils.queryString(result);\n          queryString.set('random', random);\n          queryString.set('params', null);\n          newTab.location.href = queryString.pathname + decodeURIComponent(queryString.toStr());\n          window.addEventListener('message', (event) => {\n            if (event.data.key === 'context' && event.data.random === random) {\n              args.tenantId = queryString.get('tenantId');\n              newTab.postMessage({ key: 'params', value: args }, event.origin);\n            }\n          }, false);\n        }\n        const afterActData = {\n          err: err,\n          res: result\n        };\n        afterAct(afterActData, common.afterAct);\n      });\n    });\n  }\n  const batchPrintVoucher = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const printID = viewmodel.get(env.VOUCHER_PRINT_KEY) && viewmodel.get(env.VOUCHER_PRINT_KEY).getValue() && viewmodel.get(env.VOUCHER_PRINT_KEY).getValue().toString()\n    const gridModel = viewmodel.getGridModel()\n    const ids = _getSelectRowIds(gridModel)\n    if (!ids || ids.length == 0) {\n      cb.utils.alert('请选择有效数据', 'warning')\n      return\n    }\n    const postData = {\n      json: {\n        bill: {\n          billnum: common.getVmParams(viewmodel, 'cardKey'),\n          ids: ids,\n          tplid: printID\n        },\n        type: 'yyarchive'\n      }\n    }\n    const beforeActData = {\n      params: params,\n      data: postData\n    }\n    beforeAct(beforeActData, function () {\n      const callback = function (err, result) {\n        if (err) {\n          console.error(err)\n          return\n        }\n        window.open(result)\n        afterAct()\n      }\n      common.doPrint(postData, params, callback)\n    })\n  }\n\n  // 打印预览\n  const printPreview = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    beforeAct(params, function () {\n      const gridModel = viewmodel.getGridModel()\n      // if (!gridModel) {\n      //     return\n      // }\n      const { currentParams, url } = common.getPrintParamers(params, 'preview', viewmodel);\n      if (!currentParams)\n        return false;\n      // 优化性能\n      const selectedRow = (gridModel && gridModel.getSelectedRows()) || [];\n      if (selectedRow.length > 500) {\n        cb.utils.confirm('数据量较大，预览可能比较慢，是否使用打印插件，是否直接静默打印', function () {\n          common.printNow(params, viewmodel);\n        }, function () {\n          _morePrintPreview(currentParams, url);\n        });\n      } else {\n        _morePrintPreview(currentParams, url);\n      }\n      // 如果参数字符过大，预览打印会有问题，做个兼容处理\n\n      afterAct()\n    })\n  }\n  const _morePrintPreview = (currentParams, url) => {\n    const urlParams = common.combineParams(currentParams);\n    if (urlParams.length > 2000) {\n      const proxy = cb.rest.DynamicProxy.create({\n        cacheData: { url: '/cachePrint', method: 'post', options: { uniform: false } }\n      })\n      const newUrlParams = JSON.stringify(currentParams.params);\n      proxy.cacheData({ param: newUrlParams }, function (_err, rs) {\n        if (rs) {\n          currentParams.sendType = 7;\n          currentParams.params = rs.key;\n          const newTempUrlParams = common.combineParams(currentParams);\n          window.open(url + newTempUrlParams, '_blank')\n        }\n      });\n    } else {\n      window.open(url + urlParams, '_blank')\n    }\n  }\n  // 打印设计\n  const printDesign = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    beforeAct({ params }, function () {\n      // let gridModel = viewmodel.getGridModel()\n      // if (!gridModel) {\n      //     return\n      // }\n      const { currentParams, url } = common.getPrintParamers(params, 'design', viewmodel);\n      window.open(url + common.combineParams(currentParams), '_blank')\n    })\n  }\n\n  // 直接打印\n  const printNow = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    beforeAct(params, function () {\n      common.printNow(params, viewmodel);\n      afterAct()\n    })\n  }\n  const savebo = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const proxy = cb.rest.DynamicProxy.create({\n      saveBo: { url: 'print/saveBo', method: 'GET' }\n    })\n    proxy.saveBo({ billno: billNo }, function (err, result) {\n      if (err) {\n        cb.utils.alert(err.message, 'error');\n        return;\n      }\n      cb.utils.alert('保存业务对象成功', 'success');\n    });\n  }\n  const doDelete = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    // * 改造pc的逻辑，条目左滑删除由grid组件自己调用传参维护\n    // const node = _getTreeSelectNode(viewmodel)\n    // if (!node) {\n    //   cb.utils.alert('请选择有效数据', 'warning');\n    //   return;\n    // }\n    // if (node && node.children && node.children.length > 0) {\n    //   cb.utils.alert('有下级，不能删除', 'warning')\n    //   return\n    // }\n    // const data = viewmodel.getNecessaryData()\n    const data = params.rowData;\n    const index = params.index;\n    delete params.rowData;\n    delete params.index;\n    const postData = {\n      billnum: billNo,\n      data: JSON.stringify(data)\n    }\n    const beforeActData = {\n      params: params,\n      data: postData\n    }\n    beforeAct(beforeActData, function () {\n      cb.utils.confirm('确定要删除么', function () {\n        common.doProxy(params, function (err, suc) {\n          if (!err) {\n            // const treeModel = viewmodel.getTreeModel()\n            // if (treeModel) {\n            //   const key = treeModel.getSelectedKeys()\n            //   if (key && key.length == 1) {\n            //     treeModel.deleteNode(key)\n            //     // viewmodel.clear()\n            //     common.setMode(viewmodel, env.VOUCHER_STATE_ADD);\n            //     // _render(viewmodel);\n            //     viewmodel.biz.do('add', viewmodel);\n            //   }\n            // }\n            const gridModel = viewmodel.getGridModel();\n            if (gridModel) {\n              gridModel.deleteRows([index])\n            }\n            cb.utils.alert('操作成功', 'success')\n          }\n          const afterActData = {\n            err: err,\n            res: suc\n          }\n          afterAct(afterActData, common.afterAct)\n        }, postData)\n      })\n    })\n  }\n\n  const localPrint = function (billNo, viewModel, params, beforeAct, afterAct) {\n    if (viewModel.getParams().billType === 'Report') {\n      localPrintReport(billNo, viewModel, params, beforeAct, afterAct);\n      return;\n    }\n    const id = viewModel.get('id') && viewModel.get('id').getValue();\n    const code = viewModel.get('code') && viewModel.get('code').getValue();\n    if (cb.utils.isEmpty(id) && cb.utils.isEmpty(code)) {\n      cb.utils.alert('未找到具体单据', 'error');\n      return;\n    }\n    const cardKey = common.getVmParams(viewModel, 'cardKey');\n    if (cb.utils.isEmpty(cardKey)) {\n      cb.utils.alert('元数据未配置cCardKey', 'error');\n      return;\n    }\n    const proxy = cb.rest.DynamicProxy.create({\n      getTemplate: { url: 'print/getTemplateByBo', method: 'GET', options: { mask: true } },\n      print: { url: 'bill/getTemplateStructure', method: 'POST', options: { mask: true } }\n    });\n    proxy.getTemplate({ billno: cardKey }, function (err, data) {\n      if (err) {\n        cb.utils.alert(err.message, 'error');\n        return;\n      }\n      const templateCode = data.length === 1 ? data[0] : data.find(item => {\n        return item.isdefault;\n      });\n      if (cb.utils.isEmpty(templateCode)) {\n        cb.utils.alert('没有设置打印模板，请检查', 'error');\n        return;\n      }\n      const params = { billno: cardKey, templateCode: templateCode.templatecode };\n      if (code)\n        params.code = code;\n      else\n        params.ids = [id];\n      proxy.print(params, function (err, result) {\n        if (err) {\n          cb.utils.alert(err.message, 'error');\n          return;\n        }\n        beforeAct(result, function () {\n          cb.utils.localPrint(result);\n        });\n      });\n    });\n  }\n\n  const sumSwitch = function (billNo, viewModel, params, beforeAct, afterAct) {\n    viewModel.setCache('isSum', viewModel.get('sumSwitch').getValue() || null);\n    refresh(billNo, viewModel, { isIncludeMeta: true }, beforeAct, afterAct);\n  }\n\n  const localPrintReport = function (billNo, viewModel, params, beforeAct, afterAct) {\n    const proxy = cb.rest.DynamicProxy.create({\n      getTemplate: { url: 'print/getTemplateByBo', method: 'GET', options: { mask: true } },\n      print: { url: 'report/getTemplateStructure', method: 'POST', options: { mask: true } }\n    });\n    proxy.getTemplate({ billno: billNo }, function (err, data) {\n      if (err) {\n        cb.utils.alert(err.message, 'error');\n        return;\n      }\n      const templateCode = data.length === 1 ? data[0] : data.find(item => {\n        return item.isdefault;\n      });\n      if (cb.utils.isEmpty(templateCode)) {\n        cb.utils.alert('没有设置打印模板，请检查', 'error');\n        return;\n      }\n      const lastSearchCondition = viewModel.getCache('lastSearchCondition');\n      const condition = lastSearchCondition ? JSON.stringify(lastSearchCondition.condition) : null;\n      const params = { billno: billNo, templateCode: templateCode.templatecode, condition, route: '/report/bill' };\n      proxy.print(params, function (err, result) {\n        if (err) {\n          cb.utils.alert(err.message, 'error');\n          return;\n        }\n        beforeAct(result, function () {\n          cb.utils.localPrint(result);\n        });\n      });\n    });\n  }\n  const batchModify = (billNo, viewModel, params, beforeAct, afterAct) => {\n    viewModel.communication({\n      type: 'modal',\n      payload: {\n        key: 'batchModify',\n        data: {\n          billType: 'list',\n          billNo: billNo,\n          model: viewModel,\n          params: params\n        }\n      }\n    });\n\n    // let gridModel = viewModel.getGridModel()\n    // let ids = _getSelectRowIds(gridModel)\n    // if (!ids || ids.length == 0) {\n    //   cb.utils.alert('请选择有效数据', 'warning')\n    //   return\n    // }\n    // common.push(viewModel, params, ids, beforeAct, afterAct);\n  }\n\n  const jointquery = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const cardKey = common.getVmParams(viewmodel, 'cardKey')\n    if (!cardKey) {\n      cb.utils.alert('元数据未配置cCardKey', 'warning')\n      return\n    }\n    const data = {\n      params: { editType: 'jointquery' },\n      parentViewModel: viewmodel,\n      billNum: cardKey,\n      billId: viewmodel.getGridModel().getRow(params.params.index).id\n    };\n    viewmodel.communication({\n      payload: {\n        title: '单据联查结果显示',\n        type: 'platform',\n        url: 'voucher-search/ShowFlow',\n        // url: 'voucher-search/useShowFlow',\n        checkReturn: true,\n        modal: viewmodel,\n        data: data\n      }\n    });\n  }\n\n  const workflow = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    const gridModel = viewmodel.getGridModel();\n    const rowIndex = params && params.params && params.params.index;\n    if (rowIndex == null) return;\n    if (!gridModel) return;\n    const currentRow = gridModel.getRow(rowIndex);\n    if (!currentRow) return;\n    if (!currentRow.isWfControlled || currentRow.verifystate === 0) { // 如果没走审批流程，或者审批状态是自由态\n      cb.utils.alert('暂无审批详情', 'warning')\n      return;\n    }\n    const cardKey = common.getVmParams(viewmodel, 'cardKey');\n    let businessKey = `${cardKey}_${currentRow.id}`;\n    if (!cardKey) {\n      businessKey = `${billNo}_${currentRow.id}`;\n    }\n    const data = {\n      width: 850,\n      height: 510,\n      appsource: env.appCode,\n      businessKey\n    };\n    const beforeActData = {\n      params: params,\n      data: data\n    };\n    beforeAct(beforeActData, function () {\n      const flowCompIns = window.flowComp(data);\n      flowCompIns.showFlowBox({\n        onClose(callbackData) {\n          if (process.env.__THEMETYPE__ == 'ncc') {\n            const queryItems = viewmodel.getCache('queryItems') || [];\n            queryItems.forEach(item => {\n              const field = item.replace(/(\\w)/, function (v) {\n                return v.toUpperCase()\n              }) // 首字母大写\n              viewmodel.setCache(`exec${field}`, true)\n            });\n            refresh(billNo, viewmodel);\n          } else {\n            viewmodel.execute('back');\n          }\n        }\n      });\n    });\n  }\n\n  const doCommunication = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    common.doCommunication(billNo, viewmodel, params, beforeAct, afterAct)\n  }\n  const stateRule = (billNo, viewmodel, params, beforeAct, afterAct) => {\n    runRules(billNo, viewmodel, params, beforeAct, afterAct)\n  }\n\n  const newadd = function (billNo, viewmodel, params, beforeAct, afterAct) {\n    const cCardKey = common.getVmParams(viewmodel, 'cardKey');\n    cb.route.pushPage(`/view/yyarchive/${cCardKey}MobileArchive`)\n  };\n  const newback = function (billNo, viewmodel, params, beforeAct, afterAct) {\n    cb.route.goBack()\n  };\n  return {\n    init: function (billNo, params, viewCallback) {\n      if (!cb.extendConfig) {\n        cb.extendConfig = {};\n      }\n      const initCallback = (err, result) => {\n        // const vmAndview =\n        common.initVM(err, result, billNo, params, function (vm, view) {\n          delete vm.getParams().query.isSum;\n          const isSum = params && params.query && Boolean(params.query.isSum);\n          if (isSum)\n            vm.setCache('isSum', isSum);\n          const reportId = params && params.reportId;\n          if (reportId)\n            params.query.reportId = reportId;\n          const data = {\n            vm,\n            view\n          }\n          vm.promiseExecute('afterLoadMeta', data, function () {\n            const parentModel = vm.get('parent_name');\n            if (parentModel instanceof cb.models.ReferModel) {\n              const maxLevel = parentModel.getState('maxLevel');\n              const level = maxLevel === false ? 65536 : (maxLevel || 3);\n              parentModel.setState('maxLevel', level);\n            }\n            // 解决新增行的时候操作栏按钮显示状态不同步\n            const gridModel = vm.getGridModel();\n            gridModel && gridModel.on('afterInsertRow', () => {\n              common.setGridActionStates(gridModel, vm, vm.getParams().mode);\n            });\n            viewCallback(vm, view, view.cBillName)\n            _initPage(vm, billNo)\n            /* 列表跨页选择问题 */\n            const sumSwitchModel = vm.get('sumSwitch');\n            if (sumSwitchModel) {\n              const crossPageSelect = sumSwitchModel.getState('crossPageSelect');\n              if (crossPageSelect) {\n                const sumSwitchKey = sumSwitchModel.getState('sumSwitchKey');\n                if (!cb.utils.isEmpty(sumSwitchKey))\n                  gridModel.setState('rowKeyField', sumSwitchKey);\n                else\n                  gridModel.setState('rowKeyField', 'id');\n              }\n            }\n\n            if (env.USESTATERULE) {\n              vm.getCache('FilterViewModel') && vm.getCache('FilterViewModel').on('afterInit', function () {\n                vm.biz.do('staterule', vm)\n              })\n            }\n            // vm.execute('afterMount')\n          })\n        }, function (vm) {\n          if (vm.getParams().billType === 'Report' && vm.getParams().filterId && !vm.getParams().condition)\n            vm.getParams().autoLoad = false;\n          vm.initData()\n          const model = vm.getGridModel();\n          if (model) {\n            const { billType } = vm.getParams();\n            const userId = (cb.rest.AppContext.user || {}).id;\n            const billTypes = ['Report', 'YYList', 'ArchiveList', 'TreeList'];\n            if (billTypes.indexOf(billType) > -1 && billNo && userId) {\n              const localDataKey = `${billNo}_${userId}`;\n              let curData;\n              cb.indexDB.openDB('cacheInfo', 1, ['billInfo'])\n                .then(result => {\n                  if (result) {\n                    cb.indexDB.IDB_getData({ dbTableName: 'billInfo', dbName: 'cacheInfo', key: localDataKey }).then(result => {\n                      curData = result;\n                      if (curData) {\n                        for (const key in curData) {\n                          if (key != 'indexedDB_id' && key != 'pageSize') model.setColumnState(key, 'iColWidth', curData[key]);\n                        }\n                        if (curData.pageSize && model.get('pageInfo'))\n                          model.get('pageInfo').pageSize = curData.pageSize;\n                      }\n                    })\n                  } else {\n                    console.error('打开数据库失败，缓存功能不可用！')\n                  }\n                })\n                .catch(e => {\n                  console.error(e)\n                })\n\n              model.on('pageInfoChange', function (pageInfo) {\n                const size = pageInfo.pageSize;\n                if (!curData) curData = { indexedDB_id: localDataKey };\n                curData.pageSize = size;\n                cb.indexDB.IDB_saveData(curData, 'billInfo', 'cacheInfo');\n              });\n              model.on('colWidthResize', args => {\n                const { columnKey, width } = args;\n                if (!curData) curData = { indexedDB_id: localDataKey };\n                curData[columnKey] = width;\n                cb.indexDB.IDB_saveData(curData, 'billInfo', 'cacheInfo');\n              });\n              model.on('colWidthReturn', args => {\n                curData = { id: localDataKey, dbTableName: 'billInfo', dbName: 'cacheInfo' };\n                cb.indexDB.IDB_deleteOneData(curData);\n              })\n            }\n          }\n          vm.on('refresh', function () {\n            refresh(billNo, vm);\n          });\n          vm.on('back', function (args) {\n            const gridModel = vm.getGridModel();\n            // 返回同时清空子表数据\n            const allGridmodel = vm.getGridModels();\n            for (let i = 1; i < allGridmodel.length; i++) {\n              allGridmodel[i].clear();\n            }\n            if (!gridModel) {\n              if (cb.extendConfig.theme == 'ncc') {\n                // 判断第一次刷新无条件选择查询的问题，需要主动去查看是否有必输项，并且判断是否空值\n                if (!_validateMustInput(vm) || !vm.getCache('lastSearchCondition')) {\n                  return;\n                }\n              }\n              queryTree(billNo, vm, vm.getCache('lastSearchCondition'), null, function () {\n                if (!args) return;\n                vm.getTreeModel().doPropertyChange('setExpandRow', { rowKey: args, isExpand: true });\n              });\n              return;\n            }\n            if (args) {\n              let cParameter = {};\n              if (args.cParameter) {\n                try {\n                  cParameter = JSON.parse(args.cParameter);\n                  if (cParameter.type === 'tree') {\n                    vm.biz.do('queryTree', vm);\n                    return\n                  }\n                } catch (e) { }\n              }\n            }\n            if (cb.rest.interMode === 'touch' || cb.rest.terminalType == '3') {\n              const backData = gridModel.getCache('backData');\n              if (!backData) {\n                refresh(billNo, vm);\n                return;\n              }\n              gridModel.clearCache('backData');\n              const configParams = vm.allActions && vm.allActions.find(x => {\n                return x.cCommand && x.cCommand.trim().toLocaleLowerCase() === 'cmdlist'\n              });\n              const proxyParams = configParams && configParams.cSvcUrl ? {\n                url: configParams.cSvcUrl,\n                method: configParams.cHttpMethod || 'POST',\n                options: { mask: true }\n              } : {\n                url: 'bill/list',\n                method: 'POST',\n                options: { mask: true }\n              };\n              const proxy = cb.rest.DynamicProxy.create({ queryData: proxyParams });\n              const params = {\n                billnum: billNo,\n                page: { pageSize: gridModel.getPageSize(), pageIndex: 1 },\n                condition: {\n                  isExtend: true,\n                  simpleVOs: [\n                    { field: 'id', op: 'eq', value1: backData.id }\n                  ]\n                }\n              };\n              proxy.queryData(params, function (_err, result) {\n                if (result && result.recordList && result.recordList.length) {\n                  gridModel.updateRow(backData.rowIndex, result.recordList[0]);\n                  common.setGridActionStates(gridModel, vm);\n                }\n              });\n            } else {\n              gridModel.setPageIndex(gridModel.getPageIndex());\n            }\n          });\n          const returnPromise = new cb.promise();\n          vm.on('return', function (caption) {\n            if (common.getMode(vm) === env.VOUCHER_STATE_BROWSE || !vm.getDirtyData(false)) {\n              const portal = vm.getRudux('portal');\n              if (portal && _.isEmpty(portal.asyncImportArr) == false) {\n                caption.prompt = { msg: '有异步处理正在进行，请检查。' };\n              }\n              return true;\n            }\n\n            if (caption && typeof caption === 'object') {\n              caption.prompt = {};\n              return true;\n            }\n            // returnSave(billNo, vm, function () {\n            //   returnPromise.resolve();\n            // });\n            // return returnPromise;\n            cb.utils.confirm(`确定要${caption}么`, function () {\n              returnPromise.resolve();\n            }, function () {\n              returnPromise.reject();\n            });\n            return returnPromise;\n          });\n        })\n      }\n      common.fetchMeta(billNo, params, initCallback)\n    },\n    do: function (act, viewmodel, params) {\n      common.todo(this, act, viewmodel, params)\n    },\n    action: function () {\n      // 增加扩展机制，没有配置传入容错处理 yueming\n      let yylistExtend = {}\n      try {\n        yylistExtend = cb.extendConfig.yylistExtendConfig;\n      } catch (error) {\n        console.log(error);\n        yylistExtend = {}\n      }\n      const voucherAction = {\n        newadd: newadd,\n        newback: newback,\n        scan: mtlScan,\n        share: mtlShare,\n        platform: mtlPlatform,\n        getnetworktype: mtlNetworkType,\n        getmac: mtlGetMac,\n        dail: mtlDail,\n        chooseimage: mtlChooseImage,\n        getlocation: mtlGetLocation,\n        openlocation: mtlOpenLocation,\n        generateqrcode: mtlGenerateQRCode,\n        request: mtlRequest,\n        startrecord: mtlStartRecord,\n        stoprecord: mtlStopRecord,\n        playvoice: mtlPlayVoice,\n        pausevoice: mtlPauseVoice,\n        stopvoice: mtlStopVoice,\n        changescreenorientation: mtlChangeScreenOrientation,\n        restorescreenorientation: mtlRestoreScreenOrientation,\n        setstorage: mtlSetStorage,\n        getstorage: mtlGetStorage,\n        removestorage: mtlRemoveStorage,\n        clearstorage: mtlClearStorage,\n        uploadfile: mtlUploadFile,\n        downloadfile: mtlDownloadFile,\n        doservice: _doService,\n        copy: copy,\n        open: open,\n        close: close,\n        save: save,\n        add: add,\n        push: push,\n        singlepush: singlePush,\n        edit: edit,\n        dblclick: dblClick,\n        abandon: abandon,\n        delete: doDelete,\n        batchdelete: batchDelete,\n        batchaudit: batchDo,\n        batchunaudit: batchDo,\n        batchsubmit: batchDo,\n        batchunsubmit: batchDo,\n        batchdo: batchDo,\n        search: search,\n        refresh: refresh,\n        output: output,\n        batchoutput: batchOutputVoucher,\n        batchimport: importVoucher,\n        tempexport: exportVoucherTemplate,\n        statictempexport: exportStaticVoucherTemplate,\n        reportexport: exportReport,\n        messagesubscribe: subscribeMessage,\n        print: print,\n        batchprint: batchPrintVoucher,\n        check: check4List,\n        columnsetting: common.columnsetting,\n        edittree: editTree,\n        querytree: queryTree,\n        moveup: moveUp,\n        movedown: moveDown,\n        commandLine: common.commandLine,\n        switchgroupschema: switchGroupSchema,\n        savebo: savebo,\n        preview: preview,\n        localprint: localPrint,\n        batchpush: batchPush,\n        sumswitch: sumSwitch,\n        pull: pull,\n        pullx: pullx,\n        jointquery: jointquery,\n        batchmodify: batchModify,\n        printpreview: printPreview, // 打印预览\n        printdesign: printDesign, // 打印设计\n        workflow: workflow,\n        printnow: printNow, // 直接打印\n        asyncprocess: queryAsyncProcess, // 异步Process,\n        openpage: doCommunication, // 打开弹框\n        goback: doCommunication, // 返回上一级\n        attachment: attachment, // 附件管理\n        billsetting: common.openBillModal,\n        staterule: stateRule // 公式联动\n      }\n      return Object.assign(voucherAction, yylistExtend);\n    }\n  }\n})()\n\ncb.namespace('biz.common')\ncb.biz.common.yylist = yylist\n\nexport default yylist\n"],"sourceRoot":""}